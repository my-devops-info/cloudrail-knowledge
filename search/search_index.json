{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Overview Cloudrail is a tool for automating security for your Infrastructure-as-Code. For an IaC like Terraform, Cloudrail inspects your Terraform plan and validates misconfigurations using policy-as-code. Cloudrail can be integrated into your CI pipeline to automate security analysis across your organization. Cloudrail's Policy-as-Code structure is unique as each rule will validate both your live infrastructure and IaC. Effectively, you can consolidate your cloud infrastructure analysis for live state and build state with Cloudrail's Policy-as-Code framework. The rules use a context model that is included in this repository. This documentation section will cover the different aspects of the context model - how it's created, how it's used, and details of every class and attribute in the model. The code for all rules and context is located in the cloudrail-knowledge repository. Prerequisites You are expected to be able to read and understand Python code. If you wish to submit contributions to this repository, you will also need to know how to write Python code. However the code used to write rules is fairly basic in structure, and so you don't need 10+ years of experience. Why a context model with Python? There are many ways to build rule engines. You could use simple query languages (like jq 's language), invent your own complicated ones (like SQL), or even go and invent your own language (like HashiCorp Sentinel or OPA). These languages can be executed on simple structured data (like JSON, YAML or XML), or more complicated data structures (like a relational database or an object graph). At the end of the day, it depends on what you're trying to achieve and what are your functional requirements. For Cloudrail, this is what we wanted: 1. An imperative language, allowing for powerful logics that are easy to read (if, for, functions, etc.). 2. A language that people already knew and used and was quite common. 3. A data model that was easy to understand and reflected the terminology people were thinking in when imagining cloud environments. 4. An enriched model, that could carry a lot of context information and other imported data, and so powerful rules could be written on top of it. How does Cloudrail's context model work? For every cloud environment supported by Cloudrail, there's an environment context. For example, there's one for AWS and one for Azure . In it, you'll find objects representing various resources supported by the specific cloud environment. Builders Cloudrail has Builders. They're not included in this repository for simplicty, but they are simple to understand: a builder parses some sort of input and generate objects in the environment context as a result. For example, there's a Terraform builder which converts an aws_s3_bucket into a S3Bucket . There's also an Azure builder which takes API outputs from Azure and converts them into objects, such as the AzureSqlServer resource. These builders allow Cloudrail to support various input sources and eventually cover all IaC languages (CloudFormation, ARM, Bicep, Pulumi, etc.) and allows the rules to \"not care\" about the source of the input. The rule is the same whether the input was from a live environment or a specific IaC language. Rules can , if they want, get more information about the source of the object if it helps in their logic, but it's not a must. Merging/Stitching For a given cloud environment, Cloudrail may receive several inputs. For examlpe, for an AWS account, Cloudrail may get input from both AWS API calls and a Terraform plan. Those are two builders, generating two separate context models. However, as we said, one of Cloudrail's biggest advantages is in its ability to execute rules on the model wherever the input came from, right? And so, Cloudrail runs a merging operation that allows it to take several contexts and merge them into one. To do that, it uses the \"keys\" concept. You might notice that every Mergeable has a get_keys function. This is used to determine if two objects, in two separate environment contexts, are actually the same one and should be merged. The merging process also has an order of precedence. If the same object is seen twice from two sources, it knows how to decide which source is more recent or up to date, and use that one as the primary source of content. Once merging is done, there's one, unified context model, representing the entire environment. RelationsAssigner After the context is merged, Cloudrail begins \"connecting the dots\". At this phase, the model becomes a \"graph model\" and so objects can begin pointing to one another. For example, an IAMIdentiy will point to its policies, or a Subnet will point to its VPC. This makes it a lot easier to write rule code, as you don't need to do any lookups. Finding a subnet's VPC, is just a matter of using its vpc attribute. Enrichment This is one of the coolest parts of Cloudrail and follows the relation assignment. This is where the object model becomes more valuable than just representing the input in a graph model. Cloudrail now uses various algorithms to import valuable information into the context model and make it accessible to the rule writer. For example, want to know if a resource is publicly accessible, and how? Look at the attribute exposed by those classes that inherit from ConnectionInstance . Want to know if a policy violates AWS's best practices? Look at Policy 's access_analyzer_findings attribute. How do rules work? A rule is a Python class inheriting from BaseRule . It has a simple run function where all the logic is executed. A rule returns a response which includes a list of issues that it found. Every issue, has a few attributes: Exposed resource - this is the resource who is exposed (from a security perspective) by the violation found. Note that often times the exposed resource is different from the violating resource. Violating resource - this is the resource which violated the rule's logic. Usually, this resource is the one that needs to be fixed. Evidence - this is a human-readable string that is used to help the user understand what the issue is and where to look when fixing it. Rules are registered for execution via the metadata files (such as aws_rules_metadata.yaml and azure_rules_metadata.yaml ). Cloudrail loads the metadata information and uses it to build a list of rules to run. It also uses this metadata to show the user information about each rule. A rule only decides if a configuration is violating its logic or not. A rule does not decide what to do with that violation. It is up to a separate mechanism to decide if the violation is an error or a warning, or whether or not to return exit code 1 or 0 in the Cloudrail CLI. If you're interested in seeing how to write your own custom rule, check out this video . How do I add resource X or attribute Y? If you're missing a specific object you care about, or you found the object but it's missing an attribute, you'll need our help in adding it. Since builders, relations assignment, enrichment, etc, are required for every object and many attributes, this work needs to be done by the Indeni team in the core engine. To request a specific object or attribute, simply open an issue in this repository and we'll get right to it. Further Reading: Details of the context model How rules work and writing your own Some notes: Cloudrail only highlights IaC-backed resources by default Let's say a rule found a violation in a specific object in the context model and created an issue with an exposed resource and violating resource. The issue will only be presented to the user within the CI/CD process if either one of the resources (or both) comes from the Terraform plan (or IaC code) submitted for review by the user. In other words, if both exposed and violating resources are not in the IaC code at all, they will be removed from the rule output by default. A rule can override this behavior by returning True for filter_non_iac_managed_issues . Cloudrail uses Checkov for some static analysis In some cases, Cloudrail will leverage Checkov to do static analysis. This is mainly in cases where the context hasn't yet been fully built out. We generally strive to cover all the commonly used cloud resources quickly, but allow the use of Checkov rules where the context model doesn't exist yet.","title":"Home"},{"location":"index.html#overview","text":"Cloudrail is a tool for automating security for your Infrastructure-as-Code. For an IaC like Terraform, Cloudrail inspects your Terraform plan and validates misconfigurations using policy-as-code. Cloudrail can be integrated into your CI pipeline to automate security analysis across your organization. Cloudrail's Policy-as-Code structure is unique as each rule will validate both your live infrastructure and IaC. Effectively, you can consolidate your cloud infrastructure analysis for live state and build state with Cloudrail's Policy-as-Code framework. The rules use a context model that is included in this repository. This documentation section will cover the different aspects of the context model - how it's created, how it's used, and details of every class and attribute in the model. The code for all rules and context is located in the cloudrail-knowledge repository.","title":"Overview"},{"location":"index.html#prerequisites","text":"You are expected to be able to read and understand Python code. If you wish to submit contributions to this repository, you will also need to know how to write Python code. However the code used to write rules is fairly basic in structure, and so you don't need 10+ years of experience.","title":"Prerequisites"},{"location":"index.html#why-a-context-model-with-python","text":"There are many ways to build rule engines. You could use simple query languages (like jq 's language), invent your own complicated ones (like SQL), or even go and invent your own language (like HashiCorp Sentinel or OPA). These languages can be executed on simple structured data (like JSON, YAML or XML), or more complicated data structures (like a relational database or an object graph). At the end of the day, it depends on what you're trying to achieve and what are your functional requirements. For Cloudrail, this is what we wanted: 1. An imperative language, allowing for powerful logics that are easy to read (if, for, functions, etc.). 2. A language that people already knew and used and was quite common. 3. A data model that was easy to understand and reflected the terminology people were thinking in when imagining cloud environments. 4. An enriched model, that could carry a lot of context information and other imported data, and so powerful rules could be written on top of it.","title":"Why a context model with Python?"},{"location":"index.html#how-does-cloudrails-context-model-work","text":"For every cloud environment supported by Cloudrail, there's an environment context. For example, there's one for AWS and one for Azure . In it, you'll find objects representing various resources supported by the specific cloud environment.","title":"How does Cloudrail's context model work?"},{"location":"index.html#builders","text":"Cloudrail has Builders. They're not included in this repository for simplicty, but they are simple to understand: a builder parses some sort of input and generate objects in the environment context as a result. For example, there's a Terraform builder which converts an aws_s3_bucket into a S3Bucket . There's also an Azure builder which takes API outputs from Azure and converts them into objects, such as the AzureSqlServer resource. These builders allow Cloudrail to support various input sources and eventually cover all IaC languages (CloudFormation, ARM, Bicep, Pulumi, etc.) and allows the rules to \"not care\" about the source of the input. The rule is the same whether the input was from a live environment or a specific IaC language. Rules can , if they want, get more information about the source of the object if it helps in their logic, but it's not a must.","title":"Builders"},{"location":"index.html#mergingstitching","text":"For a given cloud environment, Cloudrail may receive several inputs. For examlpe, for an AWS account, Cloudrail may get input from both AWS API calls and a Terraform plan. Those are two builders, generating two separate context models. However, as we said, one of Cloudrail's biggest advantages is in its ability to execute rules on the model wherever the input came from, right? And so, Cloudrail runs a merging operation that allows it to take several contexts and merge them into one. To do that, it uses the \"keys\" concept. You might notice that every Mergeable has a get_keys function. This is used to determine if two objects, in two separate environment contexts, are actually the same one and should be merged. The merging process also has an order of precedence. If the same object is seen twice from two sources, it knows how to decide which source is more recent or up to date, and use that one as the primary source of content. Once merging is done, there's one, unified context model, representing the entire environment.","title":"Merging/Stitching"},{"location":"index.html#relationsassigner","text":"After the context is merged, Cloudrail begins \"connecting the dots\". At this phase, the model becomes a \"graph model\" and so objects can begin pointing to one another. For example, an IAMIdentiy will point to its policies, or a Subnet will point to its VPC. This makes it a lot easier to write rule code, as you don't need to do any lookups. Finding a subnet's VPC, is just a matter of using its vpc attribute.","title":"RelationsAssigner"},{"location":"index.html#enrichment","text":"This is one of the coolest parts of Cloudrail and follows the relation assignment. This is where the object model becomes more valuable than just representing the input in a graph model. Cloudrail now uses various algorithms to import valuable information into the context model and make it accessible to the rule writer. For example, want to know if a resource is publicly accessible, and how? Look at the attribute exposed by those classes that inherit from ConnectionInstance . Want to know if a policy violates AWS's best practices? Look at Policy 's access_analyzer_findings attribute.","title":"Enrichment"},{"location":"index.html#how-do-rules-work","text":"A rule is a Python class inheriting from BaseRule . It has a simple run function where all the logic is executed. A rule returns a response which includes a list of issues that it found. Every issue, has a few attributes: Exposed resource - this is the resource who is exposed (from a security perspective) by the violation found. Note that often times the exposed resource is different from the violating resource. Violating resource - this is the resource which violated the rule's logic. Usually, this resource is the one that needs to be fixed. Evidence - this is a human-readable string that is used to help the user understand what the issue is and where to look when fixing it. Rules are registered for execution via the metadata files (such as aws_rules_metadata.yaml and azure_rules_metadata.yaml ). Cloudrail loads the metadata information and uses it to build a list of rules to run. It also uses this metadata to show the user information about each rule. A rule only decides if a configuration is violating its logic or not. A rule does not decide what to do with that violation. It is up to a separate mechanism to decide if the violation is an error or a warning, or whether or not to return exit code 1 or 0 in the Cloudrail CLI. If you're interested in seeing how to write your own custom rule, check out this video .","title":"How do rules work?"},{"location":"index.html#how-do-i-add-resource-x-or-attribute-y","text":"If you're missing a specific object you care about, or you found the object but it's missing an attribute, you'll need our help in adding it. Since builders, relations assignment, enrichment, etc, are required for every object and many attributes, this work needs to be done by the Indeni team in the core engine. To request a specific object or attribute, simply open an issue in this repository and we'll get right to it.","title":"How do I add resource X or attribute Y?"},{"location":"index.html#further-reading","text":"Details of the context model How rules work and writing your own","title":"Further Reading:"},{"location":"index.html#some-notes","text":"","title":"Some notes:"},{"location":"index.html#cloudrail-only-highlights-iac-backed-resources-by-default","text":"Let's say a rule found a violation in a specific object in the context model and created an issue with an exposed resource and violating resource. The issue will only be presented to the user within the CI/CD process if either one of the resources (or both) comes from the Terraform plan (or IaC code) submitted for review by the user. In other words, if both exposed and violating resources are not in the IaC code at all, they will be removed from the rule output by default. A rule can override this behavior by returning True for filter_non_iac_managed_issues .","title":"Cloudrail only highlights IaC-backed resources by default"},{"location":"index.html#cloudrail-uses-checkov-for-some-static-analysis","text":"In some cases, Cloudrail will leverage Checkov to do static analysis. This is mainly in cases where the context hasn't yet been fully built out. We generally strive to cover all the commonly used cloud resources quickly, but allow the use of Checkov rules where the context model doesn't exist yet.","title":"Cloudrail uses Checkov for some static analysis"},{"location":"context/index.html","text":"Cloudrail's Context Model If you're arrived at this page before reading the Overview , please head there first and come back. Cloudrail's context model is a set of Python classes, with attributes and methods. When a context is provided by the Cloudrail engine to a rule, it will contain many instances of these classes, reflecting the cloud environment being analyzed. The Mergeable All context classes inherit, either directly or indirectly, from the Mergeable class. This class implements certain basic concepts needed to build the context. Specifically: Attributes: terraform_state - an Optional that will contain information about the object's state in Terraform, if it was loaded from a Terraform plan. is_pseudo - when building the context and connecting objects together, there may be a need to \"fill the blanks\". For example, in AWS, we know that an auto-scaling group created through infrastructure-as-code will generate EC2 instances. How many, and where, depends on the settings of the ASG. Cloudrail parses these settings and generates \"pseudo\" EC2 instance objects to represent those instances we know will be spun up once the ASG is actually created. This helps rules be consistent, without a requirement to do any of these calculations on their own. tags - these are the tags assigned to this resource, whether in the live environment or infrastructure-as-code. Note that Cloudrail refrains from collecting most content under tags and so there may be many tags whose name appears correctly, but the value is a result of a hashing function. For example, if you use a tag called \"my-project-aspect\" with the value \"foobar-1\", Cloudrail will see the tag name but will not collect the value \"foobar-1\". aliases - a context object always has a name. But, sometimes it may be referred by more than one name. If this is the case, the other ways to identify the object are stored in aliases. You can look at various classes's code to see where and how aliases are updated. ` invalidation - this relates to an internal mechanism of cascading invalidation used within Cloudrail. For example, imagine a case where Cloudrail scanned a live cloud environment and generated a snapshot. Depending on how dynamic the environment is, that snapshot may be internally inconsistent. For example, it's possible that an EC2 instance in it will reference a subnet that no longer exists (as both it, and the EC2 instance, were deleted during snapshot generation). The invalidation mechanism handles this. Any objects that were invalidated will be removed from the context, and so you should never encounter an object with invalidation set. It's here because the same classes are used during context building as well as rule evaluation. Methods: get_keys() - generally this is something you wouldn't need in the rule evaluation. This is used by the context's merge functionality to understand two objects are actually the same resource. For example, consider a resource described in Terraform that already exists in the live cloud environment (because terraform apply was already run). How will Cloudrail understand that both are the same object? In AWS, for example, you could use the ARN (from the Terraform state and the live environment), but many objects don't have an ARN. So, we use \"keys\" - each resource has a unique way to be identified within an account/region that is not the ARN (or a resource ID in Azure). get_type() - returns the human-friendly text representing the type of this object. This is used for presentation purposes. get_name() - the primary name of the object, used for presentation purposes. get_friendly_name() - used for presentation purposes. Generally, whenever you want to show a resource's name, better to use this function than get_name() , as this function guarantees the output is mean for human consumption. get_id() - the cloud-provided ID of the object if it's from a live environment, or the Terraform id if it was generated from a Terraform plan. get_extra_data() - provides additional data about the resource when printed. This is useful in logging, debug information, error messages, etc., and is generally not used in rules. get_cloud_resource_url() - if a resource is from a live environment, this will be the URL that can be used to view the resource directly in the cloud environment's console. If the resource doesn't exist yet, will return None. This is also used for presentation purposes and normally not used in rules. is_new_resource() - returns True if a resource does not yet exist, and the plan calls for it to be created now. Properties: origin() - returns the source of this object - whether from the live environment (through a Dragoneye scan, for example), from infrastructure-as-code, or pseudo (see information about pseudo further above). is_managed_by_iac() - returns True if the resource is managed by infrastructure-as-code (either being created, or already) created. Supported Cloud Environments Currently, Cloudrail supports the following cloud environments. We're constantly working to add support for more environments, more infrastructure-as-code languages, more resource types, and more attributes within resources. (if you want to join the effort, we're hiring!) Amazon Web Services (AWS) All context objects for AWS inherit from AwsResource , which in turn inherits from Mergeable . You'll notice that it has an attribute of type AwsServiceName , which helps connect the object to the service it belongs to. The naming convention used is based on Terraform, but that's just for convenience. If you're interested in AWS, look at the navigation menu to the left and expand the section called AWS Context.","title":"Cloudrail's Context Model"},{"location":"context/index.html#cloudrails-context-model","text":"If you're arrived at this page before reading the Overview , please head there first and come back. Cloudrail's context model is a set of Python classes, with attributes and methods. When a context is provided by the Cloudrail engine to a rule, it will contain many instances of these classes, reflecting the cloud environment being analyzed.","title":"Cloudrail's Context Model"},{"location":"context/index.html#the-mergeable","text":"All context classes inherit, either directly or indirectly, from the Mergeable class. This class implements certain basic concepts needed to build the context. Specifically:","title":"The Mergeable"},{"location":"context/index.html#attributes","text":"terraform_state - an Optional that will contain information about the object's state in Terraform, if it was loaded from a Terraform plan. is_pseudo - when building the context and connecting objects together, there may be a need to \"fill the blanks\". For example, in AWS, we know that an auto-scaling group created through infrastructure-as-code will generate EC2 instances. How many, and where, depends on the settings of the ASG. Cloudrail parses these settings and generates \"pseudo\" EC2 instance objects to represent those instances we know will be spun up once the ASG is actually created. This helps rules be consistent, without a requirement to do any of these calculations on their own. tags - these are the tags assigned to this resource, whether in the live environment or infrastructure-as-code. Note that Cloudrail refrains from collecting most content under tags and so there may be many tags whose name appears correctly, but the value is a result of a hashing function. For example, if you use a tag called \"my-project-aspect\" with the value \"foobar-1\", Cloudrail will see the tag name but will not collect the value \"foobar-1\". aliases - a context object always has a name. But, sometimes it may be referred by more than one name. If this is the case, the other ways to identify the object are stored in aliases. You can look at various classes's code to see where and how aliases are updated. ` invalidation - this relates to an internal mechanism of cascading invalidation used within Cloudrail. For example, imagine a case where Cloudrail scanned a live cloud environment and generated a snapshot. Depending on how dynamic the environment is, that snapshot may be internally inconsistent. For example, it's possible that an EC2 instance in it will reference a subnet that no longer exists (as both it, and the EC2 instance, were deleted during snapshot generation). The invalidation mechanism handles this. Any objects that were invalidated will be removed from the context, and so you should never encounter an object with invalidation set. It's here because the same classes are used during context building as well as rule evaluation.","title":"Attributes:"},{"location":"context/index.html#methods","text":"get_keys() - generally this is something you wouldn't need in the rule evaluation. This is used by the context's merge functionality to understand two objects are actually the same resource. For example, consider a resource described in Terraform that already exists in the live cloud environment (because terraform apply was already run). How will Cloudrail understand that both are the same object? In AWS, for example, you could use the ARN (from the Terraform state and the live environment), but many objects don't have an ARN. So, we use \"keys\" - each resource has a unique way to be identified within an account/region that is not the ARN (or a resource ID in Azure). get_type() - returns the human-friendly text representing the type of this object. This is used for presentation purposes. get_name() - the primary name of the object, used for presentation purposes. get_friendly_name() - used for presentation purposes. Generally, whenever you want to show a resource's name, better to use this function than get_name() , as this function guarantees the output is mean for human consumption. get_id() - the cloud-provided ID of the object if it's from a live environment, or the Terraform id if it was generated from a Terraform plan. get_extra_data() - provides additional data about the resource when printed. This is useful in logging, debug information, error messages, etc., and is generally not used in rules. get_cloud_resource_url() - if a resource is from a live environment, this will be the URL that can be used to view the resource directly in the cloud environment's console. If the resource doesn't exist yet, will return None. This is also used for presentation purposes and normally not used in rules. is_new_resource() - returns True if a resource does not yet exist, and the plan calls for it to be created now.","title":"Methods:"},{"location":"context/index.html#properties","text":"origin() - returns the source of this object - whether from the live environment (through a Dragoneye scan, for example), from infrastructure-as-code, or pseudo (see information about pseudo further above). is_managed_by_iac() - returns True if the resource is managed by infrastructure-as-code (either being created, or already) created.","title":"Properties:"},{"location":"context/index.html#supported-cloud-environments","text":"Currently, Cloudrail supports the following cloud environments. We're constantly working to add support for more environments, more infrastructure-as-code languages, more resource types, and more attributes within resources. (if you want to join the effort, we're hiring!)","title":"Supported Cloud Environments"},{"location":"context/index.html#amazon-web-services-aws","text":"All context objects for AWS inherit from AwsResource , which in turn inherits from Mergeable . You'll notice that it has an attribute of type AwsServiceName , which helps connect the object to the service it belongs to. The naming convention used is based on Terraform, but that's just for convenience. If you're interested in AWS, look at the navigation menu to the left and expand the section called AWS Context.","title":"Amazon Web Services (AWS)"},{"location":"context/aws/account/index.html","text":"Account Attributes: Name Type Description account str The ID of the account. account_name str The name of the account, as registered within Cloudrail. supports_ec2_classic_mode bool True if this is an account created before 2013-12-04. Represents the AWS account we're doing the analysis against. There will always be 1, or 0 (if running without a cloud account). custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"account"},{"location":"context/aws/account/index.html#cloudrail.knowledge.context.aws.account.account.Account","text":"Attributes: Name Type Description account str The ID of the account. account_name str The name of the account, as registered within Cloudrail. supports_ec2_classic_mode bool True if this is an account created before 2013-12-04. Represents the AWS account we're doing the analysis against. There will always be 1, or 0 (if running without a cloud account).","title":"Account"},{"location":"context/aws/account/index.html#cloudrail.knowledge.context.aws.account.account.Account.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/account/index.html#cloudrail.knowledge.context.aws.account.account.Account.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/apigateway/index.html","text":"Sample rules A few rules that use objects from this package: s3_lambda_indirect_exposure from typing import List , Dict from cloudrail.knowledge.context.aws.apigateway.rest_api_gw import RestApiGw from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class S3BucketLambdaIndirectExposureRule ( AwsBaseRule ): def get_id ( self ) -> str : return 's3_lambda_indirect_exposure' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for s3_bucket in env_context . s3_buckets : for agw_method in s3_bucket . exposed_to_agw_methods : if not self . _is_api_gateway_public ( agw_method . rest_api_id , env_context . rest_api_gw ): continue issues . append ( Issue ( evidence = f \"The S3 Bucket ` { s3_bucket . get_friendly_name () } `. is exposed via the execution role in \" f \"Lambda Function ` { agw_method . integration . lambda_func_integration . get_friendly_name () } `. \" f \"which can be invoked by public API Gateway ` { agw_method . get_friendly_name () } `\" , exposed = s3_bucket , violating = agw_method . integration . lambda_func_integration )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . s3_buckets and environment_context . lambda_function_list and environment_context . api_gateway_methods ) @staticmethod def _is_api_gateway_public ( rest_api_gw_id : str , api_gateways : List [ RestApiGw ]) -> bool : for api_gateway in api_gateways : if api_gateway . rest_api_gw_id == rest_api_gw_id : return api_gateway . is_public raise Exception ( f 'Rest API Gateway { rest_api_gw_id } could not be found' ) non_car_api_gateway_caching_encrypted from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureApiGwCachingEncryptedRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_api_gateway_caching_encrypted' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for api_gw in env_context . rest_api_gw : if api_gw . method_settings and api_gw . method_settings . caching_enabled and not api_gw . method_settings . caching_encrypted : issues . append ( Issue ( f \"The { api_gw . get_type () } ` { api_gw . get_id () } ` has caching enabled and not encrypted for \" f \"method ` { api_gw . method_settings . http_method . value } ` in the stage ` { api_gw . method_settings . stage_name } `\" , api_gw , api_gw )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . rest_api_gw ) non_car_api_gateway_tls from typing import List , Dict from packaging import version from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType # Currently only checking API GW V1 (rest API's), as V2 does not support but TLS v1.2. class EnsureApiGwUseModernTlsRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_api_gateway_tls' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for api_gw in env_context . rest_api_gw : if api_gw . domain and self . _version_check ( api_gw . domain . security_policy ): issues . append ( Issue ( f \"The { api_gw . get_type () } ` { api_gw . get_friendly_name () } ` \" f \"has a domain configured but not enforcing TLS v1.2 \" , api_gw , api_gw . domain )) return issues @staticmethod def _version_check ( proto_version : str ) -> bool : version_num = proto_version . replace ( 'TLS_' , '' ) . replace ( '_' , '.' ) return version . parse ( version_num ) < version . parse ( '1.2' ) def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . rest_api_gw ) ApiGatewayIntegration Attributes: Name Type Description rest_api_id str The ID of the associated REST API. resource_id str The API resource ID. request_http_method RestApiMethods The HTTP method used when calling the associated resource. integration_http_method RestApiMethods The integration HTTP method, may be None. integration_type IntegrationType The integration's input type. uri str The input's URI. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process IntegrationType The type of integration. ApiGatewayMethod Attributes: Name Type Description rest_api_id str The ID of the associated REST API. resource_id str The API resource ID. http_method RestApiMethods The HTTP Method. integration Optional[ApiGatewayIntegration] A reference to the matching ApiGatewayIntegration based on rest_api_id. authorization str The type of authorization used for the method. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process ApiGatewayMethodSettings Attributes: Name Type Description api_gw_id str The ID of the REST API Gateway. stage_name str The name of the stage. method_path str The method resource path. http_method RestApiMethods The actual HTTP method (GET, etc.). caching_enabled bool Set to True if caching is enabled, False or None otherwise. caching_encrypted bool Set to True or a KMS ARN is enabled, False or None otherwise. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process RestApiMethods An enumeration. ApiGatewayType An enumeration. RestApiGw Attributes: Name Type Description rest_api_gw_id str The ID of the REST API Gateway. api_gw_name str The name of the API gateway. api_gateway_type ApiGatewayType One of EDGE, REGIONAL, PRIVATE. is_public bool An indication on if this resource is accessible from the internet. api_gateway_methods List[ApiGatewayMethod] All the ApiGatewayMethods associated with this gateway. api_gw_stages List[ApiGatewayStage] The stages associated with this REST API Gateway. lambda_allowed_methods List[ApiGatewayMethod] The ApiGatewayMethods associated with this gateway, and are allowed to access a lambda function. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process RestApiGwDomain Attributes: Name Type Description domain_name str The name of the REST API domain. security_policy str The Transport Layer Security (TLS) version + cipher suite for this DomainName. The valid values are TLS_1_0 and TLS_1_2. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process RestApiGwMapping Attributes: Name Type Description api_id str The ID of the REST API Gateway. domain_name str The name of the domain. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process RestApiGwPolicy Attributes: Name Type Description rest_api_gw_id str The ID of the REST API Gateway. policy_statements The statements of the resource policy attached to this gateway. raw_document The raw JSON of the resource policy. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process AccessLogsSettings dataclass Attributes: Name Type Description destination_arn str The ARN of either Cloudwatch log group or Kinesis Data Firehose delivery stream to receive the access logs. format str The formatting and values recorded in the logs. ApiGatewayStage Attributes: Name Type Description api_gw_id str The ID of the REST API Gateway. stage_name str The name of the stage. xray_tracing_enabled bool An indication if active tracing with X-ray is enabled. access_logs Optional[AccessLogsSettings] Block information about the access logs settings of the REST API Gateway stage (if any configured). custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"apigateway"},{"location":"context/aws/apigateway/index.html#sample-rules","text":"A few rules that use objects from this package: s3_lambda_indirect_exposure from typing import List , Dict from cloudrail.knowledge.context.aws.apigateway.rest_api_gw import RestApiGw from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class S3BucketLambdaIndirectExposureRule ( AwsBaseRule ): def get_id ( self ) -> str : return 's3_lambda_indirect_exposure' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for s3_bucket in env_context . s3_buckets : for agw_method in s3_bucket . exposed_to_agw_methods : if not self . _is_api_gateway_public ( agw_method . rest_api_id , env_context . rest_api_gw ): continue issues . append ( Issue ( evidence = f \"The S3 Bucket ` { s3_bucket . get_friendly_name () } `. is exposed via the execution role in \" f \"Lambda Function ` { agw_method . integration . lambda_func_integration . get_friendly_name () } `. \" f \"which can be invoked by public API Gateway ` { agw_method . get_friendly_name () } `\" , exposed = s3_bucket , violating = agw_method . integration . lambda_func_integration )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . s3_buckets and environment_context . lambda_function_list and environment_context . api_gateway_methods ) @staticmethod def _is_api_gateway_public ( rest_api_gw_id : str , api_gateways : List [ RestApiGw ]) -> bool : for api_gateway in api_gateways : if api_gateway . rest_api_gw_id == rest_api_gw_id : return api_gateway . is_public raise Exception ( f 'Rest API Gateway { rest_api_gw_id } could not be found' ) non_car_api_gateway_caching_encrypted from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureApiGwCachingEncryptedRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_api_gateway_caching_encrypted' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for api_gw in env_context . rest_api_gw : if api_gw . method_settings and api_gw . method_settings . caching_enabled and not api_gw . method_settings . caching_encrypted : issues . append ( Issue ( f \"The { api_gw . get_type () } ` { api_gw . get_id () } ` has caching enabled and not encrypted for \" f \"method ` { api_gw . method_settings . http_method . value } ` in the stage ` { api_gw . method_settings . stage_name } `\" , api_gw , api_gw )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . rest_api_gw ) non_car_api_gateway_tls from typing import List , Dict from packaging import version from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType # Currently only checking API GW V1 (rest API's), as V2 does not support but TLS v1.2. class EnsureApiGwUseModernTlsRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_api_gateway_tls' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for api_gw in env_context . rest_api_gw : if api_gw . domain and self . _version_check ( api_gw . domain . security_policy ): issues . append ( Issue ( f \"The { api_gw . get_type () } ` { api_gw . get_friendly_name () } ` \" f \"has a domain configured but not enforcing TLS v1.2 \" , api_gw , api_gw . domain )) return issues @staticmethod def _version_check ( proto_version : str ) -> bool : version_num = proto_version . replace ( 'TLS_' , '' ) . replace ( '_' , '.' ) return version . parse ( version_num ) < version . parse ( '1.2' ) def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . rest_api_gw )","title":"Sample rules"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_integration.ApiGatewayIntegration","text":"Attributes: Name Type Description rest_api_id str The ID of the associated REST API. resource_id str The API resource ID. request_http_method RestApiMethods The HTTP method used when calling the associated resource. integration_http_method RestApiMethods The integration HTTP method, may be None. integration_type IntegrationType The integration's input type. uri str The input's URI.","title":"ApiGatewayIntegration"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_integration.ApiGatewayIntegration.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_integration.ApiGatewayIntegration.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_integration.IntegrationType","text":"The type of integration.","title":"IntegrationType"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_method.ApiGatewayMethod","text":"Attributes: Name Type Description rest_api_id str The ID of the associated REST API. resource_id str The API resource ID. http_method RestApiMethods The HTTP Method. integration Optional[ApiGatewayIntegration] A reference to the matching ApiGatewayIntegration based on rest_api_id. authorization str The type of authorization used for the method.","title":"ApiGatewayMethod"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_method.ApiGatewayMethod.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_method.ApiGatewayMethod.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_method_settings.ApiGatewayMethodSettings","text":"Attributes: Name Type Description api_gw_id str The ID of the REST API Gateway. stage_name str The name of the stage. method_path str The method resource path. http_method RestApiMethods The actual HTTP method (GET, etc.). caching_enabled bool Set to True if caching is enabled, False or None otherwise. caching_encrypted bool Set to True or a KMS ARN is enabled, False or None otherwise.","title":"ApiGatewayMethodSettings"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_method_settings.ApiGatewayMethodSettings.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_method_settings.ApiGatewayMethodSettings.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_method_settings.RestApiMethods","text":"An enumeration.","title":"RestApiMethods"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.rest_api_gw.ApiGatewayType","text":"An enumeration.","title":"ApiGatewayType"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.rest_api_gw.RestApiGw","text":"Attributes: Name Type Description rest_api_gw_id str The ID of the REST API Gateway. api_gw_name str The name of the API gateway. api_gateway_type ApiGatewayType One of EDGE, REGIONAL, PRIVATE. is_public bool An indication on if this resource is accessible from the internet. api_gateway_methods List[ApiGatewayMethod] All the ApiGatewayMethods associated with this gateway. api_gw_stages List[ApiGatewayStage] The stages associated with this REST API Gateway. lambda_allowed_methods List[ApiGatewayMethod] The ApiGatewayMethods associated with this gateway, and are allowed to access a lambda function.","title":"RestApiGw"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.rest_api_gw.RestApiGw.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.rest_api_gw.RestApiGw.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.rest_api_gw_domain.RestApiGwDomain","text":"Attributes: Name Type Description domain_name str The name of the REST API domain. security_policy str The Transport Layer Security (TLS) version + cipher suite for this DomainName. The valid values are TLS_1_0 and TLS_1_2.","title":"RestApiGwDomain"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.rest_api_gw_domain.RestApiGwDomain.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.rest_api_gw_domain.RestApiGwDomain.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.rest_api_gw_mapping.RestApiGwMapping","text":"Attributes: Name Type Description api_id str The ID of the REST API Gateway. domain_name str The name of the domain.","title":"RestApiGwMapping"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.rest_api_gw_mapping.RestApiGwMapping.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.rest_api_gw_mapping.RestApiGwMapping.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.rest_api_gw_policy.RestApiGwPolicy","text":"Attributes: Name Type Description rest_api_gw_id str The ID of the REST API Gateway. policy_statements The statements of the resource policy attached to this gateway. raw_document The raw JSON of the resource policy.","title":"RestApiGwPolicy"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.rest_api_gw_policy.RestApiGwPolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.rest_api_gw_policy.RestApiGwPolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_stage.AccessLogsSettings","text":"Attributes: Name Type Description destination_arn str The ARN of either Cloudwatch log group or Kinesis Data Firehose delivery stream to receive the access logs. format str The formatting and values recorded in the logs.","title":"AccessLogsSettings"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_stage.ApiGatewayStage","text":"Attributes: Name Type Description api_gw_id str The ID of the REST API Gateway. stage_name str The name of the stage. xray_tracing_enabled bool An indication if active tracing with X-ray is enabled. access_logs Optional[AccessLogsSettings] Block information about the access logs settings of the REST API Gateway stage (if any configured).","title":"ApiGatewayStage"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_stage.ApiGatewayStage.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/apigateway/index.html#cloudrail.knowledge.context.aws.apigateway.api_gateway_stage.ApiGatewayStage.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/apigatewayv2/index.html","text":"ApiGateway Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. api_gw_id str The API GW ID. arn Optional[str] The ARN of the API GW. api_gw_name str The API GW name. protocol_type str The protocol type of the API GW. api_gw_integration ApiGatewayV2Integration A reference to the matching ApiGatewayV2Integration based on api_gw_id. vpc_link ApiGatewayVpcLink A reference to the matching ApiGatewayVpcLink based on api_gw_id. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process ApiGatewayV2Integration Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. rest_api_id str The API GW ID. connection_id Optional[str] The ID of the VPC link used by the API GW. integration_id str The ID of the integration used by the API GW. integration_http_method RestApiMethods API GW method used by the API GW. integration_type IntegrationType The API GW integration type. uri str The input's URI. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process ApiGatewayVpcLink Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. vpc_link_id str The ID of the VPC link. name str The name of the VPC link. arn Optional[str] The ARN of the VPC link. security_group_ids list List of security groups ID's used by the VPC link. subnet_ids list List of subnet ID's used by the VPC link. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"apigatewayv2"},{"location":"context/aws/apigatewayv2/index.html#cloudrail.knowledge.context.aws.apigatewayv2.api_gateway_v2.ApiGateway","text":"Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. api_gw_id str The API GW ID. arn Optional[str] The ARN of the API GW. api_gw_name str The API GW name. protocol_type str The protocol type of the API GW. api_gw_integration ApiGatewayV2Integration A reference to the matching ApiGatewayV2Integration based on api_gw_id. vpc_link ApiGatewayVpcLink A reference to the matching ApiGatewayVpcLink based on api_gw_id.","title":"ApiGateway"},{"location":"context/aws/apigatewayv2/index.html#cloudrail.knowledge.context.aws.apigatewayv2.api_gateway_v2.ApiGateway.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/apigatewayv2/index.html#cloudrail.knowledge.context.aws.apigatewayv2.api_gateway_v2.ApiGateway.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/apigatewayv2/index.html#cloudrail.knowledge.context.aws.apigatewayv2.api_gateway_v2_integration.ApiGatewayV2Integration","text":"Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. rest_api_id str The API GW ID. connection_id Optional[str] The ID of the VPC link used by the API GW. integration_id str The ID of the integration used by the API GW. integration_http_method RestApiMethods API GW method used by the API GW. integration_type IntegrationType The API GW integration type. uri str The input's URI.","title":"ApiGatewayV2Integration"},{"location":"context/aws/apigatewayv2/index.html#cloudrail.knowledge.context.aws.apigatewayv2.api_gateway_v2_integration.ApiGatewayV2Integration.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/apigatewayv2/index.html#cloudrail.knowledge.context.aws.apigatewayv2.api_gateway_v2_integration.ApiGatewayV2Integration.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/apigatewayv2/index.html#cloudrail.knowledge.context.aws.apigatewayv2.api_gateway_v2_vpc_link.ApiGatewayVpcLink","text":"Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. vpc_link_id str The ID of the VPC link. name str The name of the VPC link. arn Optional[str] The ARN of the VPC link. security_group_ids list List of security groups ID's used by the VPC link. subnet_ids list List of subnet ID's used by the VPC link.","title":"ApiGatewayVpcLink"},{"location":"context/aws/apigatewayv2/index.html#cloudrail.knowledge.context.aws.apigatewayv2.api_gateway_v2_vpc_link.ApiGatewayVpcLink.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/apigatewayv2/index.html#cloudrail.knowledge.context.aws.apigatewayv2.api_gateway_v2_vpc_link.ApiGatewayVpcLink.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/athena/index.html","text":"Sample rules A few rules that use objects from this package: non_car_athena_workgroup_query_results_encrypt_at_rest_using_customer_managed_cmk from typing import List , Dict from cloudrail.knowledge.context.aws.kms.kms_key_manager import KeyManager from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureAthenaWorkgroupsEncryptionCmkRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_athena_workgroup_query_results_encrypt_at_rest_using_customer_managed_cmk' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for workgroup in env_context . athena_workgroups : if workgroup . is_new_resource (): if workgroup . encryption_option == 'SSE_S3' or ( workgroup . kms_data and workgroup . kms_data . key_manager != KeyManager . CUSTOMER ): issues . append ( Issue ( f 'The { workgroup . get_type () } ` { workgroup . get_friendly_name () } ` is set to use encrypt at rest ' f 'but it is not using customer-managed CMKs' , workgroup , workgroup )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . athena_workgroups ) non_car_athena_workgroup_query_results_encrypt_at_rest from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureAthenaWorkGroupsResultsEncryptedRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_athena_workgroup_query_results_encrypt_at_rest' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for workgroup in env_context . athena_workgroups : if workgroup . enforce_workgroup_config : if not workgroup . encryption_config : issues . append ( Issue ( f \"The { workgroup . get_type () } ` { workgroup . get_friendly_name () } ` is not \" f \"set to encrypt at rest the query results\" , workgroup , workgroup )) elif workgroup . encryption_config and not workgroup . enforce_workgroup_config : issues . append ( Issue ( f \"The { workgroup . get_type () } ` { workgroup . get_friendly_name () } ` is \" f \"set to encrypt at rest the query results, but the workgroup configurations are not set to enforce\" , workgroup , workgroup )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . athena_workgroups ) AthenaWorkgroup Attributes: Name Type Description name str The name of the workgroup. state str DISABLED or ENABLED. encryption_config str True or a KMS ARN if set, False or None otherwise. enforce_workgroup_config bool True to enforce Workgroup encryption configuration on clients. encryption_option str Set if encryption is configured, one of SSE_S3, SSE_KMS, CSE_KMS. kms_key str Set if KMS is used for encryption, this is the ARN of the key. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"athena"},{"location":"context/aws/athena/index.html#sample-rules","text":"A few rules that use objects from this package: non_car_athena_workgroup_query_results_encrypt_at_rest_using_customer_managed_cmk from typing import List , Dict from cloudrail.knowledge.context.aws.kms.kms_key_manager import KeyManager from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureAthenaWorkgroupsEncryptionCmkRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_athena_workgroup_query_results_encrypt_at_rest_using_customer_managed_cmk' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for workgroup in env_context . athena_workgroups : if workgroup . is_new_resource (): if workgroup . encryption_option == 'SSE_S3' or ( workgroup . kms_data and workgroup . kms_data . key_manager != KeyManager . CUSTOMER ): issues . append ( Issue ( f 'The { workgroup . get_type () } ` { workgroup . get_friendly_name () } ` is set to use encrypt at rest ' f 'but it is not using customer-managed CMKs' , workgroup , workgroup )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . athena_workgroups ) non_car_athena_workgroup_query_results_encrypt_at_rest from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureAthenaWorkGroupsResultsEncryptedRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_athena_workgroup_query_results_encrypt_at_rest' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for workgroup in env_context . athena_workgroups : if workgroup . enforce_workgroup_config : if not workgroup . encryption_config : issues . append ( Issue ( f \"The { workgroup . get_type () } ` { workgroup . get_friendly_name () } ` is not \" f \"set to encrypt at rest the query results\" , workgroup , workgroup )) elif workgroup . encryption_config and not workgroup . enforce_workgroup_config : issues . append ( Issue ( f \"The { workgroup . get_type () } ` { workgroup . get_friendly_name () } ` is \" f \"set to encrypt at rest the query results, but the workgroup configurations are not set to enforce\" , workgroup , workgroup )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . athena_workgroups )","title":"Sample rules"},{"location":"context/aws/athena/index.html#cloudrail.knowledge.context.aws.athena.athena_workgroup.AthenaWorkgroup","text":"Attributes: Name Type Description name str The name of the workgroup. state str DISABLED or ENABLED. encryption_config str True or a KMS ARN if set, False or None otherwise. enforce_workgroup_config bool True to enforce Workgroup encryption configuration on clients. encryption_option str Set if encryption is configured, one of SSE_S3, SSE_KMS, CSE_KMS. kms_key str Set if KMS is used for encryption, this is the ARN of the key.","title":"AthenaWorkgroup"},{"location":"context/aws/athena/index.html#cloudrail.knowledge.context.aws.athena.athena_workgroup.AthenaWorkgroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/athena/index.html#cloudrail.knowledge.context.aws.athena.athena_workgroup.AthenaWorkgroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/autoscaling/index.html","text":"Sample rules A few rules that use objects from this package: non_car_ensure_imdsv2 from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureImdsv2IsUsedRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_ensure_imdsv2' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for ec2 in env_context . ec2s : if ec2 . http_tokens != 'required' : issues . append ( Issue ( f \"The { ec2 . get_type () } ` { ec2 . get_friendly_name () } ` is allowing IMDSv1\" , ec2 , ec2 ) ) for launch_config in env_context . launch_configurations : if launch_config . http_tokens != 'required' : issues . append ( Issue ( f \"The { launch_config . get_type () } ` { launch_config . get_friendly_name () } ` is allowing IMDSv1\" , \\ launch_config , launch_config ) ) for launch_template in env_context . launch_templates : if launch_template . http_token != 'required' : issues . append ( Issue ( f \"The { launch_template . get_type () } ` { launch_template . get_friendly_name () } ` is allowing IMDSv1\" , \\ launch_template , launch_template ) ) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . ec2s or environment_context . launch_templates or environment_context . launch_configurations ) AutoScalingGroup Attributes: Name Type Description arn The ARN of the auto-scaling group. target_group_arns May list the ALB/ELB target groups to be used with this ASG. name The name of the auto-scaling group. availability_zones The availability zones to initialize instances in. subnet_ids The subnets to initialize instances in. launch_configuration Optional[LaunchConfiguration] Points to the associated launch configuration, if there is one. launch_template Optional[LaunchTemplate] Points to the associated launch template, if there is one. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process AutoScalingGroupRawData dataclass Attributes: Name Type Description launch_configuration_name Optional[str] The name of the launch configuration as read directly from the live environment. launch_template_data Optional[cloudrail.knowledge.context.aws.autoscaling.launch_configuration.LaunchTemplateData] The launch template data as read directly from the live environment. LaunchConfiguration Attributes: Name Type Description arn str The ARN of the launch config. image_id str The EC2 Image ID of the instance. instance_type str The Instance Type of the instance to launch. key_name str The Key Name used for the instance. name str The Name of the launch configuration. security_group_ids List[str] The security groups used with the instance. http_tokens str Either \"optional\" or \"required\" (if None, means \"optional\"). iam_instance_profile Optional[str] The IAM Instance Profile to associate with launched instances (may be None). associate_public_ip_address Optional[bool] May be True to associate a public IP address with the launched instances. ebs_optimized bool Indication whether the EC2 instance has EBS optimization enabled of not. monitoring_enabled bool Indication if the launched EC2 instance will have detailed monitoring enabled. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process LaunchTemplateData dataclass Attributes: Name Type Description template_id str The id of the template. version str The number of the version. LaunchTemplate Attributes: Name Type Description template_id str The ID of the template. name str The name of the template. http_token str \"optional\" or \"required\" (if None, means \"optional\"). image_id str The EC2 Image ID of the instance. security_group_ids List[str] The security groups used with the instance. version_number int The version number of this template. iam_instance_profile Optional[str] The IAM Instance Profile to associate with launched instances (may be None). network_configurations List[NetworkConfiguration] The network configuration(s) set in the template (may be None). security_groups List[SecurityGroup] Points to the actual security groups set in security_group_ids. instance_type str The Instance type (i.e. 'm5.8xlarge'). ebs_optimized bool Indication whether the EC2 instance has EBS optimization enabled of not. monitoring_enabled bool Indication if the launched EC2 instance will have detailed monitoring enabled. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"autoscaling"},{"location":"context/aws/autoscaling/index.html#sample-rules","text":"A few rules that use objects from this package: non_car_ensure_imdsv2 from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureImdsv2IsUsedRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_ensure_imdsv2' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for ec2 in env_context . ec2s : if ec2 . http_tokens != 'required' : issues . append ( Issue ( f \"The { ec2 . get_type () } ` { ec2 . get_friendly_name () } ` is allowing IMDSv1\" , ec2 , ec2 ) ) for launch_config in env_context . launch_configurations : if launch_config . http_tokens != 'required' : issues . append ( Issue ( f \"The { launch_config . get_type () } ` { launch_config . get_friendly_name () } ` is allowing IMDSv1\" , \\ launch_config , launch_config ) ) for launch_template in env_context . launch_templates : if launch_template . http_token != 'required' : issues . append ( Issue ( f \"The { launch_template . get_type () } ` { launch_template . get_friendly_name () } ` is allowing IMDSv1\" , \\ launch_template , launch_template ) ) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . ec2s or environment_context . launch_templates or environment_context . launch_configurations )","title":"Sample rules"},{"location":"context/aws/autoscaling/index.html#cloudrail.knowledge.context.aws.autoscaling.launch_configuration.AutoScalingGroup","text":"Attributes: Name Type Description arn The ARN of the auto-scaling group. target_group_arns May list the ALB/ELB target groups to be used with this ASG. name The name of the auto-scaling group. availability_zones The availability zones to initialize instances in. subnet_ids The subnets to initialize instances in. launch_configuration Optional[LaunchConfiguration] Points to the associated launch configuration, if there is one. launch_template Optional[LaunchTemplate] Points to the associated launch template, if there is one.","title":"AutoScalingGroup"},{"location":"context/aws/autoscaling/index.html#cloudrail.knowledge.context.aws.autoscaling.launch_configuration.AutoScalingGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/autoscaling/index.html#cloudrail.knowledge.context.aws.autoscaling.launch_configuration.AutoScalingGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/autoscaling/index.html#cloudrail.knowledge.context.aws.autoscaling.launch_configuration.AutoScalingGroupRawData","text":"Attributes: Name Type Description launch_configuration_name Optional[str] The name of the launch configuration as read directly from the live environment. launch_template_data Optional[cloudrail.knowledge.context.aws.autoscaling.launch_configuration.LaunchTemplateData] The launch template data as read directly from the live environment.","title":"AutoScalingGroupRawData"},{"location":"context/aws/autoscaling/index.html#cloudrail.knowledge.context.aws.autoscaling.launch_configuration.LaunchConfiguration","text":"Attributes: Name Type Description arn str The ARN of the launch config. image_id str The EC2 Image ID of the instance. instance_type str The Instance Type of the instance to launch. key_name str The Key Name used for the instance. name str The Name of the launch configuration. security_group_ids List[str] The security groups used with the instance. http_tokens str Either \"optional\" or \"required\" (if None, means \"optional\"). iam_instance_profile Optional[str] The IAM Instance Profile to associate with launched instances (may be None). associate_public_ip_address Optional[bool] May be True to associate a public IP address with the launched instances. ebs_optimized bool Indication whether the EC2 instance has EBS optimization enabled of not. monitoring_enabled bool Indication if the launched EC2 instance will have detailed monitoring enabled.","title":"LaunchConfiguration"},{"location":"context/aws/autoscaling/index.html#cloudrail.knowledge.context.aws.autoscaling.launch_configuration.LaunchConfiguration.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/autoscaling/index.html#cloudrail.knowledge.context.aws.autoscaling.launch_configuration.LaunchConfiguration.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/autoscaling/index.html#cloudrail.knowledge.context.aws.autoscaling.launch_configuration.LaunchTemplateData","text":"Attributes: Name Type Description template_id str The id of the template. version str The number of the version.","title":"LaunchTemplateData"},{"location":"context/aws/autoscaling/index.html#cloudrail.knowledge.context.aws.autoscaling.launch_template.LaunchTemplate","text":"Attributes: Name Type Description template_id str The ID of the template. name str The name of the template. http_token str \"optional\" or \"required\" (if None, means \"optional\"). image_id str The EC2 Image ID of the instance. security_group_ids List[str] The security groups used with the instance. version_number int The version number of this template. iam_instance_profile Optional[str] The IAM Instance Profile to associate with launched instances (may be None). network_configurations List[NetworkConfiguration] The network configuration(s) set in the template (may be None). security_groups List[SecurityGroup] Points to the actual security groups set in security_group_ids. instance_type str The Instance type (i.e. 'm5.8xlarge'). ebs_optimized bool Indication whether the EC2 instance has EBS optimization enabled of not. monitoring_enabled bool Indication if the launched EC2 instance will have detailed monitoring enabled.","title":"LaunchTemplate"},{"location":"context/aws/autoscaling/index.html#cloudrail.knowledge.context.aws.autoscaling.launch_template.LaunchTemplate.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/autoscaling/index.html#cloudrail.knowledge.context.aws.autoscaling.launch_template.LaunchTemplate.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/batch/index.html","text":"BatchComputeEnvironment Attributes: Name Type Description compute_name str The name of the Batch Compute resource. arn str The ARN of Batch Compute resource. account The account ID in which this resource operates. region The region name in which this resource operates. vpc_config NetworkConfiguration Some networking information used by this resource. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"batch"},{"location":"context/aws/batch/index.html#cloudrail.knowledge.context.aws.batch.batch_compute_environment.BatchComputeEnvironment","text":"Attributes: Name Type Description compute_name str The name of the Batch Compute resource. arn str The ARN of Batch Compute resource. account The account ID in which this resource operates. region The region name in which this resource operates. vpc_config NetworkConfiguration Some networking information used by this resource.","title":"BatchComputeEnvironment"},{"location":"context/aws/batch/index.html#cloudrail.knowledge.context.aws.batch.batch_compute_environment.BatchComputeEnvironment.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/batch/index.html#cloudrail.knowledge.context.aws.batch.batch_compute_environment.BatchComputeEnvironment.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/cloudfront/index.html","text":"Sample rules A few rules that use objects from this package: non_car_cloudfront_protocol_version from typing import List , Dict from packaging import version from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class CloudFrontEnsureVersionRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_cloudfront_protocol_version' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for distribution_list in env_context . cloudfront_distribution_list : if self . _version_check ( distribution_list . viewer_cert . minimum_protocol_version ): issues . append ( Issue ( f 'The { distribution_list . get_type () } ` { distribution_list . get_friendly_name () } ` is set to use a minimum protocol version' f ' of ` { distribution_list . viewer_cert . minimum_protocol_version } ` whereas TLSv1.2_2019 is the recommended ' f 'minimum' , distribution_list , distribution_list )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . cloudfront_distribution_list ) @staticmethod def _version_check ( proto_version : str ) -> bool : if proto_version != 'SSLv3' : version_num = proto_version . replace ( 'TLSv' , '' ) . replace ( '_' , '.' ) return version . parse ( version_num ) < version . parse ( '1.2.2019' ) else : return True non_car_cloudfront_distribution_encrypt_in_transit from typing import List , Dict from cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list import CacheBehavior from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureCloudfrontDistributionEncryptInTransitRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_cloudfront_distribution_encrypt_in_transit' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for distribution in env_context . cloudfront_distribution_list : default_behavior_restricted = self . _is_https_restricted ( distribution . get_default_behavior () . viewer_protocol_policy ) ordered_behavior_list = distribution . get_ordered_behavior_list () ordered_cache_list = self . _get_messages ( ordered_behavior_list ) ordered_cache_restricted = len ( ordered_cache_list ) == 0 if not default_behavior_restricted and ordered_cache_restricted : issues . append ( Issue ( f \"The { distribution . get_type () } ` { distribution . get_friendly_name () } ` is not set to use HTTPS to protect\" f \" data in transit in default_cache_behavior\" , distribution , distribution )) elif default_behavior_restricted and not ordered_cache_restricted : issues . append ( Issue ( f \"The { distribution . get_type () } ` { distribution . get_friendly_name () } ` is not set to use HTTPS to protect\" f \" data in transit in { ordered_cache_list } \" , distribution , distribution )) elif not ( default_behavior_restricted or ordered_cache_restricted ): issues . append ( Issue ( f \"The { distribution . get_type () } ` { distribution . get_friendly_name () } ` is not set to use HTTPS to protect\" f \" data in transit default_cache_behavior\" f \" and in { ordered_cache_list } \" , distribution , distribution )) return issues @staticmethod def _is_https_restricted ( protocol : str ) -> bool : secure_values = [ 'redirect-to-https' , 'https-only' ] return protocol in secure_values @classmethod def _get_messages ( cls , ordered_behavior_list : List [ CacheBehavior ]) -> List [ str ]: return [ f 'ordered_cache_behavior # { cache . precedence } ' for cache in ordered_behavior_list if not cls . _is_https_restricted ( cache . viewer_protocol_policy )] def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . cloudfront_distribution_list ) CacheBehavior dataclass Attributes: Name Type Description allowed_methods List[str] The list of HTTP methods allowed. cached_methods List[str] The list of HTTP methods whose responses are cached. target_origin_id str The origin this cache is targeting. viewer_protocol_policy str One of allow-all, redirect-to-https, https-only. precedence int The order of the cache behavior. path_partern The URL pattern to match. trusted_signers List[str] A list of AWS account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies. field_level_encryption_id str The value of ID for the field-level encryption configuration to use, may be None. CloudFrontDistribution Attributes: Name Type Description arn str The ARN of the CloudFront Distribution. name str The name of the distribution. distribution_id str The ID of the distribution. viewer_cert ViewerCertificate An object of type ViewerCertificate representing the viewer certificate used with this distribution. origin_config_list List[OriginConfig] A list of OriginConfig, the order is not guaranteed. web_acl_id str The ID of the AWS WAF web ACL, to associate with this distribution. logs_settings Optional[CloudfrontDistributionLogging] The logs settings of the CloudFront Distribution, if configured. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process get_default_behavior ( self ) Returns: Type Description Optional[cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list.CacheBehavior] the default cache behavior. get_ordered_behavior_list ( self ) Returns: Type Description List[cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list.CacheBehavior] A list of CacheBehavior, if caching is configured. The order of the list is - first the default cache behavior, and then the specific cache behaviors by their defined order. OriginConfig dataclass Attributes: Name Type Description domain_name str The domain name for the origin. origin_id str The ID of the origin. oai_path str An optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin. origin_access_identity_list List[cloudrail.knowledge.context.aws.cloudfront.origin_access_identity.OriginAccessIdentity] List of OriginAccessIdentity configurations. ViewerCertificate dataclass Attributes: Name Type Description cloudfront_default_certificate bool Is this the default certificate. minimum_protocol_version str One of SSLv3 | TLSv1 | TLSv1_2016 | TLSv1.1_2016 | TLSv1.2_2018 | TLSv1.2_2019. OriginAccessIdentity Attributes: Name Type Description oai_id str The ID of this origin access identity. cloudfront_access_identity_path str The access identity's path. iam_arn str The ARN of the IAM entity to use. s3_canonical_user_id str The Amazon S3 canonical user ID for the origin access identity, used when giving the origin access identity read permission to an object in Amazon S3. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process CloudfrontDistributionLogging Attributes: Name Type Description name str The name of the workgroup. arn str The ARN of the CloudFront Distribution. distribution_id str The ID of the distribution. include_cookies bool Specifies whether CloudFront will include cookies in access logs. s3_bucket Optional[str] The S3 bucket to store access logs into. prefix Optional[str] String to add as a prefix to access log file names. logging_enabled bool Indication if access logging is enabled. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"cloudfront"},{"location":"context/aws/cloudfront/index.html#sample-rules","text":"A few rules that use objects from this package: non_car_cloudfront_protocol_version from typing import List , Dict from packaging import version from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class CloudFrontEnsureVersionRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_cloudfront_protocol_version' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for distribution_list in env_context . cloudfront_distribution_list : if self . _version_check ( distribution_list . viewer_cert . minimum_protocol_version ): issues . append ( Issue ( f 'The { distribution_list . get_type () } ` { distribution_list . get_friendly_name () } ` is set to use a minimum protocol version' f ' of ` { distribution_list . viewer_cert . minimum_protocol_version } ` whereas TLSv1.2_2019 is the recommended ' f 'minimum' , distribution_list , distribution_list )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . cloudfront_distribution_list ) @staticmethod def _version_check ( proto_version : str ) -> bool : if proto_version != 'SSLv3' : version_num = proto_version . replace ( 'TLSv' , '' ) . replace ( '_' , '.' ) return version . parse ( version_num ) < version . parse ( '1.2.2019' ) else : return True non_car_cloudfront_distribution_encrypt_in_transit from typing import List , Dict from cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list import CacheBehavior from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureCloudfrontDistributionEncryptInTransitRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_cloudfront_distribution_encrypt_in_transit' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for distribution in env_context . cloudfront_distribution_list : default_behavior_restricted = self . _is_https_restricted ( distribution . get_default_behavior () . viewer_protocol_policy ) ordered_behavior_list = distribution . get_ordered_behavior_list () ordered_cache_list = self . _get_messages ( ordered_behavior_list ) ordered_cache_restricted = len ( ordered_cache_list ) == 0 if not default_behavior_restricted and ordered_cache_restricted : issues . append ( Issue ( f \"The { distribution . get_type () } ` { distribution . get_friendly_name () } ` is not set to use HTTPS to protect\" f \" data in transit in default_cache_behavior\" , distribution , distribution )) elif default_behavior_restricted and not ordered_cache_restricted : issues . append ( Issue ( f \"The { distribution . get_type () } ` { distribution . get_friendly_name () } ` is not set to use HTTPS to protect\" f \" data in transit in { ordered_cache_list } \" , distribution , distribution )) elif not ( default_behavior_restricted or ordered_cache_restricted ): issues . append ( Issue ( f \"The { distribution . get_type () } ` { distribution . get_friendly_name () } ` is not set to use HTTPS to protect\" f \" data in transit default_cache_behavior\" f \" and in { ordered_cache_list } \" , distribution , distribution )) return issues @staticmethod def _is_https_restricted ( protocol : str ) -> bool : secure_values = [ 'redirect-to-https' , 'https-only' ] return protocol in secure_values @classmethod def _get_messages ( cls , ordered_behavior_list : List [ CacheBehavior ]) -> List [ str ]: return [ f 'ordered_cache_behavior # { cache . precedence } ' for cache in ordered_behavior_list if not cls . _is_https_restricted ( cache . viewer_protocol_policy )] def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . cloudfront_distribution_list )","title":"Sample rules"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list.CacheBehavior","text":"Attributes: Name Type Description allowed_methods List[str] The list of HTTP methods allowed. cached_methods List[str] The list of HTTP methods whose responses are cached. target_origin_id str The origin this cache is targeting. viewer_protocol_policy str One of allow-all, redirect-to-https, https-only. precedence int The order of the cache behavior. path_partern The URL pattern to match. trusted_signers List[str] A list of AWS account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies. field_level_encryption_id str The value of ID for the field-level encryption configuration to use, may be None.","title":"CacheBehavior"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list.CloudFrontDistribution","text":"Attributes: Name Type Description arn str The ARN of the CloudFront Distribution. name str The name of the distribution. distribution_id str The ID of the distribution. viewer_cert ViewerCertificate An object of type ViewerCertificate representing the viewer certificate used with this distribution. origin_config_list List[OriginConfig] A list of OriginConfig, the order is not guaranteed. web_acl_id str The ID of the AWS WAF web ACL, to associate with this distribution. logs_settings Optional[CloudfrontDistributionLogging] The logs settings of the CloudFront Distribution, if configured.","title":"CloudFrontDistribution"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list.CloudFrontDistribution.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list.CloudFrontDistribution.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list.CloudFrontDistribution.get_default_behavior","text":"Returns: Type Description Optional[cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list.CacheBehavior] the default cache behavior.","title":"get_default_behavior()"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list.CloudFrontDistribution.get_ordered_behavior_list","text":"Returns: Type Description List[cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list.CacheBehavior] A list of CacheBehavior, if caching is configured. The order of the list is - first the default cache behavior, and then the specific cache behaviors by their defined order.","title":"get_ordered_behavior_list()"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list.OriginConfig","text":"Attributes: Name Type Description domain_name str The domain name for the origin. origin_id str The ID of the origin. oai_path str An optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin. origin_access_identity_list List[cloudrail.knowledge.context.aws.cloudfront.origin_access_identity.OriginAccessIdentity] List of OriginAccessIdentity configurations.","title":"OriginConfig"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.cloud_front_distribution_list.ViewerCertificate","text":"Attributes: Name Type Description cloudfront_default_certificate bool Is this the default certificate. minimum_protocol_version str One of SSLv3 | TLSv1 | TLSv1_2016 | TLSv1.1_2016 | TLSv1.2_2018 | TLSv1.2_2019.","title":"ViewerCertificate"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.origin_access_identity.OriginAccessIdentity","text":"Attributes: Name Type Description oai_id str The ID of this origin access identity. cloudfront_access_identity_path str The access identity's path. iam_arn str The ARN of the IAM entity to use. s3_canonical_user_id str The Amazon S3 canonical user ID for the origin access identity, used when giving the origin access identity read permission to an object in Amazon S3.","title":"OriginAccessIdentity"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.origin_access_identity.OriginAccessIdentity.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.origin_access_identity.OriginAccessIdentity.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.cloudfront_distribution_logging.CloudfrontDistributionLogging","text":"Attributes: Name Type Description name str The name of the workgroup. arn str The ARN of the CloudFront Distribution. distribution_id str The ID of the distribution. include_cookies bool Specifies whether CloudFront will include cookies in access logs. s3_bucket Optional[str] The S3 bucket to store access logs into. prefix Optional[str] String to add as a prefix to access log file names. logging_enabled bool Indication if access logging is enabled.","title":"CloudfrontDistributionLogging"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.cloudfront_distribution_logging.CloudfrontDistributionLogging.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/cloudfront/index.html#cloudrail.knowledge.context.aws.cloudfront.cloudfront_distribution_logging.CloudfrontDistributionLogging.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/cloudhsmv2/index.html","text":"CloudHsmV2Cluster Attributes: Name Type Description hsm_type str The HSM type of the cluster. subnet_ids list The subnet IDs used for the cluster. vpc_id str The VPC ID used for the HSM cluster. security_group_id str The security group id which is used for the HSM cluster. account The account ID in which this HSM cluster operates. region The region in which this HSM cluster operates. vpc_config NetworkConfiguration some networking attributes used to associate ENI to the resource. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process CloudHsmV2Hsm Attributes: Name Type Description cluster_id str The HSM cluster ID. hsm_id str The HSM ID. subnet_id str The subnet ID in which this HSM operates. availability_zone str The availability zone in which this HSM operates. hsm_state str The HSM readiness state. account The account ID in which this HSM cluster operates. region The region in which this HSM cluster operates. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"cloudhsmv2"},{"location":"context/aws/cloudhsmv2/index.html#cloudrail.knowledge.context.aws.cloudhsmv2.cloudhsm_v2_cluster.CloudHsmV2Cluster","text":"Attributes: Name Type Description hsm_type str The HSM type of the cluster. subnet_ids list The subnet IDs used for the cluster. vpc_id str The VPC ID used for the HSM cluster. security_group_id str The security group id which is used for the HSM cluster. account The account ID in which this HSM cluster operates. region The region in which this HSM cluster operates. vpc_config NetworkConfiguration some networking attributes used to associate ENI to the resource.","title":"CloudHsmV2Cluster"},{"location":"context/aws/cloudhsmv2/index.html#cloudrail.knowledge.context.aws.cloudhsmv2.cloudhsm_v2_cluster.CloudHsmV2Cluster.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/cloudhsmv2/index.html#cloudrail.knowledge.context.aws.cloudhsmv2.cloudhsm_v2_cluster.CloudHsmV2Cluster.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/cloudhsmv2/index.html#cloudrail.knowledge.context.aws.cloudhsmv2.cloudhsm_v2_hsm.CloudHsmV2Hsm","text":"Attributes: Name Type Description cluster_id str The HSM cluster ID. hsm_id str The HSM ID. subnet_id str The subnet ID in which this HSM operates. availability_zone str The availability zone in which this HSM operates. hsm_state str The HSM readiness state. account The account ID in which this HSM cluster operates. region The region in which this HSM cluster operates.","title":"CloudHsmV2Hsm"},{"location":"context/aws/cloudhsmv2/index.html#cloudrail.knowledge.context.aws.cloudhsmv2.cloudhsm_v2_hsm.CloudHsmV2Hsm.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/cloudhsmv2/index.html#cloudrail.knowledge.context.aws.cloudhsmv2.cloudhsm_v2_hsm.CloudHsmV2Hsm.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/cloudtrail/index.html","text":"Sample rules A few rules that use objects from this package: not_car_cloudtrail_trails_encrypt_at_rest_with_sse_kms from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureCloudTrailEncryptionKmsRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'not_car_cloudtrail_trails_encrypt_at_rest_with_sse_kms' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for trail in env_context . cloudtrail : if not trail . kms_encryption : issues . append ( Issue ( f 'The { trail . get_type () } trail ` { trail . get_friendly_name () } ` is not set to use ' f 'encryption at rest with KMS CMK' , trail , trail )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . cloudtrail ) non_car_aws_cloudtrail_log_validation_disabled from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureCloudTrailLogValidationEnabledRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_aws_cloudtrail_log_validation_disabled' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for trail in env_context . cloudtrail : if not trail . log_file_validation : issues . append ( Issue ( f 'The { trail . get_type () } trail ` { trail . get_friendly_name () } ` does not have log validation enabled' , trail , trail )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . cloudtrail ) CloudTrail Attributes: Name Type Description name str The name of the CloudTrail trail. kms_encryption bool True if KMS encryption is used. arn str The ARN of the CloudTrail trail. log_file_validation bool True if log file validation is enabled. is_multi_region_trail bool An indication if the trail is created in the current region or in all regions. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"cloudtrail"},{"location":"context/aws/cloudtrail/index.html#sample-rules","text":"A few rules that use objects from this package: not_car_cloudtrail_trails_encrypt_at_rest_with_sse_kms from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureCloudTrailEncryptionKmsRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'not_car_cloudtrail_trails_encrypt_at_rest_with_sse_kms' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for trail in env_context . cloudtrail : if not trail . kms_encryption : issues . append ( Issue ( f 'The { trail . get_type () } trail ` { trail . get_friendly_name () } ` is not set to use ' f 'encryption at rest with KMS CMK' , trail , trail )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . cloudtrail ) non_car_aws_cloudtrail_log_validation_disabled from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureCloudTrailLogValidationEnabledRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_aws_cloudtrail_log_validation_disabled' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for trail in env_context . cloudtrail : if not trail . log_file_validation : issues . append ( Issue ( f 'The { trail . get_type () } trail ` { trail . get_friendly_name () } ` does not have log validation enabled' , trail , trail )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . cloudtrail )","title":"Sample rules"},{"location":"context/aws/cloudtrail/index.html#cloudrail.knowledge.context.aws.cloudtrail.cloudtrail.CloudTrail","text":"Attributes: Name Type Description name str The name of the CloudTrail trail. kms_encryption bool True if KMS encryption is used. arn str The ARN of the CloudTrail trail. log_file_validation bool True if log file validation is enabled. is_multi_region_trail bool An indication if the trail is created in the current region or in all regions.","title":"CloudTrail"},{"location":"context/aws/cloudtrail/index.html#cloudrail.knowledge.context.aws.cloudtrail.cloudtrail.CloudTrail.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/cloudtrail/index.html#cloudrail.knowledge.context.aws.cloudtrail.cloudtrail.CloudTrail.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/cloudwatch/index.html","text":"Sample rules A few rules that use objects from this package: non_car_lambda_logging_not_infnite from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureLambdaFunctionHasNonInfiniteLogRetentionRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_lambda_logging_not_infnite' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for lambda_func in env_context . lambda_function_list : if lambda_func . log_group . retention_in_days == 0 or not lambda_func . log_group . retention_in_days : if lambda_func . log_group . is_pseudo : issues . append ( Issue ( f 'Upon creation, { lambda_func . get_type () } ` { lambda_func . get_friendly_name () } ` ' f 'will have a log group generated automatically with its retention set to Never Expire' , lambda_func , lambda_func )) else : issues . append ( Issue ( f 'The { lambda_func . log_group . get_type () } ` { lambda_func . log_group . get_friendly_name () } ` has ' f 'retention set to Never Expire' , lambda_func , lambda_func . log_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . lambda_function_list ) non_car_cw_log_group_no_retention from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureCloudWatchLogGroupsRetentionUsageRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_cw_log_group_no_retention' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for log_group in env_context . cloud_watch_log_groups : if not log_group . retention_in_days : issues . append ( Issue ( f 'The { log_group . get_type () } ` { log_group . get_friendly_name () } ` does not have a retention policy set' , log_group , log_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . cloud_watch_log_groups ) CloudWatchEventTarget Attributes: Name Type Description name str The name of the CloudWatch Event Target. rule_name str The name of the rule used with the target. target_id str The ID of this traget. role_arn str The ARN of the role used to send the events, may be None. cluster_arn str If an ECS cluster is targeted, this is the ARN of the ECS cluster. ecs_target_list List[EcsTarget] If an ECS cluster is targeted, lists the ECS targets. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process CloudWatchLogGroup Attributes: Name Type Description name str The name of the CloudWatch Log Group. kms_encryption str KMS key ID is used, or None if not. kms_data KmsKey A pointer to the actual KMS key, if used. arn str The ARN of the Log Group. retention_in_days int If configured, this is the retention of the log data in days. May be None. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process CloudWatchLogsDestination Attributes: Name Type Description name str The name of the destination. arn str THe ARN of the destination. policy CloudWatchLogsDestinationPolicy The destination's policy, if configured (may be None). custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process CloudWatchLogsDestinationPolicy Attributes: Name Type Description destination_name str The name of the destination the policy applies to. statements The list of statements in the policy. uuid A randomly generated uuid for the policy (ignore, for internal use). raw_document The raw JSON of the policy. access_analyzer_findings The results from running IAM Access Analyzer's policy validation API on this policy's JSON. policy_type The type of the policy (identity, resource, SCP). custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"cloudwatch"},{"location":"context/aws/cloudwatch/index.html#sample-rules","text":"A few rules that use objects from this package: non_car_lambda_logging_not_infnite from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureLambdaFunctionHasNonInfiniteLogRetentionRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_lambda_logging_not_infnite' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for lambda_func in env_context . lambda_function_list : if lambda_func . log_group . retention_in_days == 0 or not lambda_func . log_group . retention_in_days : if lambda_func . log_group . is_pseudo : issues . append ( Issue ( f 'Upon creation, { lambda_func . get_type () } ` { lambda_func . get_friendly_name () } ` ' f 'will have a log group generated automatically with its retention set to Never Expire' , lambda_func , lambda_func )) else : issues . append ( Issue ( f 'The { lambda_func . log_group . get_type () } ` { lambda_func . log_group . get_friendly_name () } ` has ' f 'retention set to Never Expire' , lambda_func , lambda_func . log_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . lambda_function_list ) non_car_cw_log_group_no_retention from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureCloudWatchLogGroupsRetentionUsageRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_cw_log_group_no_retention' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for log_group in env_context . cloud_watch_log_groups : if not log_group . retention_in_days : issues . append ( Issue ( f 'The { log_group . get_type () } ` { log_group . get_friendly_name () } ` does not have a retention policy set' , log_group , log_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . cloud_watch_log_groups )","title":"Sample rules"},{"location":"context/aws/cloudwatch/index.html#cloudrail.knowledge.context.aws.cloudwatch.cloud_watch_event_target.CloudWatchEventTarget","text":"Attributes: Name Type Description name str The name of the CloudWatch Event Target. rule_name str The name of the rule used with the target. target_id str The ID of this traget. role_arn str The ARN of the role used to send the events, may be None. cluster_arn str If an ECS cluster is targeted, this is the ARN of the ECS cluster. ecs_target_list List[EcsTarget] If an ECS cluster is targeted, lists the ECS targets.","title":"CloudWatchEventTarget"},{"location":"context/aws/cloudwatch/index.html#cloudrail.knowledge.context.aws.cloudwatch.cloud_watch_event_target.CloudWatchEventTarget.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/cloudwatch/index.html#cloudrail.knowledge.context.aws.cloudwatch.cloud_watch_event_target.CloudWatchEventTarget.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/cloudwatch/index.html#cloudrail.knowledge.context.aws.cloudwatch.cloud_watch_log_group.CloudWatchLogGroup","text":"Attributes: Name Type Description name str The name of the CloudWatch Log Group. kms_encryption str KMS key ID is used, or None if not. kms_data KmsKey A pointer to the actual KMS key, if used. arn str The ARN of the Log Group. retention_in_days int If configured, this is the retention of the log data in days. May be None.","title":"CloudWatchLogGroup"},{"location":"context/aws/cloudwatch/index.html#cloudrail.knowledge.context.aws.cloudwatch.cloud_watch_log_group.CloudWatchLogGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/cloudwatch/index.html#cloudrail.knowledge.context.aws.cloudwatch.cloud_watch_log_group.CloudWatchLogGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/cloudwatch/index.html#cloudrail.knowledge.context.aws.cloudwatch.cloudwatch_logs_destination.CloudWatchLogsDestination","text":"Attributes: Name Type Description name str The name of the destination. arn str THe ARN of the destination. policy CloudWatchLogsDestinationPolicy The destination's policy, if configured (may be None).","title":"CloudWatchLogsDestination"},{"location":"context/aws/cloudwatch/index.html#cloudrail.knowledge.context.aws.cloudwatch.cloudwatch_logs_destination.CloudWatchLogsDestination.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/cloudwatch/index.html#cloudrail.knowledge.context.aws.cloudwatch.cloudwatch_logs_destination.CloudWatchLogsDestination.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/cloudwatch/index.html#cloudrail.knowledge.context.aws.cloudwatch.cloudwatch_logs_destination_policy.CloudWatchLogsDestinationPolicy","text":"Attributes: Name Type Description destination_name str The name of the destination the policy applies to. statements The list of statements in the policy. uuid A randomly generated uuid for the policy (ignore, for internal use). raw_document The raw JSON of the policy. access_analyzer_findings The results from running IAM Access Analyzer's policy validation API on this policy's JSON. policy_type The type of the policy (identity, resource, SCP).","title":"CloudWatchLogsDestinationPolicy"},{"location":"context/aws/cloudwatch/index.html#cloudrail.knowledge.context.aws.cloudwatch.cloudwatch_logs_destination_policy.CloudWatchLogsDestinationPolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/cloudwatch/index.html#cloudrail.knowledge.context.aws.cloudwatch.cloudwatch_logs_destination_policy.CloudWatchLogsDestinationPolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/codebuild/index.html","text":"Sample rules A few rules that use objects from this package: not_car_codebuild_projects_encrypted_at_rest_with_customer_managed_CMK from typing import List , Dict from cloudrail.knowledge.context.aws.kms.kms_key_manager import KeyManager from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureCodeBuildProjectsEncryptedRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'not_car_codebuild_projects_encrypted_at_rest_with_customer_managed_CMK' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for project in env_context . codebuild_projects : if project . kms_data . key_manager != KeyManager . CUSTOMER : issues . append ( Issue ( f 'The { project . get_type () } project ` { project . get_friendly_name () } ` ' f 'is not set to use encryption at rest ' f 'with customer-managed CMK' , project , project )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . codebuild_projects ) CodeBuildProject Attributes: Name Type Description project_name str The name of the project. encryption_key str The KMS ID of the encryption key, if used, or None otherwise. arn str The ARN of the project. vpc_config NetworkConfiguration The network configuration of the project, if configured. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process CodeBuildReportGroup Attributes: Name Type Description name str The name of the report group. export_config_type str S3 or NO_EXPORT. export_config_s3_destination_bucket str If S3 type is used, the destination bucket. export_config_s3_destination_encryption_key str If S3 type is used, the encryption key to use. export_config_s3_destination_encryption_disabled bool If S3 type is used, whether or not encryption is enabled. export_config_s3_destination_kms_data KmsKey If encryption is used, the KMS key used to encrypt. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"codebuild"},{"location":"context/aws/codebuild/index.html#sample-rules","text":"A few rules that use objects from this package: not_car_codebuild_projects_encrypted_at_rest_with_customer_managed_CMK from typing import List , Dict from cloudrail.knowledge.context.aws.kms.kms_key_manager import KeyManager from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureCodeBuildProjectsEncryptedRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'not_car_codebuild_projects_encrypted_at_rest_with_customer_managed_CMK' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for project in env_context . codebuild_projects : if project . kms_data . key_manager != KeyManager . CUSTOMER : issues . append ( Issue ( f 'The { project . get_type () } project ` { project . get_friendly_name () } ` ' f 'is not set to use encryption at rest ' f 'with customer-managed CMK' , project , project )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . codebuild_projects )","title":"Sample rules"},{"location":"context/aws/codebuild/index.html#cloudrail.knowledge.context.aws.codebuild.codebuild_project.CodeBuildProject","text":"Attributes: Name Type Description project_name str The name of the project. encryption_key str The KMS ID of the encryption key, if used, or None otherwise. arn str The ARN of the project. vpc_config NetworkConfiguration The network configuration of the project, if configured.","title":"CodeBuildProject"},{"location":"context/aws/codebuild/index.html#cloudrail.knowledge.context.aws.codebuild.codebuild_project.CodeBuildProject.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/codebuild/index.html#cloudrail.knowledge.context.aws.codebuild.codebuild_project.CodeBuildProject.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/codebuild/index.html#cloudrail.knowledge.context.aws.codebuild.codebuild_report_group.CodeBuildReportGroup","text":"Attributes: Name Type Description name str The name of the report group. export_config_type str S3 or NO_EXPORT. export_config_s3_destination_bucket str If S3 type is used, the destination bucket. export_config_s3_destination_encryption_key str If S3 type is used, the encryption key to use. export_config_s3_destination_encryption_disabled bool If S3 type is used, whether or not encryption is enabled. export_config_s3_destination_kms_data KmsKey If encryption is used, the KMS key used to encrypt.","title":"CodeBuildReportGroup"},{"location":"context/aws/codebuild/index.html#cloudrail.knowledge.context.aws.codebuild.codebuild_report_group.CodeBuildReportGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/codebuild/index.html#cloudrail.knowledge.context.aws.codebuild.codebuild_report_group.CodeBuildReportGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/configservice/index.html","text":"Sample rules A few rules that use objects from this package: non_car_config_aggregator_is_enabled_in_all_regions from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureConfigAggregatorEnabledAllRegionsRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_config_aggregator_is_enabled_in_all_regions' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for aggregator in env_context . aws_config_aggregators : if not aggregator . is_enabled_all_regions : issues . append ( Issue ( f 'The { aggregator . get_type () } ` { aggregator . get_friendly_name () } ` is not enabled in all regions' , aggregator , aggregator )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . aws_config_aggregators ) ConfigAggregator Attributes: Name Type Description aggregator_name str The name of the Config Aggregator. arn str The ARN of the Config Aggregator. account_aggregation_used bool An indication if the aggregation data is set for the account. organization_aggregation_used bool An indication if the aggregation data is set for the organization. account_aggregation_all_regions_enabled Optional[bool] An indication if the account to aggregate data is enabled on all regions. organization_aggregation_all_regions_enabled Optional[bool] An indication if the organization to aggregate data is enabled on all regions. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"configservice"},{"location":"context/aws/configservice/index.html#sample-rules","text":"A few rules that use objects from this package: non_car_config_aggregator_is_enabled_in_all_regions from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureConfigAggregatorEnabledAllRegionsRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'non_car_config_aggregator_is_enabled_in_all_regions' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for aggregator in env_context . aws_config_aggregators : if not aggregator . is_enabled_all_regions : issues . append ( Issue ( f 'The { aggregator . get_type () } ` { aggregator . get_friendly_name () } ` is not enabled in all regions' , aggregator , aggregator )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . aws_config_aggregators )","title":"Sample rules"},{"location":"context/aws/configservice/index.html#cloudrail.knowledge.context.aws.configservice.config_aggregator.ConfigAggregator","text":"Attributes: Name Type Description aggregator_name str The name of the Config Aggregator. arn str The ARN of the Config Aggregator. account_aggregation_used bool An indication if the aggregation data is set for the account. organization_aggregation_used bool An indication if the aggregation data is set for the organization. account_aggregation_all_regions_enabled Optional[bool] An indication if the account to aggregate data is enabled on all regions. organization_aggregation_all_regions_enabled Optional[bool] An indication if the organization to aggregate data is enabled on all regions.","title":"ConfigAggregator"},{"location":"context/aws/configservice/index.html#cloudrail.knowledge.context.aws.configservice.config_aggregator.ConfigAggregator.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/configservice/index.html#cloudrail.knowledge.context.aws.configservice.config_aggregator.ConfigAggregator.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/dax/index.html","text":"Sample rules A few rules that use objects from this package: not_car_dynamodb_dax_clusters_encrypted_at_rest from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureDaxClustersEncryptedRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'not_car_dynamodb_dax_clusters_encrypted_at_rest' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for dax_cluster in env_context . dax_cluster : if dax_cluster . is_new_resource (): if not dax_cluster . server_side_encryption : issues . append ( Issue ( f 'The { dax_cluster . get_type () } ` { dax_cluster . get_friendly_name () } ` is not set ' f 'to be encrypted at rest' , dax_cluster , dax_cluster )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . dax_cluster ) DaxCluster Attributes: Name Type Description cluster_name str The name of the DAX cluster. server_side_encryption bool True if SSE is enabled. cluster_arn str The ARN of the cluster. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"dax"},{"location":"context/aws/dax/index.html#sample-rules","text":"A few rules that use objects from this package: not_car_dynamodb_dax_clusters_encrypted_at_rest from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureDaxClustersEncryptedRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'not_car_dynamodb_dax_clusters_encrypted_at_rest' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for dax_cluster in env_context . dax_cluster : if dax_cluster . is_new_resource (): if not dax_cluster . server_side_encryption : issues . append ( Issue ( f 'The { dax_cluster . get_type () } ` { dax_cluster . get_friendly_name () } ` is not set ' f 'to be encrypted at rest' , dax_cluster , dax_cluster )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . dax_cluster )","title":"Sample rules"},{"location":"context/aws/dax/index.html#cloudrail.knowledge.context.aws.dax.dax_cluster.DaxCluster","text":"Attributes: Name Type Description cluster_name str The name of the DAX cluster. server_side_encryption bool True if SSE is enabled. cluster_arn str The ARN of the cluster.","title":"DaxCluster"},{"location":"context/aws/dax/index.html#cloudrail.knowledge.context.aws.dax.dax_cluster.DaxCluster.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/dax/index.html#cloudrail.knowledge.context.aws.dax.dax_cluster.DaxCluster.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/dms/index.html","text":"Sample rules A few rules that use objects from this package: public_access_dms_replication_instance from typing import Dict , List from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessDmsReplicationInstanceRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'public_access_dms_replication_instance' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for dms_instance in env_context . dms_replication_instances : security_group = dms_instance . security_group_allowing_public_access if security_group : issues . append ( Issue ( f '~Internet~. ' f \"Instance ` { dms_instance . get_friendly_name () } ` is on \" f \" { dms_instance . network_resource . vpc . get_type () } \" f \" ` { dms_instance . network_resource . vpc . get_friendly_name () } `. \" f \" { dms_instance . get_type () } uses subnet(s) \" f \"` { ', ' . join ([ x . get_friendly_name () for x in dms_instance . network_resource . subnets ]) } `. \" f \" { dms_instance . get_type () } is reachable from the internet due to subnet(s) and route table(s). \" f \"Subnet uses Network ACL(s) \" f \"` { ', ' . join ({ x . network_acl . get_friendly_name () for x in dms_instance . network_resource . subnets }) } `. \" f \"Network ACL's and security group(s) allows access to the { dms_instance . get_type () } . \" f '~ { dms_instance . get_type () } ~' , dms_instance , security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . dms_replication_instances ) DmsReplicationInstance Attributes: Name Type Description name The name of the DMS replication instance. arn str The ARN of the instance. publicly_accessible bool True if the DMS is set to be publicly accessible. rep_instance_subnet_group_id str Replication instance subnet group ID. subnet_ids Optional[List[str]] The actual subnets the DMS is connected to. security_group_ids List[str] The IDs of the security groups the DMS is using. is_in_default_vpc bool True if the DMS instance is in the default VPC. security_group_allowing_public_access Optional[SecurityGroup] A security group that allows access from the internet. This value will be None when this resource is not accessible from the internet. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process DmsReplicationInstanceSubnetGroup Attributes: Name Type Description rep_subnet_group_id str The ID of this subnet group. subnet_ids List The IDs of the subnets contained in this group. vpc_id Optional[str] The ID of the VPC the subnets are in. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"dms"},{"location":"context/aws/dms/index.html#sample-rules","text":"A few rules that use objects from this package: public_access_dms_replication_instance from typing import Dict , List from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessDmsReplicationInstanceRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'public_access_dms_replication_instance' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for dms_instance in env_context . dms_replication_instances : security_group = dms_instance . security_group_allowing_public_access if security_group : issues . append ( Issue ( f '~Internet~. ' f \"Instance ` { dms_instance . get_friendly_name () } ` is on \" f \" { dms_instance . network_resource . vpc . get_type () } \" f \" ` { dms_instance . network_resource . vpc . get_friendly_name () } `. \" f \" { dms_instance . get_type () } uses subnet(s) \" f \"` { ', ' . join ([ x . get_friendly_name () for x in dms_instance . network_resource . subnets ]) } `. \" f \" { dms_instance . get_type () } is reachable from the internet due to subnet(s) and route table(s). \" f \"Subnet uses Network ACL(s) \" f \"` { ', ' . join ({ x . network_acl . get_friendly_name () for x in dms_instance . network_resource . subnets }) } `. \" f \"Network ACL's and security group(s) allows access to the { dms_instance . get_type () } . \" f '~ { dms_instance . get_type () } ~' , dms_instance , security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . dms_replication_instances )","title":"Sample rules"},{"location":"context/aws/dms/index.html#cloudrail.knowledge.context.aws.dms.dms_replication_instance.DmsReplicationInstance","text":"Attributes: Name Type Description name The name of the DMS replication instance. arn str The ARN of the instance. publicly_accessible bool True if the DMS is set to be publicly accessible. rep_instance_subnet_group_id str Replication instance subnet group ID. subnet_ids Optional[List[str]] The actual subnets the DMS is connected to. security_group_ids List[str] The IDs of the security groups the DMS is using. is_in_default_vpc bool True if the DMS instance is in the default VPC. security_group_allowing_public_access Optional[SecurityGroup] A security group that allows access from the internet. This value will be None when this resource is not accessible from the internet.","title":"DmsReplicationInstance"},{"location":"context/aws/dms/index.html#cloudrail.knowledge.context.aws.dms.dms_replication_instance.DmsReplicationInstance.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/dms/index.html#cloudrail.knowledge.context.aws.dms.dms_replication_instance.DmsReplicationInstance.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/dms/index.html#cloudrail.knowledge.context.aws.dms.dms_replication_instance_subnet_group.DmsReplicationInstanceSubnetGroup","text":"Attributes: Name Type Description rep_subnet_group_id str The ID of this subnet group. subnet_ids List The IDs of the subnets contained in this group. vpc_id Optional[str] The ID of the VPC the subnets are in.","title":"DmsReplicationInstanceSubnetGroup"},{"location":"context/aws/dms/index.html#cloudrail.knowledge.context.aws.dms.dms_replication_instance_subnet_group.DmsReplicationInstanceSubnetGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/dms/index.html#cloudrail.knowledge.context.aws.dms.dms_replication_instance_subnet_group.DmsReplicationInstanceSubnetGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/docdb/index.html","text":"Sample rules A few rules that use objects from this package: not_car_docdb_cluster_encrypted_at_rest_using_customer_managed_cmk from typing import List , Dict from cloudrail.knowledge.context.aws.kms.kms_key_manager import KeyManager from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureDocdbClustersEncryptedCustomerManagedCmkRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'not_car_docdb_cluster_encrypted_at_rest_using_customer_managed_cmk' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for docdb_cluster in env_context . docdb_cluster : if docdb_cluster . is_new_resource () and docdb_cluster . storage_encrypted : if not docdb_cluster . kms_data or docdb_cluster . kms_data . key_manager != KeyManager . CUSTOMER : issues . append ( Issue ( f 'The DocDB cluster ` { docdb_cluster . get_friendly_name () } ` is not set ' f 'to be encrypted at rest using customer-managed CMK' , docdb_cluster , docdb_cluster )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . docdb_cluster ) DocumentDbCluster Attributes: Name Type Description cluster_identifier str The ID of the DocDB cluster. storage_encrypted bool True if the storage is encrypted. parameter_group_name str The name of the DB's paramaeter group. kms_key_id str If KMS is used, this is the ID of the key. kms_data Optional[KmsKey] The actual KMS key in use, if one is used (or None). cluster_arn str The ARN of the cluster. enabled_cloudwatch_logs_exports list List of log types to export to cloudwatch. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process DocDbClusterParameterGroup Attributes: Name Type Description group_name str The name of the group. parameters List[DocDbClusterParameter] The parameters in the group. group_arn The ARN of the group. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process DocDbClusterParameterGroupRawData dataclass An internal raw class, you may ignore this.","title":"docdb"},{"location":"context/aws/docdb/index.html#sample-rules","text":"A few rules that use objects from this package: not_car_docdb_cluster_encrypted_at_rest_using_customer_managed_cmk from typing import List , Dict from cloudrail.knowledge.context.aws.kms.kms_key_manager import KeyManager from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureDocdbClustersEncryptedCustomerManagedCmkRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'not_car_docdb_cluster_encrypted_at_rest_using_customer_managed_cmk' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for docdb_cluster in env_context . docdb_cluster : if docdb_cluster . is_new_resource () and docdb_cluster . storage_encrypted : if not docdb_cluster . kms_data or docdb_cluster . kms_data . key_manager != KeyManager . CUSTOMER : issues . append ( Issue ( f 'The DocDB cluster ` { docdb_cluster . get_friendly_name () } ` is not set ' f 'to be encrypted at rest using customer-managed CMK' , docdb_cluster , docdb_cluster )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . docdb_cluster )","title":"Sample rules"},{"location":"context/aws/docdb/index.html#cloudrail.knowledge.context.aws.docdb.docdb_cluster.DocumentDbCluster","text":"Attributes: Name Type Description cluster_identifier str The ID of the DocDB cluster. storage_encrypted bool True if the storage is encrypted. parameter_group_name str The name of the DB's paramaeter group. kms_key_id str If KMS is used, this is the ID of the key. kms_data Optional[KmsKey] The actual KMS key in use, if one is used (or None). cluster_arn str The ARN of the cluster. enabled_cloudwatch_logs_exports list List of log types to export to cloudwatch.","title":"DocumentDbCluster"},{"location":"context/aws/docdb/index.html#cloudrail.knowledge.context.aws.docdb.docdb_cluster.DocumentDbCluster.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/docdb/index.html#cloudrail.knowledge.context.aws.docdb.docdb_cluster.DocumentDbCluster.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/docdb/index.html#cloudrail.knowledge.context.aws.docdb.docdb_cluster_parameter_group.DocDbClusterParameterGroup","text":"Attributes: Name Type Description group_name str The name of the group. parameters List[DocDbClusterParameter] The parameters in the group. group_arn The ARN of the group.","title":"DocDbClusterParameterGroup"},{"location":"context/aws/docdb/index.html#cloudrail.knowledge.context.aws.docdb.docdb_cluster_parameter_group.DocDbClusterParameterGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/docdb/index.html#cloudrail.knowledge.context.aws.docdb.docdb_cluster_parameter_group.DocDbClusterParameterGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/docdb/index.html#cloudrail.knowledge.context.aws.docdb.docdb_cluster_parameter_group.DocDbClusterParameterGroupRawData","text":"An internal raw class, you may ignore this.","title":"DocDbClusterParameterGroupRawData"},{"location":"context/aws/ds/index.html","text":"DirectoryService Attributes: Name Type Description name str The name of the Directory Service. arn The ARN of the service. vpc_id str The VPC the Directory Service is deployed in. directory_type str The directory's type. vpc_config NetworkConfiguration The network configuration of the Directory Service. security_group_controller SecurityGroup The Security Group used with this service, may be Cloudrail-generated in case only the rules are defined and no specific SG is configured. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"ds"},{"location":"context/aws/ds/index.html#cloudrail.knowledge.context.aws.ds.directory_service.DirectoryService","text":"Attributes: Name Type Description name str The name of the Directory Service. arn The ARN of the service. vpc_id str The VPC the Directory Service is deployed in. directory_type str The directory's type. vpc_config NetworkConfiguration The network configuration of the Directory Service. security_group_controller SecurityGroup The Security Group used with this service, may be Cloudrail-generated in case only the rules are defined and no specific SG is configured.","title":"DirectoryService"},{"location":"context/aws/ds/index.html#cloudrail.knowledge.context.aws.ds.directory_service.DirectoryService.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ds/index.html#cloudrail.knowledge.context.aws.ds.directory_service.DirectoryService.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/dynamodb/index.html","text":"Sample rules A few rules that use objects from this package: endpoint_dynamodb_route_table_exposure from abc import abstractmethod from typing import List , Dict from cloudrail.knowledge.context.aws.prefix_lists import PrefixLists , PrefixList from cloudrail.knowledge.context.aws.ec2.route import Route from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.context.aws.service_name import AwsServiceType from cloudrail.knowledge.rules.aws.context_aware.vpc_endpoints.abstract_vpc_endpoint_gateway_rule import AbstractVpcEndpointGatewayRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class AbstractVpcEndpointRouteTableExposureRule ( AbstractVpcEndpointGatewayRule ): @abstractmethod def get_id ( self ) -> str : pass def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: vpc_list , _ , vpc_to_eni_map = self . _init_maps ( env_context ) region_to_prefix_lists_map : Dict [ str , PrefixLists ] = self . _create_prefix_list_by_region_map ( env_context ) issues_list : List [ Issue ] = [] for vpc in vpc_list : for eni in vpc_to_eni_map . get ( vpc , []): if self . _is_service_eni_match ( eni ): for subnet in vpc . subnets : prefix_list : PrefixLists = region_to_prefix_lists_map [ vpc . region ] aws_service_pl : PrefixList = prefix_list . get_prefix_lists_by_service ( self . aws_service_type . value ) most_specific_service_pl_route : Route = self . _get_most_specific_service_pl_route ( subnet . route_table , aws_service_pl ) if vpc . endpoints and \\ not ( most_specific_service_pl_route and self . _is_valid_vpc_endpoint_route ( most_specific_service_pl_route , aws_service_pl , subnet . vpc . endpoints )): issues_list . append ( Issue ( f \"~The { vpc . get_type () } ~. ` { vpc . get_friendly_name () } ` \" f \"has a { aws_service_pl . service_name . upper () } Endpoint gateway \" f \"but ` { subnet . get_friendly_name () } ` uses ` { subnet . route_table . get_friendly_name () } `\" f \", which does not have a route to the Endpoint gateway.\" , subnet . vpc , subnet . route_table )) break return issues_list def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . vpc_endpoints ) class S3VpcEndpointRouteTableExposureRule ( AbstractVpcEndpointRouteTableExposureRule ): def __init__ ( self ) -> None : super () . __init__ ( AwsServiceType . S3 , ( 443 , 80 ), self . S3_SERVICES_EXCLUDE_LIST , False ) def get_id ( self ) -> str : return \"endpoint_s3_route_table_exposure\" class DynamoDbVpcEndpointRouteTableExposureRule ( AbstractVpcEndpointRouteTableExposureRule ): def __init__ ( self ) -> None : super () . __init__ ( AwsServiceType . DYNAMODB , ( 443 ,), self . DYNAMODB_SERVICES_INCLUDE_LIST , True ) def get_id ( self ) -> str : return \"endpoint_dynamodb_route_table_exposure\" BillingMode An enumeration. DynamoDbTable Attributes: Name Type Description table_name str The name of the table. table_id str The ID of the table. table_arn str The ARN of the table. billing_mode BillingMode One of PROVISIONED or PAY_PER_REQUEST. partition_key str The partition key used. sort_key str The sort key used. write_capacity int The write capacity configured. read_capacity int The read capacity configured. fields_attributes List[TableField] The list of table field attributes (may be empty). kms_key_id Optional[str] The KMS key ID to use to encrypt this table, if one is used. kms_data Optional[KmsKey] The actual KmsKey object referenced by the KMS ID. server_side_encryption bool True if SSE is enabled. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process TableField dataclass Attributes: Name Type Description name str The field's name. type TableFieldType The field type (one of B for Byte, N for Number, S for String). TableFieldType An enumeration.","title":"dynamodb"},{"location":"context/aws/dynamodb/index.html#sample-rules","text":"A few rules that use objects from this package: endpoint_dynamodb_route_table_exposure from abc import abstractmethod from typing import List , Dict from cloudrail.knowledge.context.aws.prefix_lists import PrefixLists , PrefixList from cloudrail.knowledge.context.aws.ec2.route import Route from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.context.aws.service_name import AwsServiceType from cloudrail.knowledge.rules.aws.context_aware.vpc_endpoints.abstract_vpc_endpoint_gateway_rule import AbstractVpcEndpointGatewayRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class AbstractVpcEndpointRouteTableExposureRule ( AbstractVpcEndpointGatewayRule ): @abstractmethod def get_id ( self ) -> str : pass def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: vpc_list , _ , vpc_to_eni_map = self . _init_maps ( env_context ) region_to_prefix_lists_map : Dict [ str , PrefixLists ] = self . _create_prefix_list_by_region_map ( env_context ) issues_list : List [ Issue ] = [] for vpc in vpc_list : for eni in vpc_to_eni_map . get ( vpc , []): if self . _is_service_eni_match ( eni ): for subnet in vpc . subnets : prefix_list : PrefixLists = region_to_prefix_lists_map [ vpc . region ] aws_service_pl : PrefixList = prefix_list . get_prefix_lists_by_service ( self . aws_service_type . value ) most_specific_service_pl_route : Route = self . _get_most_specific_service_pl_route ( subnet . route_table , aws_service_pl ) if vpc . endpoints and \\ not ( most_specific_service_pl_route and self . _is_valid_vpc_endpoint_route ( most_specific_service_pl_route , aws_service_pl , subnet . vpc . endpoints )): issues_list . append ( Issue ( f \"~The { vpc . get_type () } ~. ` { vpc . get_friendly_name () } ` \" f \"has a { aws_service_pl . service_name . upper () } Endpoint gateway \" f \"but ` { subnet . get_friendly_name () } ` uses ` { subnet . route_table . get_friendly_name () } `\" f \", which does not have a route to the Endpoint gateway.\" , subnet . vpc , subnet . route_table )) break return issues_list def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . vpc_endpoints ) class S3VpcEndpointRouteTableExposureRule ( AbstractVpcEndpointRouteTableExposureRule ): def __init__ ( self ) -> None : super () . __init__ ( AwsServiceType . S3 , ( 443 , 80 ), self . S3_SERVICES_EXCLUDE_LIST , False ) def get_id ( self ) -> str : return \"endpoint_s3_route_table_exposure\" class DynamoDbVpcEndpointRouteTableExposureRule ( AbstractVpcEndpointRouteTableExposureRule ): def __init__ ( self ) -> None : super () . __init__ ( AwsServiceType . DYNAMODB , ( 443 ,), self . DYNAMODB_SERVICES_INCLUDE_LIST , True ) def get_id ( self ) -> str : return \"endpoint_dynamodb_route_table_exposure\"","title":"Sample rules"},{"location":"context/aws/dynamodb/index.html#cloudrail.knowledge.context.aws.dynamodb.dynamodb_table.BillingMode","text":"An enumeration.","title":"BillingMode"},{"location":"context/aws/dynamodb/index.html#cloudrail.knowledge.context.aws.dynamodb.dynamodb_table.DynamoDbTable","text":"Attributes: Name Type Description table_name str The name of the table. table_id str The ID of the table. table_arn str The ARN of the table. billing_mode BillingMode One of PROVISIONED or PAY_PER_REQUEST. partition_key str The partition key used. sort_key str The sort key used. write_capacity int The write capacity configured. read_capacity int The read capacity configured. fields_attributes List[TableField] The list of table field attributes (may be empty). kms_key_id Optional[str] The KMS key ID to use to encrypt this table, if one is used. kms_data Optional[KmsKey] The actual KmsKey object referenced by the KMS ID. server_side_encryption bool True if SSE is enabled.","title":"DynamoDbTable"},{"location":"context/aws/dynamodb/index.html#cloudrail.knowledge.context.aws.dynamodb.dynamodb_table.DynamoDbTable.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/dynamodb/index.html#cloudrail.knowledge.context.aws.dynamodb.dynamodb_table.DynamoDbTable.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/dynamodb/index.html#cloudrail.knowledge.context.aws.dynamodb.dynamodb_table.TableField","text":"Attributes: Name Type Description name str The field's name. type TableFieldType The field type (one of B for Byte, N for Number, S for String).","title":"TableField"},{"location":"context/aws/dynamodb/index.html#cloudrail.knowledge.context.aws.dynamodb.dynamodb_table.TableFieldType","text":"An enumeration.","title":"TableFieldType"},{"location":"context/aws/ec2/index.html","text":"Sample rules A few rules that use objects from this package: public_access_security_groups_ssh_port_rule from abc import abstractmethod from typing import List , Dict , Set from cloudrail.knowledge.context.aws.ec2.security_group_rule import SecurityGroupRulePropertyType from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.utils.port_utils import is_all_ports from cloudrail.knowledge.utils.utils import is_port_in_range , is_all_ips from cloudrail.knowledge.context.aws.dms.dms_replication_instance import DmsReplicationInstance from cloudrail.knowledge.context.aws.eks.eks_cluster import EksCluster from cloudrail.knowledge.context.aws.es.elastic_search_domain import ElasticSearchDomain from cloudrail.knowledge.context.aws.neptune.neptune_cluster import NeptuneCluster from cloudrail.knowledge.context.aws.neptune.neptune_instance import NeptuneInstance from cloudrail.knowledge.context.aws.rds.rds_cluster import RdsCluster from cloudrail.knowledge.context.aws.rds.rds_instance import RdsInstance from cloudrail.knowledge.context.aws.redshift.redshift import RedshiftCluster from cloudrail.knowledge.context.aws.aws_connection import ConnectionType , PortConnectionProperty , ConnectionDetail from cloudrail.knowledge.context.aws.ec2.network_interface import NetworkInterface from cloudrail.knowledge.context.aws.ec2.security_group import SecurityGroup from cloudrail.knowledge.context.aliases_dict import AliasesDict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.constants.known_ports import KnownPorts from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessSecurityGroupsPortRule ( AwsBaseRule ): def __init__ ( self , port : KnownPorts ) -> None : self . port = port @abstractmethod def get_id ( self ) -> str : pass def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . get_used_network_interfaces ()) def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: eni_list : AliasesDict [ NetworkInterface ] = env_context . get_used_network_interfaces () self . remove_from_eni_list ( eni_list , parameters ) if self . port . value == KnownPorts . ALL : eni_to_sg_map : Dict [ NetworkInterface , Set [ SecurityGroup ]] = self . find_sg_issues ( eni_list ) message : str = ( \"~Internet~. {0} ` {1} ` has internet gateway. \" \"Instance ` {2} ` is on ` {1} `. {0} routes traffic from instance to internet gateway. \" \" {0} uses Network ACL's ` {3} ` which allows all ports range. Instance uses security group ` {4} `. \" \"` {4} ` allows all ports range. ~Instance~\" ) return [ Issue ( message . format ( eni . subnet . get_type (), eni . subnet . get_friendly_name (), eni . owner . get_friendly_name (), eni . subnet . network_acl . get_friendly_name (), sg . get_friendly_name ()), eni . owner , sg ) for eni in eni_to_sg_map for sg in eni_to_sg_map [ eni ]] else : eni_to_sg_map : Dict [ NetworkInterface , Set [ SecurityGroup ]] = self . find_sg_issues ( eni_list ) message : str = ( \"~Internet~. {0} ` {1} ` has internet gateway. \" \"Instance ` {2} ` is on ` {1} `. {0} routes traffic from instance to internet gateway. \" \" {0} uses Network ACL's ` {3} ` which allows port ` {4} `. Instance uses security group ` {5} `. \" \"` {5} ` allows port ` {4} `. ~Instance~\" ) return [ Issue ( message . format ( eni . subnet . get_type (), eni . subnet . get_friendly_name (), eni . owner . get_friendly_name (), eni . subnet . network_acl . get_friendly_name (), self . port . value , sg . get_friendly_name ()), eni . owner , sg ) for eni in eni_to_sg_map for sg in eni_to_sg_map [ eni ]] @staticmethod def remove_from_eni_list ( eni_list : AliasesDict [ NetworkInterface ], parameters : Dict [ ParameterType , any ]): eni_exclude_list = { NeptuneCluster , NeptuneInstance , RedshiftCluster , RdsCluster , RdsInstance , ElasticSearchDomain , EksCluster , DmsReplicationInstance , } for ec2 in parameters . get ( ParameterType . FIREWALL_EC2 , []): for eni in ec2 . network_resource . network_interfaces : eni_list . remove ( eni ) enis_to_delete = [ eni for eni in eni_list if type ( eni . owner ) in eni_exclude_list ] for eni in enis_to_delete : eni_list . remove ( eni ) def find_sg_issues ( self , eni_list : AliasesDict [ NetworkInterface ]) -> Dict [ NetworkInterface , Set [ SecurityGroup ]]: eni_to_sg_rules_map : Dict [ NetworkInterface , Set [ SecurityGroup ]] = {} for eni in eni_list : is_eni_accessible_from_all_ips_on_port = any ( self . _is_public_connection ( x ) and self . _is_all_ips_connection ( x . connection_property ) and self . _is_connection_open_on_port ( x . connection_property ) for x in eni . inbound_connections ) # Get security group that allows public access (any) if is_eni_accessible_from_all_ips_on_port : if self . port == KnownPorts . ALL : eni_to_sg_rules_map [ eni ] = self . _get_all_allow_all_port_range_sg ( eni ) else : eni_to_sg_rules_map [ eni ] = self . _get_all_allow_in_bound_port_sg ( eni ) return eni_to_sg_rules_map def _get_all_allow_in_bound_port_sg ( self , eni : NetworkInterface ) -> Set [ SecurityGroup ]: return { sg for sg in eni . security_groups for permission in sg . inbound_permissions if permission . is_in_range ( self . port . value ) and permission . property_type == SecurityGroupRulePropertyType . IP_RANGES and is_all_ips ( permission . property_value )} @staticmethod def _get_all_allow_all_port_range_sg ( eni : NetworkInterface ) -> Set [ SecurityGroup ]: return { sg for sg in eni . security_groups for permission in sg . inbound_permissions if is_all_ports (( permission . from_port , permission . to_port )) and permission . property_type == SecurityGroupRulePropertyType . IP_RANGES and is_all_ips ( permission . property_value )} @staticmethod def _is_public_connection ( con_detail : ConnectionDetail ): return con_detail . connection_type == ConnectionType . PUBLIC @staticmethod def _is_all_ips_connection ( connection_property : PortConnectionProperty ): return is_all_ips ( connection_property . cidr_block ) def _is_connection_open_on_port ( self , connection_property : PortConnectionProperty ): return any ( port_range for port_range in connection_property . ports if ( self . port != KnownPorts . ALL and not is_all_ports ( port_range ) and is_port_in_range ( port_range , self . port . value )) or ( self . port == KnownPorts . ALL and is_all_ports ( port_range ))) class PublicAccessSecurityGroupsSshPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_ssh_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . SSH ) class PublicAccessSecurityGroupsRdpPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_rdp_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . RDP ) class PublicAccessSecurityGroupsOracleDbDefaultPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_oracle_db_default_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . ORACLE_DB_DEFAULT ) class PublicAccessSecurityGroupsOracleDbPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_oracle_db_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . ORACLE_DB ) class PublicAccessSecurityGroupsOracleDbSslPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_oracle_db_ssl_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . ORACLE_DB_SSL ) class PublicAccessSecurityGroupsMySqlPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_mysql_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . MYSQL ) class PublicAccessSecurityGroupsPostgresPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_postgres_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . POSTGRES ) class PublicAccessSecurityGroupsRedisPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_redis_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . REDIS ) class PublicAccessSecurityGroupsMongodbPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_mongodb_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . MONGODB ) class PublicAccessSecurityGroupsMongodbShardClusterPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_mongodb_shard_cluster_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . MONGODB_SHARD_CLUSTER ) class PublicAccessSecurityGroupsCassandraPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_cassandra_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . CASSANDRA ) class PublicAccessSecurityGroupsCassandraThriftPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_cassandra_thrift_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . CASSANDRA_THRIFT ) class PublicAccessSecurityGroupsCassandraMngPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_cassandra_mng_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . CASSANDRA_MNG ) class PublicAccessSecurityGroupsMemcachedPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_memcached_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . MEMCACHED ) class PublicAccessSecurityGroupsElasticsearchNodesPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_elasticsearch_nodes_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . ELASTICSEARCH_NODES ) class PublicAccessSecurityGroupsElasticsearchPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_elasticsearch_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . ELASTICSEARCH ) class PublicAccessSecurityGroupsKibanaPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_kibana_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . KIBANA ) class PublicAccessSecurityGroupsAllPortsRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_all_ports_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . ALL ) vpc_endpoint_s3_exposure from abc import abstractmethod from typing import List , Dict from cloudrail.knowledge.context.mergeable import Mergeable from cloudrail.knowledge.context.aws.ec2.network_interface import NetworkInterface from cloudrail.knowledge.context.aws.prefix_lists import PrefixLists , PrefixList from cloudrail.knowledge.context.aws.ec2.route import Route from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.context.aws.service_name import AwsServiceType from cloudrail.knowledge.rules.aws.context_aware.vpc_endpoints.abstract_vpc_endpoint_gateway_rule import AbstractVpcEndpointGatewayRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class AbstractVpcEndpointGatewayIsNotUsedRule ( AbstractVpcEndpointGatewayRule ): @abstractmethod def get_id ( self ) -> str : pass def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: vpc_list , region_to_service_map , vpc_to_eni_map = self . _init_maps ( env_context ) issues_list : List [ Issue ] = [] region_to_prefix_lists_map : Dict [ str , PrefixLists ] = self . _create_prefix_list_by_region_map ( env_context ) for vpc in vpc_list : for eni in vpc_to_eni_map . get ( vpc , []): if self . _is_service_eni_match ( eni ): prefix_list : PrefixLists = region_to_prefix_lists_map [ vpc . region ] aws_service_pl : PrefixList = prefix_list . get_prefix_lists_by_service ( self . aws_service_type . value ) if self . _add_new_issue_from_outbound ( eni , region_to_service_map , issues_list , aws_service_pl ): break return issues_list def _add_new_issue_from_outbound ( self , eni : NetworkInterface , region_to_service_map : Dict [ str , List [ Mergeable ]], issues_list : List [ Issue ], service_pl : PrefixList ) -> bool : if self . _is_public_connection_exist ( eni ): most_specific_service_pl_route : Route = self . _get_most_specific_service_pl_route ( eni . subnet . route_table , service_pl ) if not self . _is_valid_vpc_endpoint_route ( most_specific_service_pl_route , service_pl , eni . vpc . endpoints ): for service in region_to_service_map [ eni . vpc . region ]: issues_list . append ( Issue ( f \"~The { eni . vpc . get_type () } ~. ` { eni . vpc . get_friendly_name () } ` in region ` { eni . vpc . region } `\" f \" is in use but not leveraging { self . aws_service_type . name } Endpoint Gateway\" , service , eni . vpc )) return True return False class S3VpcEndpointGatewayNotUsedRule ( AbstractVpcEndpointGatewayIsNotUsedRule ): def __init__ ( self ) -> None : super () . __init__ ( AwsServiceType . S3 , ( 443 , 80 ), self . S3_SERVICES_EXCLUDE_LIST , False ) def get_id ( self ) -> str : return \"vpc_endpoint_s3_exposure\" class DynamoDbVpcEndpointGatewayNotUsedRule ( AbstractVpcEndpointGatewayIsNotUsedRule ): def __init__ ( self ) -> None : super () . __init__ ( AwsServiceType . DYNAMODB , ( 443 ,), self . DYNAMODB_SERVICES_INCLUDE_LIST , True ) def get_id ( self ) -> str : return \"vpc_endpoint_dynamodb_exposure\" ec2_role_share_rule from typing import List , Dict from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType from cloudrail.knowledge.context.aws.ec2.ec2_instance import Ec2Instance from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext class Ec2RoleShareRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'ec2_role_share_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] ec2s : List [ Ec2Instance ] = env_context . ec2s profile_to_public_ec2 = {} for public_ec2 in ( x for x in ec2s if x . network_resource . is_inbound_public and x . iam_profile_id ): profile_to_public_ec2 [ public_ec2 . iam_profile_id ] = public_ec2 for private_ec2 in ( x for x in ec2s if not x . network_resource . is_inbound_public and x . iam_profile_id ): public_ec2 = profile_to_public_ec2 . get ( private_ec2 . iam_profile_id ) profile = private_ec2 . iam_role . get_friendly_name () \\ if private_ec2 . iam_role \\ else private_ec2 . iam_profile_id if public_ec2 : issues . append ( Issue ( f \"~Instance ` { public_ec2 . get_friendly_name () } `~. Instance is publicly exposed. \" f \"Instance uses IAM role ` { profile } `. \" f \"Private EC2 instance shares IAM role ` { profile } ` as well. \" f \"~Instance ` { private_ec2 . get_friendly_name () } `~\" , private_ec2 , private_ec2 . iam_role )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . ec2s ) car_unused_security_group from typing import Dict , List from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import BaseRule , Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureNoUnusedSecurityGroups ( BaseRule ): def get_id ( self ) -> str : return 'car_unused_security_group' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] # Currently, we catch only security groups which are exists, and not ones which are being created. # This is in order to avoid scenario in which a security group created, and will be associated using a different infra than TF. # In the future, we will add history track for resources, and this condition will not be needed. for security_group in [ sg for sg in env_context . security_groups if not sg . is_used and not sg . is_new_resource () and not sg . is_pseudo ]: issues . append ( Issue ( f 'The { security_group . get_type () } ` { security_group . get_friendly_name () } ` is not used by any AWS resource' , security_group , security_group )) return issues def get_needed_parameters ( self ) -> List [ ParameterType ]: return [] def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . security_groups and environment_context . network_interfaces ) no_vpc_peering_allowed_rule from typing import List , Dict from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType from cloudrail.knowledge.context.aws.ec2.route import RouteTargetType from cloudrail.knowledge.context.aws.ec2.subnet import Subnet from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext class NoVpcPeeringAllowedRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'no_vpc_peering_allowed_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: peering_connections = self . _check_for_peering_connections ( env_context ) issues = [] for subnet , peerings in peering_connections . items (): issues . append ( Issue ( f ' { subnet . get_type () } : { subnet . get_friendly_name () } from { subnet . vpc . get_type () } : ' f ' { subnet . vpc . get_friendly_name () } is using the following { subnet . vpc . get_type () } ' f 'Peering connections: { peerings } ' , None , None )) return issues @classmethod def _check_for_peering_connections ( cls , env_context : AwsEnvironmentContext ) -> Dict [ Subnet , str ]: peering_map = {} for subnet in env_context . subnets : peering_connection_routes = [ x for x in subnet . route_table . routes if x . target_type == RouteTargetType . VPC_PEERING_ID ] if peering_connection_routes : peering_map [ subnet ] = ', ' . join ( x . destination for x in peering_connection_routes ) return peering_map def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . peering_connections ) Ec2Image Attributes: Name Type Description image_id str The ID of the EC2 image (AMI ID). is_public bool True if the image is publicly shared. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process AssociatePublicIpAddress An enumeration. Ec2Instance Attributes: Name Type Description instance_id str The ID of the instance. name The name of the EC2 instance, if set. network_interfaces_ids List[str] The network interfaces attached to the intance. state str The state of the instance. image_id str The ID of the AMI used for EC2. image_data Optional[Ec2Image] A pointer to the Ec2Image if found. iam_profile_arn Optional[str] The IAM profile assigned to this image, if one is assigned. iam_profile_id Optional[str] The ID of the IAM profile. http_tokens str The HTTP tokens setting - optional or required. availability_zone Optional[str] The availability zone the EC2 is in, if configured. instance_type str The Instance type (i.e. 'm5.8xlarge'). ebs_optimized bool Indication whether the EC2 instance has EBS optimization enabled of not. monitoring_enabled bool Indication if the launched EC2 instance will have detailed monitoring enabled. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process Ec2RawData dataclass Internal implementation detail, ignore. ElasticIp Attributes: Name Type Description allocation_id str The ID of the elastic IP's allocation. public_ip str The public IP of the elastic IP. May be \"0.0.0.0\" to denote that we do not know what it is (usually when the resource is still being built). private_ip Optional[str] The private IP of the elastic IP, may be None. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process InternetGateway Attributes: Name Type Description vpc_id str The ID of the VPC the IGW belongs to. igw_id str The ID of the IGW. igw_type IgwType The type of the IGW. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process MainRouteTableAssociation Attributes: Name Type Description vpc_id The VPC the route table is the main one for. route_table_id The ID of the route table that is to be the main one for the VPC. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process NatGateways Attributes: Name Type Description nat_gateway_id str The ID of this NAT gateway. allocation_id str The allocation ID used with this NAT gateway. subnet_id str The subnet the NAT is tired to. eni_id str The elastic network interface the NAT gateway is tied to. private_ip str The private IP of the NAT gateway. public_ip str The public IP of the NAT gateway. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process NetworkAcl Attributes: Name Type Description network_acl_id str The ID of the NACL. vpc_id str The ID of the VPC the NACL belongs to. is_default bool True if this is the default NACL for the subnets. name str The name of the NACL. subnet_ids List[str] List of IDs of subnets the NACL bleongs to. inbound_rules List[NetworkAclRule] The inbound/ingress rules defined in the NACL. outbound_rules List[NetworkAclRule] The outbound/egress rules defined in the NACL. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process NetworkAclRule Attributes: Name Type Description network_acl_id The ID of the NACL this rule belongs to. cidr_block The CIDR block the rule applies to. from_port The bottom of the port range applicable to the rule. to_port The top of the port range applicable to the rule. rule_action The action the rule takes (allow / deny). rule_number The number of the rule in the NACL table. rule_type The type of the rule - inbound or outbound. ip_protocol_type str The IP protocol the rule applies to. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process RuleAction An enumeration. RuleType An enumeration. NetworkInterface Represents a network interface that can be assigned to a specific network-bound resource. Sometimes NetworkInterfaces may be auto-generated by Cloudrail to provide more data in the context. Attributes: Name Type Description eni_id str The ID of the elastic network interface. subnet_id str The ID of the subnet it's attached to. subnet 'Subnet' The actual Subnet object if found. primary_ip_address str The primary IP address attached to the interface. secondary_ip_addresses List[str] List of secondary IP addresses attached to the interface, if any exist. public_ip_address Optional[str] The public IP address of the interface, if it has one. ipv6_ip_addresses List[str] The IPv6 addresses of the interface, if they are configured. security_groups_ids List[str] The security groups attached to the interface security_groups List['SecurityGroup'] The actual SGs the interface uses. description str The description set for the interface, if any. is_primary bool True if it's the primary interface for the resource it is attached to. availability_zone str The AZ this interface is in. owner Optional[AwsResource] The resource that owns this interface. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process PeeringConnection Attributes: Name Type Description peering_id str The ID of the peering connection. requester_vpc_info PeeringVpcInfo The information of the VPC that initiated the peering. accepter_vpc_info PeeringVpcInfo The information of the VPC that received and accepted the peering. status str The status of the peering connection. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process PeeringVpcInfo dataclass Attributes: Name Type Description vpc_id str The ID of the VPC (it may be requester or accepter, depending on what side this is on). cidr_blocks List[str] The CIDR bblocks exposed by the VPC to the peer. Route Attributes: Name Type Description route_table_id The ID of the routing table the route belongs to. target The target of the route (value depends on type). target_type The type of the route's target. destination The destination subnet defined for the route. peering_connection Optional[PeeringConnection] If hte target is a VPC_PEERING_ID, then this is a pointer to the matching connection. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process RouteTargetType An enumeration. RouteTable Attributes: Name Type Description route_table_id str The ID of the routing table. vpc_id str The VPC the RT belongs to. name str The name of the RT. routes List[Route] A list of routes in this table. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process RouteTableRawData dataclass RouteTableRawData(is_default: bool = False) RouteTableAssociation Attributes: Name Type Description subnet_id str The ID of the subnet to associate the route table to. route_table_id str The route table to associate to the subnet. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process SecurityGroup Attributes: Name Type Description security_group_id str The ID of the security group. name str The name of the security group. vpc_id str The VPC the SG belongs to. inbound_permissions List[SecurityGroupRule] The inbound rules included in the security group. outbound_permissions List[SecurityGroupRule] The outbound rules included in the security group. is_default True if this is the default SG in the VPC. has_description bool True if this SG has a description configured that is not one of the pre-canned ones (like \"Managed by Terraform\"). _used_by Set[AwsResource] A set of resources that use this security group. is_used : bool property readonly This property returns true if any resource is using this security group, including invalidated resources. Note: Network interfaces that use this security group, but are not attached to a resource, will not count. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) A list of attributes that should be excluded from the invalidation process get_rule_matches ( sg_rules1 , sg_rules2 ) staticmethod Finds the overlapping rules (rules from one SG that match the other). ConnectionType An enumeration. SecurityGroupRule Attributes: Name Type Description from_port int The bottom part of the port range the rule applies to. to_port int The top part of te port range the rule applies to. ip_protocol str The IP protocol used in the rule. property_type SecurityGroupRulePropertyType The type of the rule, depending if it's targeting an IP destination, another security gruop, or a prefix list. property_value str If the type is SECURITY_GROUP_ID, then this is the GroupId. If the type is IP_RANGES, then this is the CIDR block. If the type is PREFIX_LIST_ID, then this is the Prefix List ID. has_description bool True if the rule has a description set that is not a canned one (like \"Managed by Terraform\"). connection_type ConnectionType The type of the rule - inbound or outbound. security_group_id str The SG the rule belongs to. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process SecurityGroupRulePropertyType An enumeration. Subnet Attributes: Name Type Description subnet_id str The ID of the subnet. vpc_id str The ID of the VPC the subnet belongs to. vpc 'Vpc' The VPC the subnet bleongs to. cidr_block str The subnet's CIDR block. name str The name of the subnet. availability_zone str The AZ the subnet is in. map_public_ip_on_launch True if resources should have a public IP assigned to them upon launch. is_default bool True if it's the default subnet of a VPC in an AZ. route_table RouteTable The main route table associated with this subnet. network_acl NetworkAcl The main NACL associated with this subnet. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process TransitGateway Attributes: Name Type Description name str The name of the Transit Gateway. tgw_id str The Transit Gateway's ID. state str The state of the TGW, one of available | deleted | deleting | modifying | pending. route_tables List[TransitGatewayRouteTable] The routing tables connected to this transit gateway. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process TransitGatewayRoute Attributes: Name Type Description destination_cidr_block str The destination CIDR block the route is targeting. state TransitGatewayRouteState The state of the route (active or blackhole). route_type TransitGatewayRouteType The type of the route (static or propagated). attachment_ids List[str] The IDs of the attachment to the transit gateway. route_table_id str The routing table the route belongs to. vpc_attachment TransitGatewayVpcAttachment The attachment of the transit gateway to a VPC. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process TransitGatewayRouteState An enumeration. TransitGatewayRouteType An enumeration. TransitGatewayRouteAttachment Attributes: Name Type Description tgw_id str The Transit Gateway the route is to be attached to. resource_type TransitGatewayResourceType The type of the resource attached to the TGW. resource_id str The ID of the resource attached to the TGW. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process TransitGatewayRouteTable Attributes: Name Type Description tgw_id str The TGW the route table belongs to. route_table_id str The id of the route table. associations List[TransitGatewayRouteTableAssociation] A list of route table to TGW associations. routes List[TransitGatewayRoute] The routes included in this route table. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process TransitGatewayRouteTableAssociation Attributes: Name Type Description tgw_attachment_id str The ID of the TGW attachment. tgw_route_table_id str The route table to associate. attachment TransitGatewayVpcAttachment The actual TGW attachment object. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process TransitGatewayRouteTablePropagation Attributes: Name Type Description tgw_attachment_id str The TGW attachment ID. tgw_route_table_id str The ID of the route table attached. attachment TransitGatewayVpcAttachment The actual attachment. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process TransitGatewayVpcAttachment Attributes: Name Type Description attachment_id str The ID of the attachment. state str The state of the attachment, one of pending | failing | failed | available | deleting | deleted |m odifying | rolling-back. resource_type TransitGatewayResourceType The type of the resource attached. resource_id str The ID of the resource attached. name str The name of the attachment. subnet_ids List[str] The IDs of the subnets attached to the transit gateway. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"ec2"},{"location":"context/aws/ec2/index.html#sample-rules","text":"A few rules that use objects from this package: public_access_security_groups_ssh_port_rule from abc import abstractmethod from typing import List , Dict , Set from cloudrail.knowledge.context.aws.ec2.security_group_rule import SecurityGroupRulePropertyType from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.utils.port_utils import is_all_ports from cloudrail.knowledge.utils.utils import is_port_in_range , is_all_ips from cloudrail.knowledge.context.aws.dms.dms_replication_instance import DmsReplicationInstance from cloudrail.knowledge.context.aws.eks.eks_cluster import EksCluster from cloudrail.knowledge.context.aws.es.elastic_search_domain import ElasticSearchDomain from cloudrail.knowledge.context.aws.neptune.neptune_cluster import NeptuneCluster from cloudrail.knowledge.context.aws.neptune.neptune_instance import NeptuneInstance from cloudrail.knowledge.context.aws.rds.rds_cluster import RdsCluster from cloudrail.knowledge.context.aws.rds.rds_instance import RdsInstance from cloudrail.knowledge.context.aws.redshift.redshift import RedshiftCluster from cloudrail.knowledge.context.aws.aws_connection import ConnectionType , PortConnectionProperty , ConnectionDetail from cloudrail.knowledge.context.aws.ec2.network_interface import NetworkInterface from cloudrail.knowledge.context.aws.ec2.security_group import SecurityGroup from cloudrail.knowledge.context.aliases_dict import AliasesDict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.constants.known_ports import KnownPorts from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessSecurityGroupsPortRule ( AwsBaseRule ): def __init__ ( self , port : KnownPorts ) -> None : self . port = port @abstractmethod def get_id ( self ) -> str : pass def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . get_used_network_interfaces ()) def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: eni_list : AliasesDict [ NetworkInterface ] = env_context . get_used_network_interfaces () self . remove_from_eni_list ( eni_list , parameters ) if self . port . value == KnownPorts . ALL : eni_to_sg_map : Dict [ NetworkInterface , Set [ SecurityGroup ]] = self . find_sg_issues ( eni_list ) message : str = ( \"~Internet~. {0} ` {1} ` has internet gateway. \" \"Instance ` {2} ` is on ` {1} `. {0} routes traffic from instance to internet gateway. \" \" {0} uses Network ACL's ` {3} ` which allows all ports range. Instance uses security group ` {4} `. \" \"` {4} ` allows all ports range. ~Instance~\" ) return [ Issue ( message . format ( eni . subnet . get_type (), eni . subnet . get_friendly_name (), eni . owner . get_friendly_name (), eni . subnet . network_acl . get_friendly_name (), sg . get_friendly_name ()), eni . owner , sg ) for eni in eni_to_sg_map for sg in eni_to_sg_map [ eni ]] else : eni_to_sg_map : Dict [ NetworkInterface , Set [ SecurityGroup ]] = self . find_sg_issues ( eni_list ) message : str = ( \"~Internet~. {0} ` {1} ` has internet gateway. \" \"Instance ` {2} ` is on ` {1} `. {0} routes traffic from instance to internet gateway. \" \" {0} uses Network ACL's ` {3} ` which allows port ` {4} `. Instance uses security group ` {5} `. \" \"` {5} ` allows port ` {4} `. ~Instance~\" ) return [ Issue ( message . format ( eni . subnet . get_type (), eni . subnet . get_friendly_name (), eni . owner . get_friendly_name (), eni . subnet . network_acl . get_friendly_name (), self . port . value , sg . get_friendly_name ()), eni . owner , sg ) for eni in eni_to_sg_map for sg in eni_to_sg_map [ eni ]] @staticmethod def remove_from_eni_list ( eni_list : AliasesDict [ NetworkInterface ], parameters : Dict [ ParameterType , any ]): eni_exclude_list = { NeptuneCluster , NeptuneInstance , RedshiftCluster , RdsCluster , RdsInstance , ElasticSearchDomain , EksCluster , DmsReplicationInstance , } for ec2 in parameters . get ( ParameterType . FIREWALL_EC2 , []): for eni in ec2 . network_resource . network_interfaces : eni_list . remove ( eni ) enis_to_delete = [ eni for eni in eni_list if type ( eni . owner ) in eni_exclude_list ] for eni in enis_to_delete : eni_list . remove ( eni ) def find_sg_issues ( self , eni_list : AliasesDict [ NetworkInterface ]) -> Dict [ NetworkInterface , Set [ SecurityGroup ]]: eni_to_sg_rules_map : Dict [ NetworkInterface , Set [ SecurityGroup ]] = {} for eni in eni_list : is_eni_accessible_from_all_ips_on_port = any ( self . _is_public_connection ( x ) and self . _is_all_ips_connection ( x . connection_property ) and self . _is_connection_open_on_port ( x . connection_property ) for x in eni . inbound_connections ) # Get security group that allows public access (any) if is_eni_accessible_from_all_ips_on_port : if self . port == KnownPorts . ALL : eni_to_sg_rules_map [ eni ] = self . _get_all_allow_all_port_range_sg ( eni ) else : eni_to_sg_rules_map [ eni ] = self . _get_all_allow_in_bound_port_sg ( eni ) return eni_to_sg_rules_map def _get_all_allow_in_bound_port_sg ( self , eni : NetworkInterface ) -> Set [ SecurityGroup ]: return { sg for sg in eni . security_groups for permission in sg . inbound_permissions if permission . is_in_range ( self . port . value ) and permission . property_type == SecurityGroupRulePropertyType . IP_RANGES and is_all_ips ( permission . property_value )} @staticmethod def _get_all_allow_all_port_range_sg ( eni : NetworkInterface ) -> Set [ SecurityGroup ]: return { sg for sg in eni . security_groups for permission in sg . inbound_permissions if is_all_ports (( permission . from_port , permission . to_port )) and permission . property_type == SecurityGroupRulePropertyType . IP_RANGES and is_all_ips ( permission . property_value )} @staticmethod def _is_public_connection ( con_detail : ConnectionDetail ): return con_detail . connection_type == ConnectionType . PUBLIC @staticmethod def _is_all_ips_connection ( connection_property : PortConnectionProperty ): return is_all_ips ( connection_property . cidr_block ) def _is_connection_open_on_port ( self , connection_property : PortConnectionProperty ): return any ( port_range for port_range in connection_property . ports if ( self . port != KnownPorts . ALL and not is_all_ports ( port_range ) and is_port_in_range ( port_range , self . port . value )) or ( self . port == KnownPorts . ALL and is_all_ports ( port_range ))) class PublicAccessSecurityGroupsSshPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_ssh_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . SSH ) class PublicAccessSecurityGroupsRdpPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_rdp_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . RDP ) class PublicAccessSecurityGroupsOracleDbDefaultPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_oracle_db_default_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . ORACLE_DB_DEFAULT ) class PublicAccessSecurityGroupsOracleDbPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_oracle_db_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . ORACLE_DB ) class PublicAccessSecurityGroupsOracleDbSslPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_oracle_db_ssl_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . ORACLE_DB_SSL ) class PublicAccessSecurityGroupsMySqlPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_mysql_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . MYSQL ) class PublicAccessSecurityGroupsPostgresPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_postgres_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . POSTGRES ) class PublicAccessSecurityGroupsRedisPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_redis_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . REDIS ) class PublicAccessSecurityGroupsMongodbPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_mongodb_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . MONGODB ) class PublicAccessSecurityGroupsMongodbShardClusterPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_mongodb_shard_cluster_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . MONGODB_SHARD_CLUSTER ) class PublicAccessSecurityGroupsCassandraPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_cassandra_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . CASSANDRA ) class PublicAccessSecurityGroupsCassandraThriftPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_cassandra_thrift_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . CASSANDRA_THRIFT ) class PublicAccessSecurityGroupsCassandraMngPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_cassandra_mng_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . CASSANDRA_MNG ) class PublicAccessSecurityGroupsMemcachedPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_memcached_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . MEMCACHED ) class PublicAccessSecurityGroupsElasticsearchNodesPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_elasticsearch_nodes_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . ELASTICSEARCH_NODES ) class PublicAccessSecurityGroupsElasticsearchPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_elasticsearch_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . ELASTICSEARCH ) class PublicAccessSecurityGroupsKibanaPortRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_kibana_port_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . KIBANA ) class PublicAccessSecurityGroupsAllPortsRule ( PublicAccessSecurityGroupsPortRule ): def get_id ( self ) -> str : return 'public_access_security_groups_all_ports_rule' def __init__ ( self ): super () . __init__ ( KnownPorts . ALL ) vpc_endpoint_s3_exposure from abc import abstractmethod from typing import List , Dict from cloudrail.knowledge.context.mergeable import Mergeable from cloudrail.knowledge.context.aws.ec2.network_interface import NetworkInterface from cloudrail.knowledge.context.aws.prefix_lists import PrefixLists , PrefixList from cloudrail.knowledge.context.aws.ec2.route import Route from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.context.aws.service_name import AwsServiceType from cloudrail.knowledge.rules.aws.context_aware.vpc_endpoints.abstract_vpc_endpoint_gateway_rule import AbstractVpcEndpointGatewayRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class AbstractVpcEndpointGatewayIsNotUsedRule ( AbstractVpcEndpointGatewayRule ): @abstractmethod def get_id ( self ) -> str : pass def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: vpc_list , region_to_service_map , vpc_to_eni_map = self . _init_maps ( env_context ) issues_list : List [ Issue ] = [] region_to_prefix_lists_map : Dict [ str , PrefixLists ] = self . _create_prefix_list_by_region_map ( env_context ) for vpc in vpc_list : for eni in vpc_to_eni_map . get ( vpc , []): if self . _is_service_eni_match ( eni ): prefix_list : PrefixLists = region_to_prefix_lists_map [ vpc . region ] aws_service_pl : PrefixList = prefix_list . get_prefix_lists_by_service ( self . aws_service_type . value ) if self . _add_new_issue_from_outbound ( eni , region_to_service_map , issues_list , aws_service_pl ): break return issues_list def _add_new_issue_from_outbound ( self , eni : NetworkInterface , region_to_service_map : Dict [ str , List [ Mergeable ]], issues_list : List [ Issue ], service_pl : PrefixList ) -> bool : if self . _is_public_connection_exist ( eni ): most_specific_service_pl_route : Route = self . _get_most_specific_service_pl_route ( eni . subnet . route_table , service_pl ) if not self . _is_valid_vpc_endpoint_route ( most_specific_service_pl_route , service_pl , eni . vpc . endpoints ): for service in region_to_service_map [ eni . vpc . region ]: issues_list . append ( Issue ( f \"~The { eni . vpc . get_type () } ~. ` { eni . vpc . get_friendly_name () } ` in region ` { eni . vpc . region } `\" f \" is in use but not leveraging { self . aws_service_type . name } Endpoint Gateway\" , service , eni . vpc )) return True return False class S3VpcEndpointGatewayNotUsedRule ( AbstractVpcEndpointGatewayIsNotUsedRule ): def __init__ ( self ) -> None : super () . __init__ ( AwsServiceType . S3 , ( 443 , 80 ), self . S3_SERVICES_EXCLUDE_LIST , False ) def get_id ( self ) -> str : return \"vpc_endpoint_s3_exposure\" class DynamoDbVpcEndpointGatewayNotUsedRule ( AbstractVpcEndpointGatewayIsNotUsedRule ): def __init__ ( self ) -> None : super () . __init__ ( AwsServiceType . DYNAMODB , ( 443 ,), self . DYNAMODB_SERVICES_INCLUDE_LIST , True ) def get_id ( self ) -> str : return \"vpc_endpoint_dynamodb_exposure\" ec2_role_share_rule from typing import List , Dict from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType from cloudrail.knowledge.context.aws.ec2.ec2_instance import Ec2Instance from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext class Ec2RoleShareRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'ec2_role_share_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] ec2s : List [ Ec2Instance ] = env_context . ec2s profile_to_public_ec2 = {} for public_ec2 in ( x for x in ec2s if x . network_resource . is_inbound_public and x . iam_profile_id ): profile_to_public_ec2 [ public_ec2 . iam_profile_id ] = public_ec2 for private_ec2 in ( x for x in ec2s if not x . network_resource . is_inbound_public and x . iam_profile_id ): public_ec2 = profile_to_public_ec2 . get ( private_ec2 . iam_profile_id ) profile = private_ec2 . iam_role . get_friendly_name () \\ if private_ec2 . iam_role \\ else private_ec2 . iam_profile_id if public_ec2 : issues . append ( Issue ( f \"~Instance ` { public_ec2 . get_friendly_name () } `~. Instance is publicly exposed. \" f \"Instance uses IAM role ` { profile } `. \" f \"Private EC2 instance shares IAM role ` { profile } ` as well. \" f \"~Instance ` { private_ec2 . get_friendly_name () } `~\" , private_ec2 , private_ec2 . iam_role )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . ec2s ) car_unused_security_group from typing import Dict , List from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import BaseRule , Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureNoUnusedSecurityGroups ( BaseRule ): def get_id ( self ) -> str : return 'car_unused_security_group' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] # Currently, we catch only security groups which are exists, and not ones which are being created. # This is in order to avoid scenario in which a security group created, and will be associated using a different infra than TF. # In the future, we will add history track for resources, and this condition will not be needed. for security_group in [ sg for sg in env_context . security_groups if not sg . is_used and not sg . is_new_resource () and not sg . is_pseudo ]: issues . append ( Issue ( f 'The { security_group . get_type () } ` { security_group . get_friendly_name () } ` is not used by any AWS resource' , security_group , security_group )) return issues def get_needed_parameters ( self ) -> List [ ParameterType ]: return [] def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . security_groups and environment_context . network_interfaces ) no_vpc_peering_allowed_rule from typing import List , Dict from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType from cloudrail.knowledge.context.aws.ec2.route import RouteTargetType from cloudrail.knowledge.context.aws.ec2.subnet import Subnet from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext class NoVpcPeeringAllowedRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'no_vpc_peering_allowed_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: peering_connections = self . _check_for_peering_connections ( env_context ) issues = [] for subnet , peerings in peering_connections . items (): issues . append ( Issue ( f ' { subnet . get_type () } : { subnet . get_friendly_name () } from { subnet . vpc . get_type () } : ' f ' { subnet . vpc . get_friendly_name () } is using the following { subnet . vpc . get_type () } ' f 'Peering connections: { peerings } ' , None , None )) return issues @classmethod def _check_for_peering_connections ( cls , env_context : AwsEnvironmentContext ) -> Dict [ Subnet , str ]: peering_map = {} for subnet in env_context . subnets : peering_connection_routes = [ x for x in subnet . route_table . routes if x . target_type == RouteTargetType . VPC_PEERING_ID ] if peering_connection_routes : peering_map [ subnet ] = ', ' . join ( x . destination for x in peering_connection_routes ) return peering_map def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . peering_connections )","title":"Sample rules"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.ec2_image.Ec2Image","text":"Attributes: Name Type Description image_id str The ID of the EC2 image (AMI ID). is_public bool True if the image is publicly shared.","title":"Ec2Image"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.ec2_image.Ec2Image.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.ec2_image.Ec2Image.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.ec2_instance.AssociatePublicIpAddress","text":"An enumeration.","title":"AssociatePublicIpAddress"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.ec2_instance.Ec2Instance","text":"Attributes: Name Type Description instance_id str The ID of the instance. name The name of the EC2 instance, if set. network_interfaces_ids List[str] The network interfaces attached to the intance. state str The state of the instance. image_id str The ID of the AMI used for EC2. image_data Optional[Ec2Image] A pointer to the Ec2Image if found. iam_profile_arn Optional[str] The IAM profile assigned to this image, if one is assigned. iam_profile_id Optional[str] The ID of the IAM profile. http_tokens str The HTTP tokens setting - optional or required. availability_zone Optional[str] The availability zone the EC2 is in, if configured. instance_type str The Instance type (i.e. 'm5.8xlarge'). ebs_optimized bool Indication whether the EC2 instance has EBS optimization enabled of not. monitoring_enabled bool Indication if the launched EC2 instance will have detailed monitoring enabled.","title":"Ec2Instance"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.ec2_instance.Ec2Instance.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.ec2_instance.Ec2Instance.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.ec2_instance.Ec2RawData","text":"Internal implementation detail, ignore.","title":"Ec2RawData"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.elastic_ip.ElasticIp","text":"Attributes: Name Type Description allocation_id str The ID of the elastic IP's allocation. public_ip str The public IP of the elastic IP. May be \"0.0.0.0\" to denote that we do not know what it is (usually when the resource is still being built). private_ip Optional[str] The private IP of the elastic IP, may be None.","title":"ElasticIp"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.elastic_ip.ElasticIp.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.elastic_ip.ElasticIp.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.internet_gateway.InternetGateway","text":"Attributes: Name Type Description vpc_id str The ID of the VPC the IGW belongs to. igw_id str The ID of the IGW. igw_type IgwType The type of the IGW.","title":"InternetGateway"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.internet_gateway.InternetGateway.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.internet_gateway.InternetGateway.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.main_route_table_association.MainRouteTableAssociation","text":"Attributes: Name Type Description vpc_id The VPC the route table is the main one for. route_table_id The ID of the route table that is to be the main one for the VPC.","title":"MainRouteTableAssociation"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.main_route_table_association.MainRouteTableAssociation.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.main_route_table_association.MainRouteTableAssociation.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.nat_gateways.NatGateways","text":"Attributes: Name Type Description nat_gateway_id str The ID of this NAT gateway. allocation_id str The allocation ID used with this NAT gateway. subnet_id str The subnet the NAT is tired to. eni_id str The elastic network interface the NAT gateway is tied to. private_ip str The private IP of the NAT gateway. public_ip str The public IP of the NAT gateway.","title":"NatGateways"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.nat_gateways.NatGateways.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.nat_gateways.NatGateways.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.network_acl.NetworkAcl","text":"Attributes: Name Type Description network_acl_id str The ID of the NACL. vpc_id str The ID of the VPC the NACL belongs to. is_default bool True if this is the default NACL for the subnets. name str The name of the NACL. subnet_ids List[str] List of IDs of subnets the NACL bleongs to. inbound_rules List[NetworkAclRule] The inbound/ingress rules defined in the NACL. outbound_rules List[NetworkAclRule] The outbound/egress rules defined in the NACL.","title":"NetworkAcl"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.network_acl.NetworkAcl.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.network_acl.NetworkAcl.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.network_acl_rule.NetworkAclRule","text":"Attributes: Name Type Description network_acl_id The ID of the NACL this rule belongs to. cidr_block The CIDR block the rule applies to. from_port The bottom of the port range applicable to the rule. to_port The top of the port range applicable to the rule. rule_action The action the rule takes (allow / deny). rule_number The number of the rule in the NACL table. rule_type The type of the rule - inbound or outbound. ip_protocol_type str The IP protocol the rule applies to.","title":"NetworkAclRule"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.network_acl_rule.NetworkAclRule.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.network_acl_rule.NetworkAclRule.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.network_acl_rule.RuleAction","text":"An enumeration.","title":"RuleAction"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.network_acl_rule.RuleType","text":"An enumeration.","title":"RuleType"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.network_interface.NetworkInterface","text":"Represents a network interface that can be assigned to a specific network-bound resource. Sometimes NetworkInterfaces may be auto-generated by Cloudrail to provide more data in the context. Attributes: Name Type Description eni_id str The ID of the elastic network interface. subnet_id str The ID of the subnet it's attached to. subnet 'Subnet' The actual Subnet object if found. primary_ip_address str The primary IP address attached to the interface. secondary_ip_addresses List[str] List of secondary IP addresses attached to the interface, if any exist. public_ip_address Optional[str] The public IP address of the interface, if it has one. ipv6_ip_addresses List[str] The IPv6 addresses of the interface, if they are configured. security_groups_ids List[str] The security groups attached to the interface security_groups List['SecurityGroup'] The actual SGs the interface uses. description str The description set for the interface, if any. is_primary bool True if it's the primary interface for the resource it is attached to. availability_zone str The AZ this interface is in. owner Optional[AwsResource] The resource that owns this interface.","title":"NetworkInterface"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.network_interface.NetworkInterface.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.network_interface.NetworkInterface.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.peering_connection.PeeringConnection","text":"Attributes: Name Type Description peering_id str The ID of the peering connection. requester_vpc_info PeeringVpcInfo The information of the VPC that initiated the peering. accepter_vpc_info PeeringVpcInfo The information of the VPC that received and accepted the peering. status str The status of the peering connection.","title":"PeeringConnection"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.peering_connection.PeeringConnection.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.peering_connection.PeeringConnection.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.peering_connection.PeeringVpcInfo","text":"Attributes: Name Type Description vpc_id str The ID of the VPC (it may be requester or accepter, depending on what side this is on). cidr_blocks List[str] The CIDR bblocks exposed by the VPC to the peer.","title":"PeeringVpcInfo"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.route.Route","text":"Attributes: Name Type Description route_table_id The ID of the routing table the route belongs to. target The target of the route (value depends on type). target_type The type of the route's target. destination The destination subnet defined for the route. peering_connection Optional[PeeringConnection] If hte target is a VPC_PEERING_ID, then this is a pointer to the matching connection.","title":"Route"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.route.Route.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.route.Route.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.route.RouteTargetType","text":"An enumeration.","title":"RouteTargetType"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.route_table.RouteTable","text":"Attributes: Name Type Description route_table_id str The ID of the routing table. vpc_id str The VPC the RT belongs to. name str The name of the RT. routes List[Route] A list of routes in this table.","title":"RouteTable"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.route_table.RouteTable.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.route_table.RouteTable.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.route_table.RouteTableRawData","text":"RouteTableRawData(is_default: bool = False)","title":"RouteTableRawData"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.route_table_association.RouteTableAssociation","text":"Attributes: Name Type Description subnet_id str The ID of the subnet to associate the route table to. route_table_id str The route table to associate to the subnet.","title":"RouteTableAssociation"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.route_table_association.RouteTableAssociation.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.route_table_association.RouteTableAssociation.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.security_group.SecurityGroup","text":"Attributes: Name Type Description security_group_id str The ID of the security group. name str The name of the security group. vpc_id str The VPC the SG belongs to. inbound_permissions List[SecurityGroupRule] The inbound rules included in the security group. outbound_permissions List[SecurityGroupRule] The outbound rules included in the security group. is_default True if this is the default SG in the VPC. has_description bool True if this SG has a description configured that is not one of the pre-canned ones (like \"Managed by Terraform\"). _used_by Set[AwsResource] A set of resources that use this security group.","title":"SecurityGroup"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.security_group.SecurityGroup.is_used","text":"This property returns true if any resource is using this security group, including invalidated resources. Note: Network interfaces that use this security group, but are not attached to a resource, will not count.","title":"is_used"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.security_group.SecurityGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.security_group.SecurityGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.security_group.SecurityGroup.get_rule_matches","text":"Finds the overlapping rules (rules from one SG that match the other).","title":"get_rule_matches()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.security_group_rule.ConnectionType","text":"An enumeration.","title":"ConnectionType"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.security_group_rule.SecurityGroupRule","text":"Attributes: Name Type Description from_port int The bottom part of the port range the rule applies to. to_port int The top part of te port range the rule applies to. ip_protocol str The IP protocol used in the rule. property_type SecurityGroupRulePropertyType The type of the rule, depending if it's targeting an IP destination, another security gruop, or a prefix list. property_value str If the type is SECURITY_GROUP_ID, then this is the GroupId. If the type is IP_RANGES, then this is the CIDR block. If the type is PREFIX_LIST_ID, then this is the Prefix List ID. has_description bool True if the rule has a description set that is not a canned one (like \"Managed by Terraform\"). connection_type ConnectionType The type of the rule - inbound or outbound. security_group_id str The SG the rule belongs to.","title":"SecurityGroupRule"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.security_group_rule.SecurityGroupRule.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.security_group_rule.SecurityGroupRule.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.security_group_rule.SecurityGroupRulePropertyType","text":"An enumeration.","title":"SecurityGroupRulePropertyType"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.subnet.Subnet","text":"Attributes: Name Type Description subnet_id str The ID of the subnet. vpc_id str The ID of the VPC the subnet belongs to. vpc 'Vpc' The VPC the subnet bleongs to. cidr_block str The subnet's CIDR block. name str The name of the subnet. availability_zone str The AZ the subnet is in. map_public_ip_on_launch True if resources should have a public IP assigned to them upon launch. is_default bool True if it's the default subnet of a VPC in an AZ. route_table RouteTable The main route table associated with this subnet. network_acl NetworkAcl The main NACL associated with this subnet.","title":"Subnet"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.subnet.Subnet.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.subnet.Subnet.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway.TransitGateway","text":"Attributes: Name Type Description name str The name of the Transit Gateway. tgw_id str The Transit Gateway's ID. state str The state of the TGW, one of available | deleted | deleting | modifying | pending. route_tables List[TransitGatewayRouteTable] The routing tables connected to this transit gateway.","title":"TransitGateway"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway.TransitGateway.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway.TransitGateway.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route.TransitGatewayRoute","text":"Attributes: Name Type Description destination_cidr_block str The destination CIDR block the route is targeting. state TransitGatewayRouteState The state of the route (active or blackhole). route_type TransitGatewayRouteType The type of the route (static or propagated). attachment_ids List[str] The IDs of the attachment to the transit gateway. route_table_id str The routing table the route belongs to. vpc_attachment TransitGatewayVpcAttachment The attachment of the transit gateway to a VPC.","title":"TransitGatewayRoute"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route.TransitGatewayRoute.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route.TransitGatewayRoute.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route.TransitGatewayRouteState","text":"An enumeration.","title":"TransitGatewayRouteState"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route.TransitGatewayRouteType","text":"An enumeration.","title":"TransitGatewayRouteType"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route_attachment.TransitGatewayRouteAttachment","text":"Attributes: Name Type Description tgw_id str The Transit Gateway the route is to be attached to. resource_type TransitGatewayResourceType The type of the resource attached to the TGW. resource_id str The ID of the resource attached to the TGW.","title":"TransitGatewayRouteAttachment"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route_attachment.TransitGatewayRouteAttachment.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route_attachment.TransitGatewayRouteAttachment.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route_table.TransitGatewayRouteTable","text":"Attributes: Name Type Description tgw_id str The TGW the route table belongs to. route_table_id str The id of the route table. associations List[TransitGatewayRouteTableAssociation] A list of route table to TGW associations. routes List[TransitGatewayRoute] The routes included in this route table.","title":"TransitGatewayRouteTable"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route_table.TransitGatewayRouteTable.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route_table.TransitGatewayRouteTable.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route_table_association.TransitGatewayRouteTableAssociation","text":"Attributes: Name Type Description tgw_attachment_id str The ID of the TGW attachment. tgw_route_table_id str The route table to associate. attachment TransitGatewayVpcAttachment The actual TGW attachment object.","title":"TransitGatewayRouteTableAssociation"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route_table_association.TransitGatewayRouteTableAssociation.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route_table_association.TransitGatewayRouteTableAssociation.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route_table_propagation.TransitGatewayRouteTablePropagation","text":"Attributes: Name Type Description tgw_attachment_id str The TGW attachment ID. tgw_route_table_id str The ID of the route table attached. attachment TransitGatewayVpcAttachment The actual attachment.","title":"TransitGatewayRouteTablePropagation"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route_table_propagation.TransitGatewayRouteTablePropagation.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_route_table_propagation.TransitGatewayRouteTablePropagation.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_vpc_attachment.TransitGatewayVpcAttachment","text":"Attributes: Name Type Description attachment_id str The ID of the attachment. state str The state of the attachment, one of pending | failing | failed | available | deleting | deleted |m odifying | rolling-back. resource_type TransitGatewayResourceType The type of the resource attached. resource_id str The ID of the resource attached. name str The name of the attachment. subnet_ids List[str] The IDs of the subnets attached to the transit gateway.","title":"TransitGatewayVpcAttachment"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_vpc_attachment.TransitGatewayVpcAttachment.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ec2/index.html#cloudrail.knowledge.context.aws.ec2.transit_gateway_vpc_attachment.TransitGatewayVpcAttachment.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ecr/index.html","text":"EcrRepository Attributes: Name Type Description repo_name str The name of the ECR repository. arn str The ARN of the repository. policy EcrRepositoryPolicy The resource policy of the ECR. encryption_type str The type of encryption used by the ECR repository. kms_key_id str The KMS key ID used to encrypt the ECR repository, if the encryption type is KMS. kms_data Optional[KmsKey] The actual KmsKey object referenced by the KMS ID. image_tag_mutability str Image tag mutability setting for the ECR repository. is_image_scan_on_push bool An indication whether images are scanned after being pushed to the ECR repository. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process EcrRepositoryPolicy Attributes: Name Type Description repo_name str The repository the policy applies to. policy_statements The statements included in the policy. raw_document The raw JSON code of the policy. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"ecr"},{"location":"context/aws/ecr/index.html#cloudrail.knowledge.context.aws.ecr.ecr_repository.EcrRepository","text":"Attributes: Name Type Description repo_name str The name of the ECR repository. arn str The ARN of the repository. policy EcrRepositoryPolicy The resource policy of the ECR. encryption_type str The type of encryption used by the ECR repository. kms_key_id str The KMS key ID used to encrypt the ECR repository, if the encryption type is KMS. kms_data Optional[KmsKey] The actual KmsKey object referenced by the KMS ID. image_tag_mutability str Image tag mutability setting for the ECR repository. is_image_scan_on_push bool An indication whether images are scanned after being pushed to the ECR repository.","title":"EcrRepository"},{"location":"context/aws/ecr/index.html#cloudrail.knowledge.context.aws.ecr.ecr_repository.EcrRepository.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ecr/index.html#cloudrail.knowledge.context.aws.ecr.ecr_repository.EcrRepository.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ecr/index.html#cloudrail.knowledge.context.aws.ecr.ecr_repository_policy.EcrRepositoryPolicy","text":"Attributes: Name Type Description repo_name str The repository the policy applies to. policy_statements The statements included in the policy. raw_document The raw JSON code of the policy.","title":"EcrRepositoryPolicy"},{"location":"context/aws/ecr/index.html#cloudrail.knowledge.context.aws.ecr.ecr_repository_policy.EcrRepositoryPolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ecr/index.html#cloudrail.knowledge.context.aws.ecr.ecr_repository_policy.EcrRepositoryPolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ecs/index.html","text":"EcsCluster Attributes: Name Type Description cluster_arn str The ARN of the ECS cluster. cluster_id str The ID of the cluster. cluster_name str The name of the cluster. service_list List[EcsService] The list of services attached to this cluster. event_target_list List[CloudWatchEventTarget] The list of CloudWatchEventTargets associated with this cluster. is_container_insights_enabled bool Indication if Container Insights enabled for this cluster or not. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process ClusterStatus An enumeration. LaunchType An enumeration. NetworkMode An enumeration. EcsService Attributes: Name Type Description name The name of the service. launch_type LaunchType The launch type of the service. network_conf_list List[NetworkConfiguration] The list of network configurations set under this service. elb_list List[LoadBalancingConfiguration] The load balancing configuration defined under this service. task_definition_arn str The ARN of the task definition associated with the service. cluster_name str The name of the cluster this service belongs to. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process EcsTarget Attributes: Name Type Description name The name of the ECS target. target_id str The ID of the target. launch_type LaunchType The launch type of the target. cluster_arn str The cluster this target belongs to. role_arn str The ARN of the IAM Role used with this target. network_conf_list List[NetworkConfiguration] A list of network configurations. task_definition_arn str The ARN of the task definition the target is a part of. cluster_name str The name of the cluster the target belongs to. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process ContainerDefinition dataclass ContainerDefinition(container_name: str, image: str, port_mappings: List[cloudrail.knowledge.context.aws.ecs.ecs_task_definition.PortMappings] = ) EcsTaskDefinition Attributes: Name Type Description task_arn str The ARN of the task definition. family str The family the definition is a part of. revision str The revision of the task definition. task_role_arn str The IAM Role used by the task. execution_role_arn str The IAM Role used to execute the task. network_mode NetworkMode The network mode to use with this task. container_definitions A list (potentially empty) of container definitions. iam_role Optional[Role] The actual IAM Role referenced by execution_role_arn. efs_volume_data The EFS configuration in the task, if one is configured. is_volume_efs bool True if there is EFS configured. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process EfsVolume dataclass EfsVolume(volume_name: str, efs_id: str, encrypt_efs_in_transit: bool) PortMappings dataclass PortMappings(container_port: int, host_port: int, protocol: str) LoadBalancingConfiguration dataclass Details about the load balancing connection to an ECS Service.","title":"ecs"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_cluster.EcsCluster","text":"Attributes: Name Type Description cluster_arn str The ARN of the ECS cluster. cluster_id str The ID of the cluster. cluster_name str The name of the cluster. service_list List[EcsService] The list of services attached to this cluster. event_target_list List[CloudWatchEventTarget] The list of CloudWatchEventTargets associated with this cluster. is_container_insights_enabled bool Indication if Container Insights enabled for this cluster or not.","title":"EcsCluster"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_cluster.EcsCluster.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_cluster.EcsCluster.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_constants.ClusterStatus","text":"An enumeration.","title":"ClusterStatus"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_constants.LaunchType","text":"An enumeration.","title":"LaunchType"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_constants.NetworkMode","text":"An enumeration.","title":"NetworkMode"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_service.EcsService","text":"Attributes: Name Type Description name The name of the service. launch_type LaunchType The launch type of the service. network_conf_list List[NetworkConfiguration] The list of network configurations set under this service. elb_list List[LoadBalancingConfiguration] The load balancing configuration defined under this service. task_definition_arn str The ARN of the task definition associated with the service. cluster_name str The name of the cluster this service belongs to.","title":"EcsService"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_service.EcsService.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_service.EcsService.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_target.EcsTarget","text":"Attributes: Name Type Description name The name of the ECS target. target_id str The ID of the target. launch_type LaunchType The launch type of the target. cluster_arn str The cluster this target belongs to. role_arn str The ARN of the IAM Role used with this target. network_conf_list List[NetworkConfiguration] A list of network configurations. task_definition_arn str The ARN of the task definition the target is a part of. cluster_name str The name of the cluster the target belongs to.","title":"EcsTarget"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_target.EcsTarget.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_target.EcsTarget.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_task_definition.ContainerDefinition","text":"ContainerDefinition(container_name: str, image: str, port_mappings: List[cloudrail.knowledge.context.aws.ecs.ecs_task_definition.PortMappings] = )","title":"ContainerDefinition"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_task_definition.EcsTaskDefinition","text":"Attributes: Name Type Description task_arn str The ARN of the task definition. family str The family the definition is a part of. revision str The revision of the task definition. task_role_arn str The IAM Role used by the task. execution_role_arn str The IAM Role used to execute the task. network_mode NetworkMode The network mode to use with this task. container_definitions A list (potentially empty) of container definitions. iam_role Optional[Role] The actual IAM Role referenced by execution_role_arn. efs_volume_data The EFS configuration in the task, if one is configured. is_volume_efs bool True if there is EFS configured.","title":"EcsTaskDefinition"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_task_definition.EcsTaskDefinition.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_task_definition.EcsTaskDefinition.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_task_definition.EfsVolume","text":"EfsVolume(volume_name: str, efs_id: str, encrypt_efs_in_transit: bool)","title":"EfsVolume"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.ecs_task_definition.PortMappings","text":"PortMappings(container_port: int, host_port: int, protocol: str)","title":"PortMappings"},{"location":"context/aws/ecs/index.html#cloudrail.knowledge.context.aws.ecs.load_balancing_configuration.LoadBalancingConfiguration","text":"Details about the load balancing connection to an ECS Service.","title":"LoadBalancingConfiguration"},{"location":"context/aws/efs/index.html","text":"ElasticFileSystem Attributes: Name Type Description creation_token str When an EFS is being created, this is used to ensure only one EFS is created. efs_id str The ID of the EFS. arn str The ARN of the EFS. encrypted bool True if the EFS is encrypted. policy EfsPolicy The EFS's resource policy, may be None. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process EfsMountTarget Attributes: Name Type Description efs_id str The ID of the EFS the mount target belongs to. mount_target_id str The ID of the mount target. eni_id str The ID of the elastic network interface the target is using. subnet_id str The ID of the subnet the EFS Mount Target is on. security_groups_ids Optional[List[str]] The security groups protecting the target. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process MountTargetSecurityGroups dataclass MountTargetSecurityGroups(security_groups_ids: List[str], mount_target_id: str) EfsPolicy Attributes: Name Type Description efs_id str The ID of the EFS the policy is a part of. policy_statements The statements included in the policy. raw_document The JSON content of the policy. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"efs"},{"location":"context/aws/efs/index.html#cloudrail.knowledge.context.aws.efs.efs_file_system.ElasticFileSystem","text":"Attributes: Name Type Description creation_token str When an EFS is being created, this is used to ensure only one EFS is created. efs_id str The ID of the EFS. arn str The ARN of the EFS. encrypted bool True if the EFS is encrypted. policy EfsPolicy The EFS's resource policy, may be None.","title":"ElasticFileSystem"},{"location":"context/aws/efs/index.html#cloudrail.knowledge.context.aws.efs.efs_file_system.ElasticFileSystem.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/efs/index.html#cloudrail.knowledge.context.aws.efs.efs_file_system.ElasticFileSystem.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/efs/index.html#cloudrail.knowledge.context.aws.efs.efs_mount_target.EfsMountTarget","text":"Attributes: Name Type Description efs_id str The ID of the EFS the mount target belongs to. mount_target_id str The ID of the mount target. eni_id str The ID of the elastic network interface the target is using. subnet_id str The ID of the subnet the EFS Mount Target is on. security_groups_ids Optional[List[str]] The security groups protecting the target.","title":"EfsMountTarget"},{"location":"context/aws/efs/index.html#cloudrail.knowledge.context.aws.efs.efs_mount_target.EfsMountTarget.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/efs/index.html#cloudrail.knowledge.context.aws.efs.efs_mount_target.EfsMountTarget.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/efs/index.html#cloudrail.knowledge.context.aws.efs.efs_mount_target.MountTargetSecurityGroups","text":"MountTargetSecurityGroups(security_groups_ids: List[str], mount_target_id: str)","title":"MountTargetSecurityGroups"},{"location":"context/aws/efs/index.html#cloudrail.knowledge.context.aws.efs.efs_policy.EfsPolicy","text":"Attributes: Name Type Description efs_id str The ID of the EFS the policy is a part of. policy_statements The statements included in the policy. raw_document The JSON content of the policy.","title":"EfsPolicy"},{"location":"context/aws/efs/index.html#cloudrail.knowledge.context.aws.efs.efs_policy.EfsPolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/efs/index.html#cloudrail.knowledge.context.aws.efs.efs_policy.EfsPolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/eks/index.html","text":"Sample rules A few rules that use objects from this package: public_access_eks_api from typing import List , Dict from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessEksApiRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'public_access_eks_api' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for eks_cluster in env_context . eks_clusters : violating_security_group = eks_cluster . security_group_allowing_public_access if violating_security_group : issues . append ( Issue ( f '~Internet~. ' f ' { eks_cluster . get_type () } ` { eks_cluster . get_friendly_name () } ` ' f 'is on { eks_cluster . network_resource . vpc . get_type () } ' f ' ` { eks_cluster . network_resource . vpc . get_friendly_name () } `. ' f 'Master is protected by security groups ' f '` { \", \" . join ([ x . get_friendly_name () for x in eks_cluster . network_resource . security_groups ]) } `. ' f ' { eks_cluster . get_type () } uses subnets' f ' ` { \", \" . join ([ x . get_friendly_name () for x in eks_cluster . network_resource . subnets ]) } `. ' f \"Subnets rely on Network ACL's \" f '` { \", \" . join ([ x . network_acl . get_friendly_name () for x in eks_cluster . network_resource . subnets ]) } `. ' f 'They also rely on Route tables ' f '` { \", \" . join ([ x . route_table . get_friendly_name () for x in eks_cluster . network_resource . subnets ]) } `. ' f ' { eks_cluster . get_type () } is set to be publicly accessible' , eks_cluster , violating_security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . eks_clusters ) EksCluster Attributes: Name Type Description name The name of the EKS Cluster. arn str The ARN of the EKS Cluster. role_arn str The ARN of the role used with the cluster. endpoint str The endpoint of the cluster. security_group_ids The IDs of the security groups used by nodes in the cluster. cluster_security_group_id Optional[str] The id of the security group used with the endpoint. subnet_ids The subnets the nodes are attached to. endpoint_public_access bool True if the endpoint allows public access. endpoint_private_access bool True if the endpoint allows private access. public_access_cidrs List[str] The CIDR blocks public access is allowed from. port int The port the endpoint is listening on. security_group_allowing_public_access Optional[SecurityGroup] A security group that allows access from the internet. This value will be None when this resource is not accessible from the internet. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"eks"},{"location":"context/aws/eks/index.html#sample-rules","text":"A few rules that use objects from this package: public_access_eks_api from typing import List , Dict from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessEksApiRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'public_access_eks_api' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for eks_cluster in env_context . eks_clusters : violating_security_group = eks_cluster . security_group_allowing_public_access if violating_security_group : issues . append ( Issue ( f '~Internet~. ' f ' { eks_cluster . get_type () } ` { eks_cluster . get_friendly_name () } ` ' f 'is on { eks_cluster . network_resource . vpc . get_type () } ' f ' ` { eks_cluster . network_resource . vpc . get_friendly_name () } `. ' f 'Master is protected by security groups ' f '` { \", \" . join ([ x . get_friendly_name () for x in eks_cluster . network_resource . security_groups ]) } `. ' f ' { eks_cluster . get_type () } uses subnets' f ' ` { \", \" . join ([ x . get_friendly_name () for x in eks_cluster . network_resource . subnets ]) } `. ' f \"Subnets rely on Network ACL's \" f '` { \", \" . join ([ x . network_acl . get_friendly_name () for x in eks_cluster . network_resource . subnets ]) } `. ' f 'They also rely on Route tables ' f '` { \", \" . join ([ x . route_table . get_friendly_name () for x in eks_cluster . network_resource . subnets ]) } `. ' f ' { eks_cluster . get_type () } is set to be publicly accessible' , eks_cluster , violating_security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . eks_clusters )","title":"Sample rules"},{"location":"context/aws/eks/index.html#cloudrail.knowledge.context.aws.eks.eks_cluster.EksCluster","text":"Attributes: Name Type Description name The name of the EKS Cluster. arn str The ARN of the EKS Cluster. role_arn str The ARN of the role used with the cluster. endpoint str The endpoint of the cluster. security_group_ids The IDs of the security groups used by nodes in the cluster. cluster_security_group_id Optional[str] The id of the security group used with the endpoint. subnet_ids The subnets the nodes are attached to. endpoint_public_access bool True if the endpoint allows public access. endpoint_private_access bool True if the endpoint allows private access. public_access_cidrs List[str] The CIDR blocks public access is allowed from. port int The port the endpoint is listening on. security_group_allowing_public_access Optional[SecurityGroup] A security group that allows access from the internet. This value will be None when this resource is not accessible from the internet.","title":"EksCluster"},{"location":"context/aws/eks/index.html#cloudrail.knowledge.context.aws.eks.eks_cluster.EksCluster.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/eks/index.html#cloudrail.knowledge.context.aws.eks.eks_cluster.EksCluster.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/elasticache/index.html","text":"ElastiCacheCluster Attributes: Name Type Description cluster_name str The name of the cluster. arn str The ARN of the cluster. replication_group_id str The ID of the replication group. security_group_ids Optional[list] The IDs of the security groups used by this cluster. subnet_group_name Optional[str] The name of the subnet group used by the cluster. subnet_ids Optional[List[str]] The IDs of the subnet in the subnet group. is_in_default_vpc bool True if the ElasticCache cluster is in the default VPC. snapshot_retention_limit Optional[int] Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. engine str Name of the cache engine to be used for the ElasticCache cluster custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process ElastiCacheReplicationGroup Attributes: Name Type Description replication_group_id str The ID of this replication group. encrypted_at_rest bool True if the group is configured to encrypt at rest. encrypted_in_transit bool True if this group is configured to encrypt in transit. subnet_group_name Optional[str] The name of the subnet group associated with this replication group. subnet_ids Optional[List[str]] The IDs of the subnet from the subnet group. security_group_ids Optional[list] The security group IDs used by the cluster. is_in_default_vpc bool True if this group is in the default VPC. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process ElastiCacheSubnetGroup Attributes: Name Type Description subnet_group_name str The name of the subnet group. subnet_ids list The IDs of the subnets included in this group. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"elasticache"},{"location":"context/aws/elasticache/index.html#cloudrail.knowledge.context.aws.elasticache.elasticache_cluster.ElastiCacheCluster","text":"Attributes: Name Type Description cluster_name str The name of the cluster. arn str The ARN of the cluster. replication_group_id str The ID of the replication group. security_group_ids Optional[list] The IDs of the security groups used by this cluster. subnet_group_name Optional[str] The name of the subnet group used by the cluster. subnet_ids Optional[List[str]] The IDs of the subnet in the subnet group. is_in_default_vpc bool True if the ElasticCache cluster is in the default VPC. snapshot_retention_limit Optional[int] Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. engine str Name of the cache engine to be used for the ElasticCache cluster","title":"ElastiCacheCluster"},{"location":"context/aws/elasticache/index.html#cloudrail.knowledge.context.aws.elasticache.elasticache_cluster.ElastiCacheCluster.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/elasticache/index.html#cloudrail.knowledge.context.aws.elasticache.elasticache_cluster.ElastiCacheCluster.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/elasticache/index.html#cloudrail.knowledge.context.aws.elasticache.elasticache_replication_group.ElastiCacheReplicationGroup","text":"Attributes: Name Type Description replication_group_id str The ID of this replication group. encrypted_at_rest bool True if the group is configured to encrypt at rest. encrypted_in_transit bool True if this group is configured to encrypt in transit. subnet_group_name Optional[str] The name of the subnet group associated with this replication group. subnet_ids Optional[List[str]] The IDs of the subnet from the subnet group. security_group_ids Optional[list] The security group IDs used by the cluster. is_in_default_vpc bool True if this group is in the default VPC.","title":"ElastiCacheReplicationGroup"},{"location":"context/aws/elasticache/index.html#cloudrail.knowledge.context.aws.elasticache.elasticache_replication_group.ElastiCacheReplicationGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/elasticache/index.html#cloudrail.knowledge.context.aws.elasticache.elasticache_replication_group.ElastiCacheReplicationGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/elasticache/index.html#cloudrail.knowledge.context.aws.elasticache.elasticache_subnet_group.ElastiCacheSubnetGroup","text":"Attributes: Name Type Description subnet_group_name str The name of the subnet group. subnet_ids list The IDs of the subnets included in this group.","title":"ElastiCacheSubnetGroup"},{"location":"context/aws/elasticache/index.html#cloudrail.knowledge.context.aws.elasticache.elasticache_subnet_group.ElastiCacheSubnetGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/elasticache/index.html#cloudrail.knowledge.context.aws.elasticache.elasticache_subnet_group.ElastiCacheSubnetGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/elb/index.html","text":"LoadBalancer Attributes: Name Type Description name The name of the load balancer. scheme_type LoadBalancerSchemeType The scheme type (internal or internet-facing). load_balancer_type LoadBalancerType The type of the load balancer (network or application). load_balancer_arn str The ARN of the load balancer. target_groups List[LoadBalancerTargetGroup] The target groups associated with this LB. listener_ports List[int] The ports the listeners associated with this LB are configured to. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process LoadBalancerRawData dataclass LoadBalancerRawData(subnets_ids: 'List[str]' = , security_groups_ids: 'List[str]' = , subnet_mapping: 'List[LoadBalancerSubnetMapping]' = ) LoadBalancerSchemeType An enumeration. LoadBalancerSubnetMapping dataclass LoadBalancerSubnetMapping(allocation_id: 'str', private_ipv4_address: 'str', subnet_id: 'str') LoadBalancerType An enumeration. LoadBalancerListener Attributes: Name Type Description listener_arn str The ARN of this listener. listener_port int The port this listener listens on. listener_protocol str The protocol the listener listens on. load_balancer_arn str The ARN of the load balancer the listener is attached to. default_action_type str The default action type of this listener. redirect_action_protocol Optional[str] The redirect protocol, if the redirect action is configured (None otherwise). redirect_action_port Optional[str] The redirect port, if the redirect action is configured (None otherwise). custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process LoadBalancerTarget Attributes: Name Type Description target_group_arn str The ARN of the target group this target belongs to. target_health The health of the target. target_id str The ID of this target. port int The port this target listens on. target_instance Set to an Ec2Instance of applicable. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process LoadBalancerTargetGroup Attributes: Name Type Description port int The port the target group listens on. protocol str The protocol the target group listens to. vpc_id str The VPC the target group is in. target_group_arn str The ARN of the target group. target_group_name str The name of the target group. target_type str The type of the target, types vary based on the type of the load balancer itself. targets List[LoadBalancerTarget] The targets within this group. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process LoadBalancerTargetGroupAssociation Attributes: Name Type Description target_group_arns List[str] The ARNs of the target groups being associated. load_balancer_arn str The ARN of the load balancer the groups are being associated to. port int The port of the target groups. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process LoadBalancerAccessLogs dataclass Attributes: Name Type Description bucket str The S3 bucket to store logs into. prefix str The S3 bucket prefix (optional). enable Indication if access logs are enabled. LoadBalancerAttributes Attributes: Name Type Description load_balancer_arn str The ARN of the load balancer. drop_invalid_header_fields bool An indication if the application load balancer remove invalid http headers or send to the targets as is. access_logs Optional[LoadBalancerAccessLogs] Block of settings for this load balancer access logs. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"elb"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer.LoadBalancer","text":"Attributes: Name Type Description name The name of the load balancer. scheme_type LoadBalancerSchemeType The scheme type (internal or internet-facing). load_balancer_type LoadBalancerType The type of the load balancer (network or application). load_balancer_arn str The ARN of the load balancer. target_groups List[LoadBalancerTargetGroup] The target groups associated with this LB. listener_ports List[int] The ports the listeners associated with this LB are configured to.","title":"LoadBalancer"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer.LoadBalancer.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer.LoadBalancer.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer.LoadBalancerRawData","text":"LoadBalancerRawData(subnets_ids: 'List[str]' = , security_groups_ids: 'List[str]' = , subnet_mapping: 'List[LoadBalancerSubnetMapping]' = )","title":"LoadBalancerRawData"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer.LoadBalancerSchemeType","text":"An enumeration.","title":"LoadBalancerSchemeType"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer.LoadBalancerSubnetMapping","text":"LoadBalancerSubnetMapping(allocation_id: 'str', private_ipv4_address: 'str', subnet_id: 'str')","title":"LoadBalancerSubnetMapping"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer.LoadBalancerType","text":"An enumeration.","title":"LoadBalancerType"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_listener.LoadBalancerListener","text":"Attributes: Name Type Description listener_arn str The ARN of this listener. listener_port int The port this listener listens on. listener_protocol str The protocol the listener listens on. load_balancer_arn str The ARN of the load balancer the listener is attached to. default_action_type str The default action type of this listener. redirect_action_protocol Optional[str] The redirect protocol, if the redirect action is configured (None otherwise). redirect_action_port Optional[str] The redirect port, if the redirect action is configured (None otherwise).","title":"LoadBalancerListener"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_listener.LoadBalancerListener.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_listener.LoadBalancerListener.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_target.LoadBalancerTarget","text":"Attributes: Name Type Description target_group_arn str The ARN of the target group this target belongs to. target_health The health of the target. target_id str The ID of this target. port int The port this target listens on. target_instance Set to an Ec2Instance of applicable.","title":"LoadBalancerTarget"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_target.LoadBalancerTarget.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_target.LoadBalancerTarget.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_target_group.LoadBalancerTargetGroup","text":"Attributes: Name Type Description port int The port the target group listens on. protocol str The protocol the target group listens to. vpc_id str The VPC the target group is in. target_group_arn str The ARN of the target group. target_group_name str The name of the target group. target_type str The type of the target, types vary based on the type of the load balancer itself. targets List[LoadBalancerTarget] The targets within this group.","title":"LoadBalancerTargetGroup"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_target_group.LoadBalancerTargetGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_target_group.LoadBalancerTargetGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_target_group_association.LoadBalancerTargetGroupAssociation","text":"Attributes: Name Type Description target_group_arns List[str] The ARNs of the target groups being associated. load_balancer_arn str The ARN of the load balancer the groups are being associated to. port int The port of the target groups.","title":"LoadBalancerTargetGroupAssociation"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_target_group_association.LoadBalancerTargetGroupAssociation.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_target_group_association.LoadBalancerTargetGroupAssociation.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_attributes.LoadBalancerAccessLogs","text":"Attributes: Name Type Description bucket str The S3 bucket to store logs into. prefix str The S3 bucket prefix (optional). enable Indication if access logs are enabled.","title":"LoadBalancerAccessLogs"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_attributes.LoadBalancerAttributes","text":"Attributes: Name Type Description load_balancer_arn str The ARN of the load balancer. drop_invalid_header_fields bool An indication if the application load balancer remove invalid http headers or send to the targets as is. access_logs Optional[LoadBalancerAccessLogs] Block of settings for this load balancer access logs.","title":"LoadBalancerAttributes"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_attributes.LoadBalancerAttributes.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/elb/index.html#cloudrail.knowledge.context.aws.elb.load_balancer_attributes.LoadBalancerAttributes.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/emr/index.html","text":"EmrCluster Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. cluster_name str The EMR cluster resource name. arn str The ARN of the EMR cluster resource. cluster_id str The ID of the EMR cluster resource. vpc_config Optional[NetworkConfiguration] Networking information used by the resource. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process EmrPublicAccessConfiguration Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. block_public_access bool Does the EMR cluster being created into this region will block public access or not. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"emr"},{"location":"context/aws/emr/index.html#cloudrail.knowledge.context.aws.emr.emr_cluster.EmrCluster","text":"Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. cluster_name str The EMR cluster resource name. arn str The ARN of the EMR cluster resource. cluster_id str The ID of the EMR cluster resource. vpc_config Optional[NetworkConfiguration] Networking information used by the resource.","title":"EmrCluster"},{"location":"context/aws/emr/index.html#cloudrail.knowledge.context.aws.emr.emr_cluster.EmrCluster.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/emr/index.html#cloudrail.knowledge.context.aws.emr.emr_cluster.EmrCluster.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/emr/index.html#cloudrail.knowledge.context.aws.emr.emr_public_access_config.EmrPublicAccessConfiguration","text":"Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. block_public_access bool Does the EMR cluster being created into this region will block public access or not.","title":"EmrPublicAccessConfiguration"},{"location":"context/aws/emr/index.html#cloudrail.knowledge.context.aws.emr.emr_public_access_config.EmrPublicAccessConfiguration.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/emr/index.html#cloudrail.knowledge.context.aws.emr.emr_public_access_config.EmrPublicAccessConfiguration.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/es/index.html","text":"Sample rules A few rules that use objects from this package: public_access_elasticsearch_rule from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessElasticSearchRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'public_access_elasticsearch_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [ Issue ( f \"~Internet~. { es . get_type () } : ` { es . get_friendly_name () } ` is publicly accessible. \" f \" { es . get_type () } is currently not deployed within a VPC. ~ElasticSearch~\" , es , es ) for es in env_context . elastic_search_domains if es . is_public ] return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . elastic_search_domains ) indirect_public_access_elastic_search_rule from typing import List , Dict , Optional from cloudrail.knowledge.context.aws.indirect_public_connection_data import IndirectPublicConnectionData from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class IndirectPublicAccessElasticSearchRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'indirect_public_access_elastic_search_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for es_domain in [ es for es in env_context . elastic_search_domains if es . is_in_vpc ]: violation_data : Optional [ IndirectPublicConnectionData ] = es_domain . indirect_public_connection_data if violation_data : issues . append ( Issue ( f \"~Internet~. \" f \"Instance ` { violation_data . target_eni . owner . get_friendly_name () } \" f \"` resides in subnet(s) that are routable to internet gateway. \" f \"Instance has public IP address. \" f \"Instance accepts incoming traffic on port 443. \" f \"~Instance ` { violation_data . target_eni . owner . get_friendly_name () } `~. \" f \" { es_domain . get_type () } ` { es_domain . get_friendly_name () } ` is on Vpc \" f \"` { es_domain . network_resource . vpc . get_friendly_name () } `. \" f \" { es_domain . get_type () } is not publically accessible and \" f \"uses subnets ` { ', ' . join ([ x . get_friendly_name () for x in es_domain . network_resource . subnets ]) } `. \" f \" { es_domain . get_type () } resides in same subnet as Instance\" f \"` { violation_data . target_eni . owner . get_friendly_name () } `. \" f \" { es_domain . get_type () } uses Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in es_domain . network_resource . subnets ]) } `. \" f \" { es_domain . get_type () } is indirectly accessible from instance \" f \"` { violation_data . target_eni . owner . get_friendly_name () } `. \" f \"~ { es_domain . get_type () } ` { es_domain . get_friendly_name () } `~\" , es_domain , violation_data . security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . elastic_search_domains ) not_car_elasticsearch_domains_encrypted_note_to_node from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EsEncryptNodeToNodeRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'not_car_elasticsearch_domains_encrypted_note_to_node' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for es_domain in env_context . elastic_search_domains : if es_domain . is_new_resource (): if not es_domain . encrypt_node_to_node_state : issues . append ( Issue ( f \"~ { es_domain . get_type () } ~. { es_domain . get_type () } ` { es_domain . get_friendly_name () } `. \" f \"is not set to use encrypt node-to-node\" , es_domain , es_domain )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . elastic_search_domains ) ElasticSearchDomain Attributes: Name Type Description domain_id str The ID of the ElasticSearch Domain. domain_name The name of the domain. arn str The ARN of the domain. enforce_https True if only HTTPS is allowed. subnet_ids The IDs of the subnets the domain is attached to, if any. security_group_ids The IDs of the security groups used with the ElasticSearch Domain, if any. encrypt_at_rest_state bool True if encryption at rest is enabled. encrypt_node_to_node_state bool True if node-to-node traffic is encrypted. is_public bool True if the ElasticSearch Domain is public. is_in_vpc bool True if the ElasticSearch Domain is accessible at a specific VPC. ports List[int] The ports the ElasticSearch is listening on. policy ElasticSearchDomainPolicy The resource policy used with the domain. indirect_public_connection_data Optional[IndirectPublicConnectionData] The data that describes that a publicly-accessible resource can access this resource by a security group of this resource. log_publishing_options Optional[List[LogPublishingOptions]] Set of data about the publishing logs to CloudWatch, if enabled. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process LogPublishingOptions dataclass Attributes: Name Type Description log_type str The type of Elasticsearch log to publish. cloudwatch_log_group_arn str The ARN of the Cloudwatch log group to publish logs into. enable Indication if log publishing is enabled. ElasticSearchDomainPolicy Attributes: Name Type Description domain_name str The name of the domain the policy is related to. policy_statements The statements contained in the policy. raw_document The raw JSON content of the policy. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"es"},{"location":"context/aws/es/index.html#sample-rules","text":"A few rules that use objects from this package: public_access_elasticsearch_rule from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessElasticSearchRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'public_access_elasticsearch_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [ Issue ( f \"~Internet~. { es . get_type () } : ` { es . get_friendly_name () } ` is publicly accessible. \" f \" { es . get_type () } is currently not deployed within a VPC. ~ElasticSearch~\" , es , es ) for es in env_context . elastic_search_domains if es . is_public ] return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . elastic_search_domains ) indirect_public_access_elastic_search_rule from typing import List , Dict , Optional from cloudrail.knowledge.context.aws.indirect_public_connection_data import IndirectPublicConnectionData from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class IndirectPublicAccessElasticSearchRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'indirect_public_access_elastic_search_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for es_domain in [ es for es in env_context . elastic_search_domains if es . is_in_vpc ]: violation_data : Optional [ IndirectPublicConnectionData ] = es_domain . indirect_public_connection_data if violation_data : issues . append ( Issue ( f \"~Internet~. \" f \"Instance ` { violation_data . target_eni . owner . get_friendly_name () } \" f \"` resides in subnet(s) that are routable to internet gateway. \" f \"Instance has public IP address. \" f \"Instance accepts incoming traffic on port 443. \" f \"~Instance ` { violation_data . target_eni . owner . get_friendly_name () } `~. \" f \" { es_domain . get_type () } ` { es_domain . get_friendly_name () } ` is on Vpc \" f \"` { es_domain . network_resource . vpc . get_friendly_name () } `. \" f \" { es_domain . get_type () } is not publically accessible and \" f \"uses subnets ` { ', ' . join ([ x . get_friendly_name () for x in es_domain . network_resource . subnets ]) } `. \" f \" { es_domain . get_type () } resides in same subnet as Instance\" f \"` { violation_data . target_eni . owner . get_friendly_name () } `. \" f \" { es_domain . get_type () } uses Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in es_domain . network_resource . subnets ]) } `. \" f \" { es_domain . get_type () } is indirectly accessible from instance \" f \"` { violation_data . target_eni . owner . get_friendly_name () } `. \" f \"~ { es_domain . get_type () } ` { es_domain . get_friendly_name () } `~\" , es_domain , violation_data . security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . elastic_search_domains ) not_car_elasticsearch_domains_encrypted_note_to_node from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EsEncryptNodeToNodeRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'not_car_elasticsearch_domains_encrypted_note_to_node' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for es_domain in env_context . elastic_search_domains : if es_domain . is_new_resource (): if not es_domain . encrypt_node_to_node_state : issues . append ( Issue ( f \"~ { es_domain . get_type () } ~. { es_domain . get_type () } ` { es_domain . get_friendly_name () } `. \" f \"is not set to use encrypt node-to-node\" , es_domain , es_domain )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . elastic_search_domains )","title":"Sample rules"},{"location":"context/aws/es/index.html#cloudrail.knowledge.context.aws.es.elastic_search_domain.ElasticSearchDomain","text":"Attributes: Name Type Description domain_id str The ID of the ElasticSearch Domain. domain_name The name of the domain. arn str The ARN of the domain. enforce_https True if only HTTPS is allowed. subnet_ids The IDs of the subnets the domain is attached to, if any. security_group_ids The IDs of the security groups used with the ElasticSearch Domain, if any. encrypt_at_rest_state bool True if encryption at rest is enabled. encrypt_node_to_node_state bool True if node-to-node traffic is encrypted. is_public bool True if the ElasticSearch Domain is public. is_in_vpc bool True if the ElasticSearch Domain is accessible at a specific VPC. ports List[int] The ports the ElasticSearch is listening on. policy ElasticSearchDomainPolicy The resource policy used with the domain. indirect_public_connection_data Optional[IndirectPublicConnectionData] The data that describes that a publicly-accessible resource can access this resource by a security group of this resource. log_publishing_options Optional[List[LogPublishingOptions]] Set of data about the publishing logs to CloudWatch, if enabled.","title":"ElasticSearchDomain"},{"location":"context/aws/es/index.html#cloudrail.knowledge.context.aws.es.elastic_search_domain.ElasticSearchDomain.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/es/index.html#cloudrail.knowledge.context.aws.es.elastic_search_domain.ElasticSearchDomain.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/es/index.html#cloudrail.knowledge.context.aws.es.elastic_search_domain.LogPublishingOptions","text":"Attributes: Name Type Description log_type str The type of Elasticsearch log to publish. cloudwatch_log_group_arn str The ARN of the Cloudwatch log group to publish logs into. enable Indication if log publishing is enabled.","title":"LogPublishingOptions"},{"location":"context/aws/es/index.html#cloudrail.knowledge.context.aws.es.elastic_search_domain_policy.ElasticSearchDomainPolicy","text":"Attributes: Name Type Description domain_name str The name of the domain the policy is related to. policy_statements The statements contained in the policy. raw_document The raw JSON content of the policy.","title":"ElasticSearchDomainPolicy"},{"location":"context/aws/es/index.html#cloudrail.knowledge.context.aws.es.elastic_search_domain_policy.ElasticSearchDomainPolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/es/index.html#cloudrail.knowledge.context.aws.es.elastic_search_domain_policy.ElasticSearchDomainPolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/glacier/index.html","text":"GlacierVault Attributes: Name Type Description vault_name str The name of the vualt. arn str The ARN of the vault. policy GlacierVaultPolicy The resource policy used by the vault. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process GlacierVaultPolicy Attributes: Name Type Description vault_arn str The ARN of the vault the policy applies to. policy_statements The policy's statements. raw_document The raw JSON of the policy. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"glacier"},{"location":"context/aws/glacier/index.html#cloudrail.knowledge.context.aws.glacier.glacier_vault.GlacierVault","text":"Attributes: Name Type Description vault_name str The name of the vualt. arn str The ARN of the vault. policy GlacierVaultPolicy The resource policy used by the vault.","title":"GlacierVault"},{"location":"context/aws/glacier/index.html#cloudrail.knowledge.context.aws.glacier.glacier_vault.GlacierVault.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/glacier/index.html#cloudrail.knowledge.context.aws.glacier.glacier_vault.GlacierVault.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/glacier/index.html#cloudrail.knowledge.context.aws.glacier.glacier_vault_policy.GlacierVaultPolicy","text":"Attributes: Name Type Description vault_arn str The ARN of the vault the policy applies to. policy_statements The policy's statements. raw_document The raw JSON of the policy.","title":"GlacierVaultPolicy"},{"location":"context/aws/glacier/index.html#cloudrail.knowledge.context.aws.glacier.glacier_vault_policy.GlacierVaultPolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/glacier/index.html#cloudrail.knowledge.context.aws.glacier.glacier_vault_policy.GlacierVaultPolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/globalaccelerator/index.html","text":"GlobalAccelerator Attributes: Name Type Description account The account ID in which this resource operates. region str The region in which this resource operates. accelerator_name str The Global Accelerator name. arn str The ARN of the Global Accelerator. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process GlobalAcceleratorEndpointGroup Attributes: Name Type Description account The account ID in which this resource operates. region str The region in which this resource operates. listener_arn str The Load Balancer Listener which this endpoint associated with. endpoint_arn str The ARN of the Global Accelerator Endpoint. endpoint_config_id str The ID of the endpoint object. client_ip_preservation_enabled bool Is client IP address preservation is enabled for an Application Load Balancer endpoint. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process GlobalAcceleratorListener Attributes: Name Type Description account The account ID in which this resource operates. region str The region in which this resource operates. listener_arn str The Load Balancer Listener resource ARN. accelerator_arn str The ARN of the Global Accelerator resource. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process GlobalAcceleratorAttribute Attributes: Name Type Description flow_logs_enabled bool Indicating if the flow logs are enabled for the Global Accelerator. flow_logs_s3_bucket Optional[str] The S3 bucket to store the logs, if enabled. flow_logs_s3_prefix Optional[str] The prefix name for the logs files, if enabled. arn The ARN of the Global Accelerator. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"globalaccelerator"},{"location":"context/aws/globalaccelerator/index.html#cloudrail.knowledge.context.aws.globalaccelerator.global_accelerator.GlobalAccelerator","text":"Attributes: Name Type Description account The account ID in which this resource operates. region str The region in which this resource operates. accelerator_name str The Global Accelerator name. arn str The ARN of the Global Accelerator.","title":"GlobalAccelerator"},{"location":"context/aws/globalaccelerator/index.html#cloudrail.knowledge.context.aws.globalaccelerator.global_accelerator.GlobalAccelerator.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/globalaccelerator/index.html#cloudrail.knowledge.context.aws.globalaccelerator.global_accelerator.GlobalAccelerator.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/globalaccelerator/index.html#cloudrail.knowledge.context.aws.globalaccelerator.global_accelerator_endpoint_group.GlobalAcceleratorEndpointGroup","text":"Attributes: Name Type Description account The account ID in which this resource operates. region str The region in which this resource operates. listener_arn str The Load Balancer Listener which this endpoint associated with. endpoint_arn str The ARN of the Global Accelerator Endpoint. endpoint_config_id str The ID of the endpoint object. client_ip_preservation_enabled bool Is client IP address preservation is enabled for an Application Load Balancer endpoint.","title":"GlobalAcceleratorEndpointGroup"},{"location":"context/aws/globalaccelerator/index.html#cloudrail.knowledge.context.aws.globalaccelerator.global_accelerator_endpoint_group.GlobalAcceleratorEndpointGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/globalaccelerator/index.html#cloudrail.knowledge.context.aws.globalaccelerator.global_accelerator_endpoint_group.GlobalAcceleratorEndpointGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/globalaccelerator/index.html#cloudrail.knowledge.context.aws.globalaccelerator.global_accelerator_listener.GlobalAcceleratorListener","text":"Attributes: Name Type Description account The account ID in which this resource operates. region str The region in which this resource operates. listener_arn str The Load Balancer Listener resource ARN. accelerator_arn str The ARN of the Global Accelerator resource.","title":"GlobalAcceleratorListener"},{"location":"context/aws/globalaccelerator/index.html#cloudrail.knowledge.context.aws.globalaccelerator.global_accelerator_listener.GlobalAcceleratorListener.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/globalaccelerator/index.html#cloudrail.knowledge.context.aws.globalaccelerator.global_accelerator_listener.GlobalAcceleratorListener.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/globalaccelerator/index.html#cloudrail.knowledge.context.aws.globalaccelerator.global_accelerator_attributes.GlobalAcceleratorAttribute","text":"Attributes: Name Type Description flow_logs_enabled bool Indicating if the flow logs are enabled for the Global Accelerator. flow_logs_s3_bucket Optional[str] The S3 bucket to store the logs, if enabled. flow_logs_s3_prefix Optional[str] The prefix name for the logs files, if enabled. arn The ARN of the Global Accelerator.","title":"GlobalAcceleratorAttribute"},{"location":"context/aws/globalaccelerator/index.html#cloudrail.knowledge.context.aws.globalaccelerator.global_accelerator_attributes.GlobalAcceleratorAttribute.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/globalaccelerator/index.html#cloudrail.knowledge.context.aws.globalaccelerator.global_accelerator_attributes.GlobalAcceleratorAttribute.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/glue/index.html","text":"GlueCrawler Attributes: Name Type Description crawler_name str The name of the crawler. database_name str The name of the database. arn The ARN of the crawler. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process GlueDataCatalogPolicy Attributes: Name Type Description policy_statements The policy's statements. raw_document The raw JSON of the policy. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process GlueDataCatalogTable Attributes: Name Type Description table_name str The name of the table. database_name str The name of the database. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process GlueConnection Attributes: Name Type Description connection_name str The name of the Glue connection. arn str The ARN of the Glue connection. vpc_config NetworkConfiguration The network configuration of the Glue connection, if configured. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"glue"},{"location":"context/aws/glue/index.html#cloudrail.knowledge.context.aws.glue.glue_data_catalog_crawler.GlueCrawler","text":"Attributes: Name Type Description crawler_name str The name of the crawler. database_name str The name of the database. arn The ARN of the crawler.","title":"GlueCrawler"},{"location":"context/aws/glue/index.html#cloudrail.knowledge.context.aws.glue.glue_data_catalog_crawler.GlueCrawler.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/glue/index.html#cloudrail.knowledge.context.aws.glue.glue_data_catalog_crawler.GlueCrawler.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/glue/index.html#cloudrail.knowledge.context.aws.glue.glue_data_catalog_policy.GlueDataCatalogPolicy","text":"Attributes: Name Type Description policy_statements The policy's statements. raw_document The raw JSON of the policy.","title":"GlueDataCatalogPolicy"},{"location":"context/aws/glue/index.html#cloudrail.knowledge.context.aws.glue.glue_data_catalog_policy.GlueDataCatalogPolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/glue/index.html#cloudrail.knowledge.context.aws.glue.glue_data_catalog_policy.GlueDataCatalogPolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/glue/index.html#cloudrail.knowledge.context.aws.glue.glue_data_catalog_table.GlueDataCatalogTable","text":"Attributes: Name Type Description table_name str The name of the table. database_name str The name of the database.","title":"GlueDataCatalogTable"},{"location":"context/aws/glue/index.html#cloudrail.knowledge.context.aws.glue.glue_data_catalog_table.GlueDataCatalogTable.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/glue/index.html#cloudrail.knowledge.context.aws.glue.glue_data_catalog_table.GlueDataCatalogTable.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/glue/index.html#cloudrail.knowledge.context.aws.glue.glue_connection.GlueConnection","text":"Attributes: Name Type Description connection_name str The name of the Glue connection. arn str The ARN of the Glue connection. vpc_config NetworkConfiguration The network configuration of the Glue connection, if configured.","title":"GlueConnection"},{"location":"context/aws/glue/index.html#cloudrail.knowledge.context.aws.glue.glue_connection.GlueConnection.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/glue/index.html#cloudrail.knowledge.context.aws.glue.glue_connection.GlueConnection.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html","text":"Sample rules A few rules that use objects from this package: ec2_role_share_rule from typing import List , Dict from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType from cloudrail.knowledge.context.aws.ec2.ec2_instance import Ec2Instance from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext class Ec2RoleShareRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'ec2_role_share_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] ec2s : List [ Ec2Instance ] = env_context . ec2s profile_to_public_ec2 = {} for public_ec2 in ( x for x in ec2s if x . network_resource . is_inbound_public and x . iam_profile_id ): profile_to_public_ec2 [ public_ec2 . iam_profile_id ] = public_ec2 for private_ec2 in ( x for x in ec2s if not x . network_resource . is_inbound_public and x . iam_profile_id ): public_ec2 = profile_to_public_ec2 . get ( private_ec2 . iam_profile_id ) profile = private_ec2 . iam_role . get_friendly_name () \\ if private_ec2 . iam_role \\ else private_ec2 . iam_profile_id if public_ec2 : issues . append ( Issue ( f \"~Instance ` { public_ec2 . get_friendly_name () } `~. Instance is publicly exposed. \" f \"Instance uses IAM role ` { profile } `. \" f \"Private EC2 instance shares IAM role ` { profile } ` as well. \" f \"~Instance ` { private_ec2 . get_friendly_name () } `~\" , private_ec2 , private_ec2 . iam_role )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . ec2s ) car_iam_policy_control_in_iac_only from typing import List , Dict , Tuple , Union from cloudrail.knowledge.context.aws.account.account import Account from cloudrail.knowledge.context.aws.iam.iam_group import IamGroup from cloudrail.knowledge.context.aws.iam.iam_identity import IamIdentity from cloudrail.knowledge.context.aws.iam.iam_user import IamUser from cloudrail.knowledge.context.aws.iam.policy import InlinePolicy , ManagedPolicy from cloudrail.knowledge.context.mergeable import EntityOrigin from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureIamEntitiesPolicyManagedSolely ( AwsBaseRule ): def get_id ( self ) -> str : return 'car_iam_policy_control_in_iac_only' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for account in env_context . accounts : filtered_iam_entities = self . _filter_entities_by_account ( env_context . roles , account ) + \\ self . _filter_entities_by_account ( env_context . users , account ) + \\ self . _filter_entities_by_account ( env_context . groups , account ) for entity in filtered_iam_entities : affected_policies = self . _get_live_env_attached_policies ( entity ) for policy in affected_policies : issues . append ( Issue ( f '~` { policy . get_friendly_name () } `~. ' f 'is attached to { entity . get_type () } ` { entity . get_friendly_name () } `. ` { entity . get_friendly_name () } ` ' f 'is declared in infrastructure-as-code. The attachment of the policy was done outside of the code ' f '(for example, directly via the console)' , account , policy )) if isinstance ( entity , IamUser ): affected_groups = self . _get_group_attach_policies_aws ( entity ) for group , policies in affected_groups : policies_list_string = ', ' . join ([ policy . get_friendly_name () for policy in policies ]) issues . append ( Issue ( f ' { entity . get_type () } ` { entity . get_friendly_name () } ` is declared in infrastructure-as-code. ' f 'The attachment of policy(s) ` { policies_list_string } ` to it was done outside the code ' f '(for example, directly via the console), by adding it to the group ` { group . get_friendly_name () } `.' , account , group )) return issues @staticmethod def filter_non_iac_managed_issues () -> bool : return False def _filter_entities_by_account ( self , entities : List [ IamIdentity ], account : Account ) -> List [ IamIdentity ]: return [ entity for entity in entities if entity . account == account . account and self . _are_there_existing_tf_entities ( entity )] @staticmethod def _are_there_existing_tf_entities ( entity : IamIdentity ) -> bool : return entity . is_managed_by_iac and not entity . is_new_resource () and \\ any (( isinstance ( policy , ManagedPolicy ) and any ( pao . get ( policy . get_name ()) == EntityOrigin . TERRAFORM for pao in entity . get_policies_attach_origin_maps ()) or ( isinstance ( policy , InlinePolicy ) and policy . is_managed_by_iac )) for policy in entity . get_policies ()) @staticmethod def _get_live_env_attached_policies ( entity : IamIdentity ) -> List [ Union [ ManagedPolicy , InlinePolicy ]]: affected_policies = [] for policy in entity . permissions_policies : if ( isinstance ( policy , ManagedPolicy ) and any ( pao . get ( policy . get_name ()) == EntityOrigin . LIVE_ENV for pao in entity . get_policies_attach_origin_maps ())): affected_policies . append ( policy ) elif isinstance ( policy , InlinePolicy ) and not policy . is_managed_by_iac : affected_policies . append ( policy ) return affected_policies def _get_group_attach_policies_aws ( self , user : IamUser ) -> List [ Tuple [ IamGroup , List [ Union [ ManagedPolicy , InlinePolicy ]]]]: issues_list = [] for group in user . groups : affected_policies = self . _get_live_env_attached_policies ( group ) if affected_policies : issues_list . append (( group , affected_policies )) return issues_list def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . accounts and environment_context . get_all_iam_entities ()) iam_priv_escalation_policy from typing import Dict , List , Set from cloudrail.knowledge.context.aws.iam.iam_identity import IamIdentity from cloudrail.knowledge.context.aws.iam.policy import Policy from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType from cloudrail.knowledge.utils.action_utils import is_combo_escalation_permissions_match , attribute_match , LAMBDA_UPDATE_ACTION , EC2_RUN_INSTANCE_ACTION , \\ LAMBDA_INVOKE_FUNCTION_ACTION , LAMBDA_CREATE_EVENT_ACTION class IamPrivilegeEscalationPolicyRule ( AwsBaseRule ): EVIDENCE_TEMPLATE : str = \"~` {} `~. is applied to ` {} `. {}{} \" def __init__ ( self ) -> None : super () . __init__ () self . issues_list : List [ Issue ] = [] def get_id ( self ) -> str : return \"iam_priv_escalation_policy\" def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: for iam_entity in env_context . get_all_iam_entities (): self . _add_issues_by_iam_entity ( iam_entity ) return self . issues_list def _add_issues_by_iam_entity ( self , iam_entity : IamIdentity ): if iam_entity . policy_to_escalation_actions_map : all_policies_esc_actions : Set [ str ] = { esc_action for esc_actions in iam_entity . policy_to_escalation_actions_map . values () for esc_action in esc_actions } uuid_to_policy_map : Dict [ str , Policy ] = { policy . uuid : policy for policy in iam_entity . permissions_policies } if is_combo_escalation_permissions_match ( all_policies_esc_actions ): policies : List [ Policy ] = [ uuid_to_policy_map [ policy_uuid ] for policy_uuid in iam_entity . policy_to_escalation_actions_map . keys ()] self . _handle_issues ( iam_entity , policies , all_policies_esc_actions ) def _handle_issues ( self , iam_entity : IamIdentity , policies : List [ Policy ], esc_action_list : Set [ str ]): specific_evidence : str = self . _get_evidence_str ( esc_action_list ) multiple_policies_section : str = self . _get_multiple_policies_evidence_section ( policies ) policy : Policy = policies [ 0 ] if multiple_policies_section : specific_evidence = ' ' + specific_evidence evidence : str = self . EVIDENCE_TEMPLATE . format ( policy . get_friendly_name (), iam_entity . get_arn (), multiple_policies_section , specific_evidence ) if policy . is_managed_by_iac : self . issues_list . append ( Issue ( evidence , policy , policy )) else : self . issues_list . append ( Issue ( evidence , iam_entity , iam_entity )) @staticmethod def _get_multiple_policies_evidence_section ( policies : List [ Policy ]) -> str : multiple_policies_section : str = \"\" if len ( policies ) > 1 : multiple_policies_section = \"in conjunction with \" + \\ ', ' . join ([ f \"` { policy . get_friendly_name () } `\" for policy in policies ]) return multiple_policies_section @classmethod def _get_evidence_str ( cls , esc_action_list : Set [ str ]): if cls . _is_specific_evidence ( esc_action_list , LAMBDA_UPDATE_ACTION ): return \"`lambda:UpdateFunctionCode` allows a hacker to run their code under the lambda permission\" elif cls . _is_specific_evidence ( esc_action_list , EC2_RUN_INSTANCE_ACTION ): return \"`iam:PassRole` and `ec2:RunInstances` allows a hacker to run an EC2 instance with a role they choose\" elif cls . _is_specific_evidence ( esc_action_list , LAMBDA_INVOKE_FUNCTION_ACTION ) or \\ cls . _is_specific_evidence ( esc_action_list , LAMBDA_CREATE_EVENT_ACTION ): return f \" { str ( esc_action_list ) } allows a hacker to trigger a Lambda function with a role they choose\" else : return f \"granting the problematic permissions ` { str ( esc_action_list ) } ` which can allow for privilege escalation\" @staticmethod def _is_specific_evidence ( esc_action_list : Set [ str ], action : str ): return \"*\" not in esc_action_list and any ( attribute_match ( esc_action , action ) for esc_action in esc_action_list ) def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . get_all_iam_entities ()) non_car_iam_no_human_users from typing import Dict , List from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class IamNoHumanUsersRule ( AwsBaseRule ): def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues_list : List [ Issue ] = [] for user in env_context . users : if any ( user . name == login_profile . name and user . account == login_profile . account for login_profile in env_context . users_login_profile ): issues_list . append ( Issue ( f 'The { user . get_type () } ` { user . get_friendly_name () } ` has console access, ' f 'and so is considered human' , user , user )) return issues_list def get_id ( self ) -> str : return \"non_car_iam_no_human_users\" def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . users and environment_context . users_login_profile ) not_car_access_analyzer_validation_error_and_security from abc import ABC , abstractmethod from typing import List , Dict , Set from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class AccessAnalyzerValidationBaseRule ( AwsBaseRule , ABC ): def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . get_iac_managed_policies ()) def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues = [] for policy in env_context . get_iac_managed_policies (): evidence = self . _create_evidence_from_findings ( policy . access_analyzer_findings ) if evidence : issues . append ( Issue ( evidence , policy , policy )) return issues def _create_evidence_from_findings ( self , findings ): evidences = [] for finding in findings : evidence = '' if finding . get ( 'findingType' ) in self . _get_violated_finding_types (): if finding . get ( 'locations' ): start = finding [ 'locations' ][ 0 ][ 'span' ][ 'start' ] line = start [ 'line' ] column = start [ 'column' ] prefix = f 'Line { line } , Col { column } :' else : prefix = 'Finding Without Specific Location In Policy:' finding_details = finding [ 'findingDetails' ] learn_more = finding [ 'learnMoreLink' ] evidence += f '~ { prefix } ~. { finding_details } See { learn_more } ' evidences . append ( evidence ) return '. ' . join ( evidences ) @abstractmethod def _get_violated_finding_types ( self ) -> Set [ str ]: pass IamGroup Attributes: Name Type Description name str The name of the IAM Group. group_id str The ID of the group. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process IamGroupMembership Attributes: Name Type Description name str The name of the group membership. group str The group the users belong to. users List[str] The list of users who are members of the designated group. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process IamIdentity Attributes: Name Type Description qualified_arn str A Cloudrail-caculated ARN for the role that ensures it's the same whether the role came from infrastructure-as-code (such as Terraform) or the live AWS environment. arn str The ARN of the IAM identity. permissions_policies List[Union[ManagedPolicy, InlinePolicy]] One or more policies used to give the IAM entity permissions to take certain actions. permission_boundary Optional[Policy] The permission boundary limiting the IAM entity's permissions. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process IamInstanceProfile Attributes: Name Type Description role_name str The name of the role. iam_instance_profile_id str The ID of the instance profile. ec2_instance_data Ec2Instance The Ec2Instance using this profile. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process IamPasswordPolicy Attributes: Name Type Description min_pass_length int The minimum length required for passwords. require_low_case_characters bool True if lower cases characters are required according to the policy. require_upper_case_characters bool True if upper cases characters are required according to the policy. require_numbers bool True if number characters are required according to the policy. require_symbols bool True if symbol characters are required according to the policy. allow_users_to_change_pass bool True if users can change their password. max_pass_age int The maximum age of a password before it needs to be replaced. password_reuse_prevention int Number of passwords kept in history that cannot be repeated. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process IamPolicyAttachment Attributes: Name Type Description policy_arn str The ARN of the policy to attach. users Optional[List] The list of users to attach the policy to, may be empty or None. roles Optional[List] The list of roles to attach the policy to, may be empty or None. groups Optional[List] The list of groups to attach the policy to, may be empty or None. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process IamUser Attributes: Name Type Description name str The name of the user. user_id str The ID of the user. groups List[IamGroup] The groups the user belongs to. groups_attach_origin_map List[Dict] A cache map used to \"remember\" the origin of user-to-group attachments (whether from live account, IaC, etc.). custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process IamUserGroupMembership Attributes: Name Type Description user str The user the membership is focused on. groups List[str] The groups the user should be a member of. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process IamUsersLoginProfile Attributes: Name Type Description name str The name of the user the login profile is for. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process AssumeRolePolicy Attributes: Name Type Description role_name str The name of the role that uses this policy. role_arn str The ARN of the role that uses this policy. is_allowing_external_assume bool An indication on if this policy can be assumed by a resource outside of this policy's account. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process InlinePolicy custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process ManagedPolicy custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process Policy Attributes: Name Type Description statements List[PolicyStatement] The list of statements in the policy. uuid str A randomly generated uuid for the policy (ignore, for internal use). raw_document The raw JSON of the policy. access_analyzer_findings The results from running IAM Access Analyzer's policy validation API on this policy's JSON. policy_type The type of the policy (identity, resource, SCP). custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process PolicyType An enumeration. S3AccessPointPolicy custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process S3Policy custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process PolicyGroupAttachment Attributes: Name Type Description policy_arn str The policy to attach to the group. group_id str The ID of the group to attach the policy to. group_name str The name of the group to attach the policy to. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process PolicyRoleAttachment Attributes: Name Type Description policy_arn str The policy to attach to the role. role_name str The name of the role to attach the policy to. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process PolicyStatement Attributes: Name Type Description effect The effect of the statement (Allow / Deny). actions The actions covered by the statements. resources The resources covered by the statement. principal The principal(s) included. statement_id The id of the statement. condition_block List of conditions included in the statement, or None if there aren't any. policy The policy the statement belong to, if it does. StatementCondition dataclass StatementCondition(operator: str, key: str, values: List[str]) StatementEffect An enumeration. PolicyUserAttachment Attributes: Name Type Description policy_arn str The policy to attach to the user. user_id str The ID of the user to attach the policy to. user_name str The name of the user to attach the policy to. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process Principal dataclass Principal(principal_type: cloudrail.knowledge.context.aws.iam.principal.PrincipalType, principal_values: List[str]) PrincipalType An enumeration. Role Attributes: Name Type Description role_name str THe name of the role. instance_profile_ids List[str] The IDs of the instance profiles the role is used in. role_id str The role's ID. permission_boundary_arn Optional[str] The ARN of the permission boundary if one applies (may be None). creation_date str The date of creation of the role. arn The ARN of the role. assume_role_policy AssumeRolePolicy The assume role policy. policy_evaluation_result_map Dict[str, PolicyEvaluation] A caching of the policy evaluation for the role. last_used_date RoleLastUsed Last date the role was used (comes from an API call made to the AWS IAM API). custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process RoleLastUsed Attributes: Name Type Description role_name str The nameo f the role. arn str The ARN of the role. last_used_date str The last date the role was used in. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"iam"},{"location":"context/aws/iam/index.html#sample-rules","text":"A few rules that use objects from this package: ec2_role_share_rule from typing import List , Dict from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType from cloudrail.knowledge.context.aws.ec2.ec2_instance import Ec2Instance from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext class Ec2RoleShareRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'ec2_role_share_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] ec2s : List [ Ec2Instance ] = env_context . ec2s profile_to_public_ec2 = {} for public_ec2 in ( x for x in ec2s if x . network_resource . is_inbound_public and x . iam_profile_id ): profile_to_public_ec2 [ public_ec2 . iam_profile_id ] = public_ec2 for private_ec2 in ( x for x in ec2s if not x . network_resource . is_inbound_public and x . iam_profile_id ): public_ec2 = profile_to_public_ec2 . get ( private_ec2 . iam_profile_id ) profile = private_ec2 . iam_role . get_friendly_name () \\ if private_ec2 . iam_role \\ else private_ec2 . iam_profile_id if public_ec2 : issues . append ( Issue ( f \"~Instance ` { public_ec2 . get_friendly_name () } `~. Instance is publicly exposed. \" f \"Instance uses IAM role ` { profile } `. \" f \"Private EC2 instance shares IAM role ` { profile } ` as well. \" f \"~Instance ` { private_ec2 . get_friendly_name () } `~\" , private_ec2 , private_ec2 . iam_role )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . ec2s ) car_iam_policy_control_in_iac_only from typing import List , Dict , Tuple , Union from cloudrail.knowledge.context.aws.account.account import Account from cloudrail.knowledge.context.aws.iam.iam_group import IamGroup from cloudrail.knowledge.context.aws.iam.iam_identity import IamIdentity from cloudrail.knowledge.context.aws.iam.iam_user import IamUser from cloudrail.knowledge.context.aws.iam.policy import InlinePolicy , ManagedPolicy from cloudrail.knowledge.context.mergeable import EntityOrigin from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureIamEntitiesPolicyManagedSolely ( AwsBaseRule ): def get_id ( self ) -> str : return 'car_iam_policy_control_in_iac_only' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for account in env_context . accounts : filtered_iam_entities = self . _filter_entities_by_account ( env_context . roles , account ) + \\ self . _filter_entities_by_account ( env_context . users , account ) + \\ self . _filter_entities_by_account ( env_context . groups , account ) for entity in filtered_iam_entities : affected_policies = self . _get_live_env_attached_policies ( entity ) for policy in affected_policies : issues . append ( Issue ( f '~` { policy . get_friendly_name () } `~. ' f 'is attached to { entity . get_type () } ` { entity . get_friendly_name () } `. ` { entity . get_friendly_name () } ` ' f 'is declared in infrastructure-as-code. The attachment of the policy was done outside of the code ' f '(for example, directly via the console)' , account , policy )) if isinstance ( entity , IamUser ): affected_groups = self . _get_group_attach_policies_aws ( entity ) for group , policies in affected_groups : policies_list_string = ', ' . join ([ policy . get_friendly_name () for policy in policies ]) issues . append ( Issue ( f ' { entity . get_type () } ` { entity . get_friendly_name () } ` is declared in infrastructure-as-code. ' f 'The attachment of policy(s) ` { policies_list_string } ` to it was done outside the code ' f '(for example, directly via the console), by adding it to the group ` { group . get_friendly_name () } `.' , account , group )) return issues @staticmethod def filter_non_iac_managed_issues () -> bool : return False def _filter_entities_by_account ( self , entities : List [ IamIdentity ], account : Account ) -> List [ IamIdentity ]: return [ entity for entity in entities if entity . account == account . account and self . _are_there_existing_tf_entities ( entity )] @staticmethod def _are_there_existing_tf_entities ( entity : IamIdentity ) -> bool : return entity . is_managed_by_iac and not entity . is_new_resource () and \\ any (( isinstance ( policy , ManagedPolicy ) and any ( pao . get ( policy . get_name ()) == EntityOrigin . TERRAFORM for pao in entity . get_policies_attach_origin_maps ()) or ( isinstance ( policy , InlinePolicy ) and policy . is_managed_by_iac )) for policy in entity . get_policies ()) @staticmethod def _get_live_env_attached_policies ( entity : IamIdentity ) -> List [ Union [ ManagedPolicy , InlinePolicy ]]: affected_policies = [] for policy in entity . permissions_policies : if ( isinstance ( policy , ManagedPolicy ) and any ( pao . get ( policy . get_name ()) == EntityOrigin . LIVE_ENV for pao in entity . get_policies_attach_origin_maps ())): affected_policies . append ( policy ) elif isinstance ( policy , InlinePolicy ) and not policy . is_managed_by_iac : affected_policies . append ( policy ) return affected_policies def _get_group_attach_policies_aws ( self , user : IamUser ) -> List [ Tuple [ IamGroup , List [ Union [ ManagedPolicy , InlinePolicy ]]]]: issues_list = [] for group in user . groups : affected_policies = self . _get_live_env_attached_policies ( group ) if affected_policies : issues_list . append (( group , affected_policies )) return issues_list def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . accounts and environment_context . get_all_iam_entities ()) iam_priv_escalation_policy from typing import Dict , List , Set from cloudrail.knowledge.context.aws.iam.iam_identity import IamIdentity from cloudrail.knowledge.context.aws.iam.policy import Policy from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType from cloudrail.knowledge.utils.action_utils import is_combo_escalation_permissions_match , attribute_match , LAMBDA_UPDATE_ACTION , EC2_RUN_INSTANCE_ACTION , \\ LAMBDA_INVOKE_FUNCTION_ACTION , LAMBDA_CREATE_EVENT_ACTION class IamPrivilegeEscalationPolicyRule ( AwsBaseRule ): EVIDENCE_TEMPLATE : str = \"~` {} `~. is applied to ` {} `. {}{} \" def __init__ ( self ) -> None : super () . __init__ () self . issues_list : List [ Issue ] = [] def get_id ( self ) -> str : return \"iam_priv_escalation_policy\" def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: for iam_entity in env_context . get_all_iam_entities (): self . _add_issues_by_iam_entity ( iam_entity ) return self . issues_list def _add_issues_by_iam_entity ( self , iam_entity : IamIdentity ): if iam_entity . policy_to_escalation_actions_map : all_policies_esc_actions : Set [ str ] = { esc_action for esc_actions in iam_entity . policy_to_escalation_actions_map . values () for esc_action in esc_actions } uuid_to_policy_map : Dict [ str , Policy ] = { policy . uuid : policy for policy in iam_entity . permissions_policies } if is_combo_escalation_permissions_match ( all_policies_esc_actions ): policies : List [ Policy ] = [ uuid_to_policy_map [ policy_uuid ] for policy_uuid in iam_entity . policy_to_escalation_actions_map . keys ()] self . _handle_issues ( iam_entity , policies , all_policies_esc_actions ) def _handle_issues ( self , iam_entity : IamIdentity , policies : List [ Policy ], esc_action_list : Set [ str ]): specific_evidence : str = self . _get_evidence_str ( esc_action_list ) multiple_policies_section : str = self . _get_multiple_policies_evidence_section ( policies ) policy : Policy = policies [ 0 ] if multiple_policies_section : specific_evidence = ' ' + specific_evidence evidence : str = self . EVIDENCE_TEMPLATE . format ( policy . get_friendly_name (), iam_entity . get_arn (), multiple_policies_section , specific_evidence ) if policy . is_managed_by_iac : self . issues_list . append ( Issue ( evidence , policy , policy )) else : self . issues_list . append ( Issue ( evidence , iam_entity , iam_entity )) @staticmethod def _get_multiple_policies_evidence_section ( policies : List [ Policy ]) -> str : multiple_policies_section : str = \"\" if len ( policies ) > 1 : multiple_policies_section = \"in conjunction with \" + \\ ', ' . join ([ f \"` { policy . get_friendly_name () } `\" for policy in policies ]) return multiple_policies_section @classmethod def _get_evidence_str ( cls , esc_action_list : Set [ str ]): if cls . _is_specific_evidence ( esc_action_list , LAMBDA_UPDATE_ACTION ): return \"`lambda:UpdateFunctionCode` allows a hacker to run their code under the lambda permission\" elif cls . _is_specific_evidence ( esc_action_list , EC2_RUN_INSTANCE_ACTION ): return \"`iam:PassRole` and `ec2:RunInstances` allows a hacker to run an EC2 instance with a role they choose\" elif cls . _is_specific_evidence ( esc_action_list , LAMBDA_INVOKE_FUNCTION_ACTION ) or \\ cls . _is_specific_evidence ( esc_action_list , LAMBDA_CREATE_EVENT_ACTION ): return f \" { str ( esc_action_list ) } allows a hacker to trigger a Lambda function with a role they choose\" else : return f \"granting the problematic permissions ` { str ( esc_action_list ) } ` which can allow for privilege escalation\" @staticmethod def _is_specific_evidence ( esc_action_list : Set [ str ], action : str ): return \"*\" not in esc_action_list and any ( attribute_match ( esc_action , action ) for esc_action in esc_action_list ) def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . get_all_iam_entities ()) non_car_iam_no_human_users from typing import Dict , List from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class IamNoHumanUsersRule ( AwsBaseRule ): def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues_list : List [ Issue ] = [] for user in env_context . users : if any ( user . name == login_profile . name and user . account == login_profile . account for login_profile in env_context . users_login_profile ): issues_list . append ( Issue ( f 'The { user . get_type () } ` { user . get_friendly_name () } ` has console access, ' f 'and so is considered human' , user , user )) return issues_list def get_id ( self ) -> str : return \"non_car_iam_no_human_users\" def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . users and environment_context . users_login_profile ) not_car_access_analyzer_validation_error_and_security from abc import ABC , abstractmethod from typing import List , Dict , Set from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class AccessAnalyzerValidationBaseRule ( AwsBaseRule , ABC ): def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . get_iac_managed_policies ()) def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues = [] for policy in env_context . get_iac_managed_policies (): evidence = self . _create_evidence_from_findings ( policy . access_analyzer_findings ) if evidence : issues . append ( Issue ( evidence , policy , policy )) return issues def _create_evidence_from_findings ( self , findings ): evidences = [] for finding in findings : evidence = '' if finding . get ( 'findingType' ) in self . _get_violated_finding_types (): if finding . get ( 'locations' ): start = finding [ 'locations' ][ 0 ][ 'span' ][ 'start' ] line = start [ 'line' ] column = start [ 'column' ] prefix = f 'Line { line } , Col { column } :' else : prefix = 'Finding Without Specific Location In Policy:' finding_details = finding [ 'findingDetails' ] learn_more = finding [ 'learnMoreLink' ] evidence += f '~ { prefix } ~. { finding_details } See { learn_more } ' evidences . append ( evidence ) return '. ' . join ( evidences ) @abstractmethod def _get_violated_finding_types ( self ) -> Set [ str ]: pass","title":"Sample rules"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_group.IamGroup","text":"Attributes: Name Type Description name str The name of the IAM Group. group_id str The ID of the group.","title":"IamGroup"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_group.IamGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_group.IamGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_group_membership.IamGroupMembership","text":"Attributes: Name Type Description name str The name of the group membership. group str The group the users belong to. users List[str] The list of users who are members of the designated group.","title":"IamGroupMembership"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_group_membership.IamGroupMembership.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_group_membership.IamGroupMembership.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_identity.IamIdentity","text":"Attributes: Name Type Description qualified_arn str A Cloudrail-caculated ARN for the role that ensures it's the same whether the role came from infrastructure-as-code (such as Terraform) or the live AWS environment. arn str The ARN of the IAM identity. permissions_policies List[Union[ManagedPolicy, InlinePolicy]] One or more policies used to give the IAM entity permissions to take certain actions. permission_boundary Optional[Policy] The permission boundary limiting the IAM entity's permissions.","title":"IamIdentity"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_identity.IamIdentity.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_identity.IamIdentity.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_instance_profile.IamInstanceProfile","text":"Attributes: Name Type Description role_name str The name of the role. iam_instance_profile_id str The ID of the instance profile. ec2_instance_data Ec2Instance The Ec2Instance using this profile.","title":"IamInstanceProfile"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_instance_profile.IamInstanceProfile.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_instance_profile.IamInstanceProfile.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_password_policy.IamPasswordPolicy","text":"Attributes: Name Type Description min_pass_length int The minimum length required for passwords. require_low_case_characters bool True if lower cases characters are required according to the policy. require_upper_case_characters bool True if upper cases characters are required according to the policy. require_numbers bool True if number characters are required according to the policy. require_symbols bool True if symbol characters are required according to the policy. allow_users_to_change_pass bool True if users can change their password. max_pass_age int The maximum age of a password before it needs to be replaced. password_reuse_prevention int Number of passwords kept in history that cannot be repeated.","title":"IamPasswordPolicy"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_password_policy.IamPasswordPolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_password_policy.IamPasswordPolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_policy_attachment.IamPolicyAttachment","text":"Attributes: Name Type Description policy_arn str The ARN of the policy to attach. users Optional[List] The list of users to attach the policy to, may be empty or None. roles Optional[List] The list of roles to attach the policy to, may be empty or None. groups Optional[List] The list of groups to attach the policy to, may be empty or None.","title":"IamPolicyAttachment"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_policy_attachment.IamPolicyAttachment.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_policy_attachment.IamPolicyAttachment.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_user.IamUser","text":"Attributes: Name Type Description name str The name of the user. user_id str The ID of the user. groups List[IamGroup] The groups the user belongs to. groups_attach_origin_map List[Dict] A cache map used to \"remember\" the origin of user-to-group attachments (whether from live account, IaC, etc.).","title":"IamUser"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_user.IamUser.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_user.IamUser.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_user_group_membership.IamUserGroupMembership","text":"Attributes: Name Type Description user str The user the membership is focused on. groups List[str] The groups the user should be a member of.","title":"IamUserGroupMembership"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_user_group_membership.IamUserGroupMembership.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_user_group_membership.IamUserGroupMembership.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_users_login_profile.IamUsersLoginProfile","text":"Attributes: Name Type Description name str The name of the user the login profile is for.","title":"IamUsersLoginProfile"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_users_login_profile.IamUsersLoginProfile.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.iam_users_login_profile.IamUsersLoginProfile.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.AssumeRolePolicy","text":"Attributes: Name Type Description role_name str The name of the role that uses this policy. role_arn str The ARN of the role that uses this policy. is_allowing_external_assume bool An indication on if this policy can be assumed by a resource outside of this policy's account.","title":"AssumeRolePolicy"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.AssumeRolePolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.AssumeRolePolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.InlinePolicy","text":"","title":"InlinePolicy"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.InlinePolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.InlinePolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.ManagedPolicy","text":"","title":"ManagedPolicy"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.ManagedPolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.ManagedPolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.Policy","text":"Attributes: Name Type Description statements List[PolicyStatement] The list of statements in the policy. uuid str A randomly generated uuid for the policy (ignore, for internal use). raw_document The raw JSON of the policy. access_analyzer_findings The results from running IAM Access Analyzer's policy validation API on this policy's JSON. policy_type The type of the policy (identity, resource, SCP).","title":"Policy"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.Policy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.Policy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.PolicyType","text":"An enumeration.","title":"PolicyType"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.S3AccessPointPolicy","text":"","title":"S3AccessPointPolicy"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.S3AccessPointPolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.S3AccessPointPolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.S3Policy","text":"","title":"S3Policy"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.S3Policy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy.S3Policy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy_group_attachment.PolicyGroupAttachment","text":"Attributes: Name Type Description policy_arn str The policy to attach to the group. group_id str The ID of the group to attach the policy to. group_name str The name of the group to attach the policy to.","title":"PolicyGroupAttachment"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy_group_attachment.PolicyGroupAttachment.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy_group_attachment.PolicyGroupAttachment.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy_role_attachment.PolicyRoleAttachment","text":"Attributes: Name Type Description policy_arn str The policy to attach to the role. role_name str The name of the role to attach the policy to.","title":"PolicyRoleAttachment"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy_role_attachment.PolicyRoleAttachment.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy_role_attachment.PolicyRoleAttachment.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy_statement.PolicyStatement","text":"Attributes: Name Type Description effect The effect of the statement (Allow / Deny). actions The actions covered by the statements. resources The resources covered by the statement. principal The principal(s) included. statement_id The id of the statement. condition_block List of conditions included in the statement, or None if there aren't any. policy The policy the statement belong to, if it does.","title":"PolicyStatement"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy_statement.StatementCondition","text":"StatementCondition(operator: str, key: str, values: List[str])","title":"StatementCondition"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy_statement.StatementEffect","text":"An enumeration.","title":"StatementEffect"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy_user_attachment.PolicyUserAttachment","text":"Attributes: Name Type Description policy_arn str The policy to attach to the user. user_id str The ID of the user to attach the policy to. user_name str The name of the user to attach the policy to.","title":"PolicyUserAttachment"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy_user_attachment.PolicyUserAttachment.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.policy_user_attachment.PolicyUserAttachment.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.principal.Principal","text":"Principal(principal_type: cloudrail.knowledge.context.aws.iam.principal.PrincipalType, principal_values: List[str])","title":"Principal"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.principal.PrincipalType","text":"An enumeration.","title":"PrincipalType"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.role.Role","text":"Attributes: Name Type Description role_name str THe name of the role. instance_profile_ids List[str] The IDs of the instance profiles the role is used in. role_id str The role's ID. permission_boundary_arn Optional[str] The ARN of the permission boundary if one applies (may be None). creation_date str The date of creation of the role. arn The ARN of the role. assume_role_policy AssumeRolePolicy The assume role policy. policy_evaluation_result_map Dict[str, PolicyEvaluation] A caching of the policy evaluation for the role. last_used_date RoleLastUsed Last date the role was used (comes from an API call made to the AWS IAM API).","title":"Role"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.role.Role.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.role.Role.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.role_last_used.RoleLastUsed","text":"Attributes: Name Type Description role_name str The nameo f the role. arn str The ARN of the role. last_used_date str The last date the role was used in.","title":"RoleLastUsed"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.role_last_used.RoleLastUsed.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/iam/index.html#cloudrail.knowledge.context.aws.iam.role_last_used.RoleLastUsed.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/kinesis/index.html","text":"KinesisFirehoseStream Attributes: Name Type Description stream_name str The name of the Kinesis Firehose Stream. stream_arn str The ARN of the Kinesis Firehose Stream. encrypted_at_rest bool True if the stream is set to be encrypted. es_domain_arn Optional[str] The ARN of the related ElasticSearch Domain, if any. es_vpc_config Optional[NetworkConfiguration] The VPC configuration of the ElasticSearch Domain related to this stream, if any. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process KinesisStream Attributes: Name Type Description stream_name str The name of the Kinesis Stream. stream_arn str The ARN of the Kinesis Stream. encrypted_at_rest bool True if the stream is set to be encrypted at rest. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"kinesis"},{"location":"context/aws/kinesis/index.html#cloudrail.knowledge.context.aws.kinesis.kinesis_firehose_stream.KinesisFirehoseStream","text":"Attributes: Name Type Description stream_name str The name of the Kinesis Firehose Stream. stream_arn str The ARN of the Kinesis Firehose Stream. encrypted_at_rest bool True if the stream is set to be encrypted. es_domain_arn Optional[str] The ARN of the related ElasticSearch Domain, if any. es_vpc_config Optional[NetworkConfiguration] The VPC configuration of the ElasticSearch Domain related to this stream, if any.","title":"KinesisFirehoseStream"},{"location":"context/aws/kinesis/index.html#cloudrail.knowledge.context.aws.kinesis.kinesis_firehose_stream.KinesisFirehoseStream.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/kinesis/index.html#cloudrail.knowledge.context.aws.kinesis.kinesis_firehose_stream.KinesisFirehoseStream.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/kinesis/index.html#cloudrail.knowledge.context.aws.kinesis.kinesis_stream.KinesisStream","text":"Attributes: Name Type Description stream_name str The name of the Kinesis Stream. stream_arn str The ARN of the Kinesis Stream. encrypted_at_rest bool True if the stream is set to be encrypted at rest.","title":"KinesisStream"},{"location":"context/aws/kinesis/index.html#cloudrail.knowledge.context.aws.kinesis.kinesis_stream.KinesisStream.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/kinesis/index.html#cloudrail.knowledge.context.aws.kinesis.kinesis_stream.KinesisStream.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/kms/index.html","text":"KmsAlias Attributes: Name Type Description alias_name str The alias itself. target_key_id str The ID of the KMS key the alias is for. alias_arn str The ARN of the lias. key_manager The Key Manager of this key (customer, or AWS). custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process KmsKey Attributes: Name Type Description key_id str The ID of the key. arn str The ARN of the key. key_manager KeyManager The Key Manager of this key (customer, or AWS). policy KmsKeyPolicy The resource policy of the key, if any is defined. alias_data KmsAlias The key's alias, if any. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process KeyManager Enum AWS - key is managed by AWS CUSTOMER - key is managed by the Customer NONE - key is unmanaged KmsKeyPolicy Attributes: Name Type Description key_id str The ID of the key. policy_statements The statements of the policy. raw_document The raw JSON of the policy. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"kms"},{"location":"context/aws/kms/index.html#cloudrail.knowledge.context.aws.kms.kms_alias.KmsAlias","text":"Attributes: Name Type Description alias_name str The alias itself. target_key_id str The ID of the KMS key the alias is for. alias_arn str The ARN of the lias. key_manager The Key Manager of this key (customer, or AWS).","title":"KmsAlias"},{"location":"context/aws/kms/index.html#cloudrail.knowledge.context.aws.kms.kms_alias.KmsAlias.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/kms/index.html#cloudrail.knowledge.context.aws.kms.kms_alias.KmsAlias.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/kms/index.html#cloudrail.knowledge.context.aws.kms.kms_key.KmsKey","text":"Attributes: Name Type Description key_id str The ID of the key. arn str The ARN of the key. key_manager KeyManager The Key Manager of this key (customer, or AWS). policy KmsKeyPolicy The resource policy of the key, if any is defined. alias_data KmsAlias The key's alias, if any.","title":"KmsKey"},{"location":"context/aws/kms/index.html#cloudrail.knowledge.context.aws.kms.kms_key.KmsKey.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/kms/index.html#cloudrail.knowledge.context.aws.kms.kms_key.KmsKey.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/kms/index.html#cloudrail.knowledge.context.aws.kms.kms_key_manager.KeyManager","text":"Enum AWS - key is managed by AWS CUSTOMER - key is managed by the Customer NONE - key is unmanaged","title":"KeyManager"},{"location":"context/aws/kms/index.html#cloudrail.knowledge.context.aws.kms.kms_key_policy.KmsKeyPolicy","text":"Attributes: Name Type Description key_id str The ID of the key. policy_statements The statements of the policy. raw_document The raw JSON of the policy.","title":"KmsKeyPolicy"},{"location":"context/aws/kms/index.html#cloudrail.knowledge.context.aws.kms.kms_key_policy.KmsKeyPolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/kms/index.html#cloudrail.knowledge.context.aws.kms.kms_key_policy.KmsKeyPolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/lambda_/index.html","text":"Sample rules A few rules that use objects from this package: s3_lambda_indirect_exposure from typing import List , Dict from cloudrail.knowledge.context.aws.apigateway.rest_api_gw import RestApiGw from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class S3BucketLambdaIndirectExposureRule ( AwsBaseRule ): def get_id ( self ) -> str : return 's3_lambda_indirect_exposure' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for s3_bucket in env_context . s3_buckets : for agw_method in s3_bucket . exposed_to_agw_methods : if not self . _is_api_gateway_public ( agw_method . rest_api_id , env_context . rest_api_gw ): continue issues . append ( Issue ( evidence = f \"The S3 Bucket ` { s3_bucket . get_friendly_name () } `. is exposed via the execution role in \" f \"Lambda Function ` { agw_method . integration . lambda_func_integration . get_friendly_name () } `. \" f \"which can be invoked by public API Gateway ` { agw_method . get_friendly_name () } `\" , exposed = s3_bucket , violating = agw_method . integration . lambda_func_integration )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . s3_buckets and environment_context . lambda_function_list and environment_context . api_gateway_methods ) @staticmethod def _is_api_gateway_public ( rest_api_gw_id : str , api_gateways : List [ RestApiGw ]) -> bool : for api_gateway in api_gateways : if api_gateway . rest_api_gw_id == rest_api_gw_id : return api_gateway . is_public raise Exception ( f 'Rest API Gateway { rest_api_gw_id } could not be found' ) LambdaAlias Attributes: Name Type Description arn str The ARN of the Lambda Alias. name str The name of the alias. function_name_or_arn str The name of the Lambda function or its ARN. function_version str The version of the Lambda function this alias is targeting. description str The description of the alias. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process LambdaFunction Attributes: Name Type Description arn str The ARN of the function. function_name str The name of the function. lambda_func_version str The version of the function. role_arn The ARN of the role the Lambda Function is set to use. handler str The function handler in the Lambda code. runtime str The runtime used with the specific Lambda Function. vpc_config NetworkConfiguration The VPC configuration of the Lambda Function, if one was set. log_group CloudWatchLogGroup The matching log group associated with the Lambda Function. xray_tracing_enabled bool Indication if X-Ray tracing is enabled for incoming requests. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process LambdaPolicyStatements Attributes: Name Type Description function_name str The name of the Lambda Function the policy statements are for. statements List[PolicyStatement] The statements themselves. qualifier str A Lambda Function may have a qualified set, this will be it (or None). lambda_func_arn str The ARN of the Lambda Funciton these policy statements are for. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"lambda_"},{"location":"context/aws/lambda_/index.html#sample-rules","text":"A few rules that use objects from this package: s3_lambda_indirect_exposure from typing import List , Dict from cloudrail.knowledge.context.aws.apigateway.rest_api_gw import RestApiGw from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class S3BucketLambdaIndirectExposureRule ( AwsBaseRule ): def get_id ( self ) -> str : return 's3_lambda_indirect_exposure' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for s3_bucket in env_context . s3_buckets : for agw_method in s3_bucket . exposed_to_agw_methods : if not self . _is_api_gateway_public ( agw_method . rest_api_id , env_context . rest_api_gw ): continue issues . append ( Issue ( evidence = f \"The S3 Bucket ` { s3_bucket . get_friendly_name () } `. is exposed via the execution role in \" f \"Lambda Function ` { agw_method . integration . lambda_func_integration . get_friendly_name () } `. \" f \"which can be invoked by public API Gateway ` { agw_method . get_friendly_name () } `\" , exposed = s3_bucket , violating = agw_method . integration . lambda_func_integration )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . s3_buckets and environment_context . lambda_function_list and environment_context . api_gateway_methods ) @staticmethod def _is_api_gateway_public ( rest_api_gw_id : str , api_gateways : List [ RestApiGw ]) -> bool : for api_gateway in api_gateways : if api_gateway . rest_api_gw_id == rest_api_gw_id : return api_gateway . is_public raise Exception ( f 'Rest API Gateway { rest_api_gw_id } could not be found' )","title":"Sample rules"},{"location":"context/aws/lambda_/index.html#cloudrail.knowledge.context.aws.lambda_.lambda_alias.LambdaAlias","text":"Attributes: Name Type Description arn str The ARN of the Lambda Alias. name str The name of the alias. function_name_or_arn str The name of the Lambda function or its ARN. function_version str The version of the Lambda function this alias is targeting. description str The description of the alias.","title":"LambdaAlias"},{"location":"context/aws/lambda_/index.html#cloudrail.knowledge.context.aws.lambda_.lambda_alias.LambdaAlias.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/lambda_/index.html#cloudrail.knowledge.context.aws.lambda_.lambda_alias.LambdaAlias.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/lambda_/index.html#cloudrail.knowledge.context.aws.lambda_.lambda_function.LambdaFunction","text":"Attributes: Name Type Description arn str The ARN of the function. function_name str The name of the function. lambda_func_version str The version of the function. role_arn The ARN of the role the Lambda Function is set to use. handler str The function handler in the Lambda code. runtime str The runtime used with the specific Lambda Function. vpc_config NetworkConfiguration The VPC configuration of the Lambda Function, if one was set. log_group CloudWatchLogGroup The matching log group associated with the Lambda Function. xray_tracing_enabled bool Indication if X-Ray tracing is enabled for incoming requests.","title":"LambdaFunction"},{"location":"context/aws/lambda_/index.html#cloudrail.knowledge.context.aws.lambda_.lambda_function.LambdaFunction.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/lambda_/index.html#cloudrail.knowledge.context.aws.lambda_.lambda_function.LambdaFunction.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/lambda_/index.html#cloudrail.knowledge.context.aws.lambda_.lambda_policy_statements.LambdaPolicyStatements","text":"Attributes: Name Type Description function_name str The name of the Lambda Function the policy statements are for. statements List[PolicyStatement] The statements themselves. qualifier str A Lambda Function may have a qualified set, this will be it (or None). lambda_func_arn str The ARN of the Lambda Funciton these policy statements are for.","title":"LambdaPolicyStatements"},{"location":"context/aws/lambda_/index.html#cloudrail.knowledge.context.aws.lambda_.lambda_policy_statements.LambdaPolicyStatements.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/lambda_/index.html#cloudrail.knowledge.context.aws.lambda_.lambda_policy_statements.LambdaPolicyStatements.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/mq/index.html","text":"MqBroker Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. broker_name str The MQ broker resource name. arn str The ARN of the MQ broker resource. broker_id str The ID of the MQ broker resource. deployment_mode str Deployment mode of the MQ broker. vpc_id str The VPC ID in which the MQ broker is deployed. vpc_config Optional[NetworkConfiguration] Networking information used by the resource. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"mq"},{"location":"context/aws/mq/index.html#cloudrail.knowledge.context.aws.mq.mq_broker.MqBroker","text":"Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. broker_name str The MQ broker resource name. arn str The ARN of the MQ broker resource. broker_id str The ID of the MQ broker resource. deployment_mode str Deployment mode of the MQ broker. vpc_id str The VPC ID in which the MQ broker is deployed. vpc_config Optional[NetworkConfiguration] Networking information used by the resource.","title":"MqBroker"},{"location":"context/aws/mq/index.html#cloudrail.knowledge.context.aws.mq.mq_broker.MqBroker.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/mq/index.html#cloudrail.knowledge.context.aws.mq.mq_broker.MqBroker.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/neptune/index.html","text":"Sample rules A few rules that use objects from this package: public_access_db_neptune from typing import Dict , List from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessDbNeptuneRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'public_access_db_neptune' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for neptune_cluster in env_context . neptune_clusters : for neptune_instance in neptune_cluster . cluster_instances : security_group = neptune_instance . security_group_allowing_public_access if security_group : issues . append ( Issue ( f '~Internet~. ' f \"Instance ` { neptune_instance . get_friendly_name () } ` is \" f \"in { neptune_cluster . get_type () } ` { neptune_cluster . get_friendly_name () } `. \" f \" { neptune_instance . get_type () } is on { neptune_instance . network_resource . vpc . get_type () } \" f \" ` { neptune_instance . network_resource . vpc . get_friendly_name () } `. \" f \" { neptune_instance . get_type () } uses subnet(s) \" f \"` { ', ' . join ([ x . get_friendly_name () for x in neptune_instance . network_resource . subnets ]) } `. \" f \" { neptune_instance . get_type () } is reachable from the internet due to subnet(s) and route table(s). \" f \"Subnet uses Network ACL(s) \" f \"` { ', ' . join ({ x . network_acl . get_friendly_name () for x in neptune_instance . network_resource . subnets }) } `. \" f \"Network ACL's and security group(s) allows the { neptune_instance . get_type () } configured ports. \" f '~ { neptune_instance . get_type () } ~' , neptune_instance , security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . neptune_clusters ) NeptuneCluster Attributes: Name Type Description cluster_identifier str The identifier of the cluster. arn str The ARN of the cluster. encrypted_at_rest bool True if the cluster is configured to be encrypted at rest. port int The port the cluster is listening to. db_subnet_group_name str The subnet group's name. security_group_ids List[str] The IDs of the securiry groups used by the cluster, if any. cluster_id str The ID of the cluster. kms_key str The KMS key used for encryption, if any. kms_data Optional[KmsKey] A pointer to the KMS key, if one is used. is_in_default_vpc bool True if the cluster is in the default VPC. cluster_instances List[NeptuneInstance] The instances of the cluster. cloudwatch_logs_exports Optional[list] A list of the log types this Neptune cluster is configured to export to Cloudwatch Logs. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process NeptuneInstance Attributes: Name Type Description name The name of the instance. arn str The ARN of the instance. port int The port the instance is accessible through. cluster_identifier str The ID of the cluster it belongs to. publicly_accessible True if the instance is set to publicly accessible. instance_identifier str The identifier of the instance. security_group_allowing_public_access Optional[SecurityGroup] A security group that allows access from the internet. This value will be None when this resource is not accessible from the internet. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"neptune"},{"location":"context/aws/neptune/index.html#sample-rules","text":"A few rules that use objects from this package: public_access_db_neptune from typing import Dict , List from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessDbNeptuneRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'public_access_db_neptune' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for neptune_cluster in env_context . neptune_clusters : for neptune_instance in neptune_cluster . cluster_instances : security_group = neptune_instance . security_group_allowing_public_access if security_group : issues . append ( Issue ( f '~Internet~. ' f \"Instance ` { neptune_instance . get_friendly_name () } ` is \" f \"in { neptune_cluster . get_type () } ` { neptune_cluster . get_friendly_name () } `. \" f \" { neptune_instance . get_type () } is on { neptune_instance . network_resource . vpc . get_type () } \" f \" ` { neptune_instance . network_resource . vpc . get_friendly_name () } `. \" f \" { neptune_instance . get_type () } uses subnet(s) \" f \"` { ', ' . join ([ x . get_friendly_name () for x in neptune_instance . network_resource . subnets ]) } `. \" f \" { neptune_instance . get_type () } is reachable from the internet due to subnet(s) and route table(s). \" f \"Subnet uses Network ACL(s) \" f \"` { ', ' . join ({ x . network_acl . get_friendly_name () for x in neptune_instance . network_resource . subnets }) } `. \" f \"Network ACL's and security group(s) allows the { neptune_instance . get_type () } configured ports. \" f '~ { neptune_instance . get_type () } ~' , neptune_instance , security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . neptune_clusters )","title":"Sample rules"},{"location":"context/aws/neptune/index.html#cloudrail.knowledge.context.aws.neptune.neptune_cluster.NeptuneCluster","text":"Attributes: Name Type Description cluster_identifier str The identifier of the cluster. arn str The ARN of the cluster. encrypted_at_rest bool True if the cluster is configured to be encrypted at rest. port int The port the cluster is listening to. db_subnet_group_name str The subnet group's name. security_group_ids List[str] The IDs of the securiry groups used by the cluster, if any. cluster_id str The ID of the cluster. kms_key str The KMS key used for encryption, if any. kms_data Optional[KmsKey] A pointer to the KMS key, if one is used. is_in_default_vpc bool True if the cluster is in the default VPC. cluster_instances List[NeptuneInstance] The instances of the cluster. cloudwatch_logs_exports Optional[list] A list of the log types this Neptune cluster is configured to export to Cloudwatch Logs.","title":"NeptuneCluster"},{"location":"context/aws/neptune/index.html#cloudrail.knowledge.context.aws.neptune.neptune_cluster.NeptuneCluster.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/neptune/index.html#cloudrail.knowledge.context.aws.neptune.neptune_cluster.NeptuneCluster.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/neptune/index.html#cloudrail.knowledge.context.aws.neptune.neptune_instance.NeptuneInstance","text":"Attributes: Name Type Description name The name of the instance. arn str The ARN of the instance. port int The port the instance is accessible through. cluster_identifier str The ID of the cluster it belongs to. publicly_accessible True if the instance is set to publicly accessible. instance_identifier str The identifier of the instance. security_group_allowing_public_access Optional[SecurityGroup] A security group that allows access from the internet. This value will be None when this resource is not accessible from the internet.","title":"NeptuneInstance"},{"location":"context/aws/neptune/index.html#cloudrail.knowledge.context.aws.neptune.neptune_instance.NeptuneInstance.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/neptune/index.html#cloudrail.knowledge.context.aws.neptune.neptune_instance.NeptuneInstance.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/networking_config/index.html","text":"Sample rules A few rules that use objects from this package: disallow_default_vpc from typing import List , Dict from cloudrail.knowledge.context.aws.networking_config.network_entity import NetworkEntity from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class DisallowResourcesInDefaultVpcRule ( AwsBaseRule ): def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] network_entity_list : List [ NetworkEntity ] = env_context . get_all_network_entities () for entity in network_entity_list : if entity . network_resource . vpc is not None and entity . network_resource . vpc . is_default : # some resources can be out of vpc issues . append ( Issue ( self . _format_evidence ( entity . get_friendly_name ()), entity , entity )) return issues def get_id ( self ) -> str : return \"disallow_default_vpc\" @staticmethod def _format_evidence ( entity : str ) -> str : return f \"~Default VPC~. ` { entity } ` is defined within the default VPC.\" def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . get_all_network_entities ()) NetworkEntity This class is the parent of all resources that have a network connection. Attributes: Name Type Description name str Name of the network entity. network_resource NetworkResource Networking information of the entity. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"networking_config"},{"location":"context/aws/networking_config/index.html#sample-rules","text":"A few rules that use objects from this package: disallow_default_vpc from typing import List , Dict from cloudrail.knowledge.context.aws.networking_config.network_entity import NetworkEntity from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class DisallowResourcesInDefaultVpcRule ( AwsBaseRule ): def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] network_entity_list : List [ NetworkEntity ] = env_context . get_all_network_entities () for entity in network_entity_list : if entity . network_resource . vpc is not None and entity . network_resource . vpc . is_default : # some resources can be out of vpc issues . append ( Issue ( self . _format_evidence ( entity . get_friendly_name ()), entity , entity )) return issues def get_id ( self ) -> str : return \"disallow_default_vpc\" @staticmethod def _format_evidence ( entity : str ) -> str : return f \"~Default VPC~. ` { entity } ` is defined within the default VPC.\" def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . get_all_network_entities ())","title":"Sample rules"},{"location":"context/aws/networking_config/index.html#cloudrail.knowledge.context.aws.networking_config.network_entity.NetworkEntity","text":"This class is the parent of all resources that have a network connection. Attributes: Name Type Description name str Name of the network entity. network_resource NetworkResource Networking information of the entity.","title":"NetworkEntity"},{"location":"context/aws/networking_config/index.html#cloudrail.knowledge.context.aws.networking_config.network_entity.NetworkEntity.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/networking_config/index.html#cloudrail.knowledge.context.aws.networking_config.network_entity.NetworkEntity.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/rds/index.html","text":"Sample rules A few rules that use objects from this package: public_access_db_rds_rule from typing import Dict , List from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessDbRdsRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'public_access_db_rds_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for rds_cluster in env_context . rds_clusters : for rds_instance in rds_cluster . cluster_instances : security_group = rds_instance . security_group_allowing_public_access if security_group : issues . append ( Issue ( f '~Internet~. ' f \"Instance ` { rds_instance . get_friendly_name () } ` is \" f \"in { rds_cluster . get_type () } ` { rds_cluster . get_friendly_name () } `. \" f \" { rds_instance . get_type () } is on { rds_instance . network_resource . vpc . get_type () } \" f \" ` { rds_instance . network_resource . vpc . get_friendly_name () } `. \" f \" { rds_instance . get_type () } uses subnet(s) \" f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . security_groups ]) } `. \" f \" { rds_instance . get_type () } is reachable from the internet due to subnet(s) and route table(s). \" f \"Subnet uses Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \"Network ACL's and security group(s) allows the RDS configured ports. \" f '~ { rds_instance . get_type () } ~' , rds_cluster , security_group )) for rds_instance in ( x for x in env_context . rds_instances if x . db_cluster_id is None ): security_group = rds_instance . security_group_allowing_public_access if security_group : issues . append ( Issue ( f \"~Internet~. { rds_instance . get_type () } ` { rds_instance . get_friendly_name () } ` \" f \"is on { rds_instance . network_resource . vpc . get_type () } \" f \"` { rds_instance . network_resource . vpc . get_friendly_name () } `. \" f 'instance uses security groups ' f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . security_groups ]) } ` . \" f \" { rds_instance . get_type () } uses the subnets \" f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \" { rds_instance . get_type () } is reachable from the internet due to subnet(s) and route table(s). \" f \"Subnet uses Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \"Network ACL's and security group(s) allows the RDS configured ports. \" f \"~ { rds_instance . get_type () } ~\" , rds_instance , security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . rds_clusters or environment_context . rds_instances ) indirect_public_access_db_rds from typing import List , Dict , Optional from cloudrail.knowledge.context.aws.indirect_public_connection_data import IndirectPublicConnectionData from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class IndirectPublicAccessDbRds ( AwsBaseRule ): def get_id ( self ) -> str : return 'indirect_public_access_db_rds' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for rds_cluster in env_context . rds_clusters : for rds_instance in rds_cluster . cluster_instances : violation_info : Optional [ IndirectPublicConnectionData ] = rds_instance . indirect_public_connection_data if violation_info : issues . append ( Issue ( f \"~Internet~. \" f \"Instance resides in subnet(s) that are routable to internet gateway. Instance has public IP address.\" f \"Instance accepts incoming traffic on port 443. \" f \"~Instance ` { violation_info . target_eni . owner . get_friendly_name () } `~. \" f \" { rds_cluster . get_type () } ` { rds_cluster . get_friendly_name () } ` \" f \"is exposed due to { rds_instance . get_type () } ` { rds_instance . get_friendly_name () } `. \" f \" { rds_instance . get_type () } uses subnets \" f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \" { rds_instance . get_type () } \" f \"resides in same subnet as instance ` { violation_info . target_eni . owner . get_friendly_name () } `. \" f \" { rds_instance . get_type () } relies on Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \" { rds_instance . get_type () } also relies on security groups \" f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . security_groups ]) } `. \" f \" { rds_instance . get_type () } is accessible from instance within public subnet. \" f \"~ { rds_instance . get_type () } ` { rds_instance . get_friendly_name () } `~. \" , rds_cluster , violation_info . security_group )) for rds_instance in ( x for x in env_context . rds_instances if x . db_cluster_id is None ): violation_info : Optional [ IndirectPublicConnectionData ] = rds_instance . indirect_public_connection_data if violation_info : issues . append ( Issue ( f \"~Internet~. \" f \"Instance resides in subnet(s) that are routable to internet gateway. Instance has public IP address. \" f \"Instance accepts incoming traffic on port 443. \" f \"~Instance ` { violation_info . target_eni . owner . get_friendly_name () } `~. \" f \" { rds_instance . get_type () } ` { rds_instance . get_friendly_name () } ` does not have public IP associated. \" f \" { rds_instance . get_type () } is on subnets: \" f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \" { rds_instance . get_type () } resides in same subnet as instance ` { violation_info . target_eni . owner . name } `. \" f \" { rds_instance . get_type () } relies on Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \" { rds_instance . get_type () } also relies on security groups \" f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . security_groups ]) } `. \" f \" { rds_instance . get_type () } is accessible from instance within public subnet. \" f \"~ { rds_instance . get_type () } ~\" , rds_instance , violation_info . security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . rds_clusters or environment_context . rds_instances ) DbSubnetGroup Attributes: Name Type Description name str The name of the subnet group. subnet_ids List[str] The IDs of the subnets in the group. db_subnet_group_arn str The ARN of the subnet group. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process RdsCluster Attributes: Name Type Description cluster_id str The ID of the cluster. arn str The ARN of the RDS cluster. port int The port the cluster is configured to listen to. db_subnet_group_name str The name of DB subnet group used. security_group_ids List[str] The IDs of the security groups used by this database. is_in_default_vpc bool True if the RDS is in the default VPC. encrypted_at_rest bool True if the database is configured to be encrypted at rest. backup_retention_period int Number of days to retain backups. engine_type str The Database engine name to be used for this RDS cluster. engine_version str The Database engine version to be used for this RDS cluster. iam_database_authentication_enabled bool An indication whether authentication to the RDS cluster using IAM entities is enabled. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process RdsGlobalCluster Attributes: Name Type Description cluster_id str The ID of the cluster. encrypted_at_rest bool True if the cluster is set to be encrypted at rest. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process RdsGlobalClusterRawData dataclass RdsGlobalClusterRawData(source_id: 'Optional[str]' = None) RdsInstance Attributes: Name Type Description name The name of the instance. arn str The ARN of the instance. port int The port the instance is listening on. publicly_accessible True if the database is configured to have a public IP address. db_subnet_group_name str The name of the SB subnet group. security_group_ids The IDs of the security groups in use with the instance. db_cluster_id Optional[str] The cluster ID, if this instance is part of a cluster, or None otherwise. encrypted_at_rest bool True is encryption at rest is enabled. performance_insights_enabled bool True if performance insights is enabled. performance_insights_kms_key Optional[str] The ARN of the KMS Key used to encrypt the performance insights, if any is used. performance_insights_kms_data Optional[KmsKey] The actual KMS Key object, if a KMS key is used to encrypt performance insights. security_group_allowing_public_access Optional[SecurityGroup] A security group that allows access from the internet. This value will be None when this resource is not accessible from the internet. indirect_public_connection_data Optional[IndirectPublicConnectionData] The data that describes that a publicly-accessible resource can access this resource by a security group of this resource. backup_retention_period Optional[int] Number of days to retain backups. engine_type str The Database engine name to be used for this RDS instance. engine_version str The Database engine version to be used for this RDS instance. iam_database_authentication_enabled Optional[bool] An indication whether authentication to the RDS instance using IAM entities is enabled. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"rds"},{"location":"context/aws/rds/index.html#sample-rules","text":"A few rules that use objects from this package: public_access_db_rds_rule from typing import Dict , List from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessDbRdsRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'public_access_db_rds_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for rds_cluster in env_context . rds_clusters : for rds_instance in rds_cluster . cluster_instances : security_group = rds_instance . security_group_allowing_public_access if security_group : issues . append ( Issue ( f '~Internet~. ' f \"Instance ` { rds_instance . get_friendly_name () } ` is \" f \"in { rds_cluster . get_type () } ` { rds_cluster . get_friendly_name () } `. \" f \" { rds_instance . get_type () } is on { rds_instance . network_resource . vpc . get_type () } \" f \" ` { rds_instance . network_resource . vpc . get_friendly_name () } `. \" f \" { rds_instance . get_type () } uses subnet(s) \" f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . security_groups ]) } `. \" f \" { rds_instance . get_type () } is reachable from the internet due to subnet(s) and route table(s). \" f \"Subnet uses Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \"Network ACL's and security group(s) allows the RDS configured ports. \" f '~ { rds_instance . get_type () } ~' , rds_cluster , security_group )) for rds_instance in ( x for x in env_context . rds_instances if x . db_cluster_id is None ): security_group = rds_instance . security_group_allowing_public_access if security_group : issues . append ( Issue ( f \"~Internet~. { rds_instance . get_type () } ` { rds_instance . get_friendly_name () } ` \" f \"is on { rds_instance . network_resource . vpc . get_type () } \" f \"` { rds_instance . network_resource . vpc . get_friendly_name () } `. \" f 'instance uses security groups ' f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . security_groups ]) } ` . \" f \" { rds_instance . get_type () } uses the subnets \" f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \" { rds_instance . get_type () } is reachable from the internet due to subnet(s) and route table(s). \" f \"Subnet uses Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \"Network ACL's and security group(s) allows the RDS configured ports. \" f \"~ { rds_instance . get_type () } ~\" , rds_instance , security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . rds_clusters or environment_context . rds_instances ) indirect_public_access_db_rds from typing import List , Dict , Optional from cloudrail.knowledge.context.aws.indirect_public_connection_data import IndirectPublicConnectionData from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class IndirectPublicAccessDbRds ( AwsBaseRule ): def get_id ( self ) -> str : return 'indirect_public_access_db_rds' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for rds_cluster in env_context . rds_clusters : for rds_instance in rds_cluster . cluster_instances : violation_info : Optional [ IndirectPublicConnectionData ] = rds_instance . indirect_public_connection_data if violation_info : issues . append ( Issue ( f \"~Internet~. \" f \"Instance resides in subnet(s) that are routable to internet gateway. Instance has public IP address.\" f \"Instance accepts incoming traffic on port 443. \" f \"~Instance ` { violation_info . target_eni . owner . get_friendly_name () } `~. \" f \" { rds_cluster . get_type () } ` { rds_cluster . get_friendly_name () } ` \" f \"is exposed due to { rds_instance . get_type () } ` { rds_instance . get_friendly_name () } `. \" f \" { rds_instance . get_type () } uses subnets \" f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \" { rds_instance . get_type () } \" f \"resides in same subnet as instance ` { violation_info . target_eni . owner . get_friendly_name () } `. \" f \" { rds_instance . get_type () } relies on Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \" { rds_instance . get_type () } also relies on security groups \" f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . security_groups ]) } `. \" f \" { rds_instance . get_type () } is accessible from instance within public subnet. \" f \"~ { rds_instance . get_type () } ` { rds_instance . get_friendly_name () } `~. \" , rds_cluster , violation_info . security_group )) for rds_instance in ( x for x in env_context . rds_instances if x . db_cluster_id is None ): violation_info : Optional [ IndirectPublicConnectionData ] = rds_instance . indirect_public_connection_data if violation_info : issues . append ( Issue ( f \"~Internet~. \" f \"Instance resides in subnet(s) that are routable to internet gateway. Instance has public IP address. \" f \"Instance accepts incoming traffic on port 443. \" f \"~Instance ` { violation_info . target_eni . owner . get_friendly_name () } `~. \" f \" { rds_instance . get_type () } ` { rds_instance . get_friendly_name () } ` does not have public IP associated. \" f \" { rds_instance . get_type () } is on subnets: \" f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \" { rds_instance . get_type () } resides in same subnet as instance ` { violation_info . target_eni . owner . name } `. \" f \" { rds_instance . get_type () } relies on Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in rds_instance . network_resource . subnets ]) } `. \" f \" { rds_instance . get_type () } also relies on security groups \" f \"` { ', ' . join ([ x . get_friendly_name () for x in rds_instance . network_resource . security_groups ]) } `. \" f \" { rds_instance . get_type () } is accessible from instance within public subnet. \" f \"~ { rds_instance . get_type () } ~\" , rds_instance , violation_info . security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . rds_clusters or environment_context . rds_instances )","title":"Sample rules"},{"location":"context/aws/rds/index.html#cloudrail.knowledge.context.aws.rds.db_subnet_group.DbSubnetGroup","text":"Attributes: Name Type Description name str The name of the subnet group. subnet_ids List[str] The IDs of the subnets in the group. db_subnet_group_arn str The ARN of the subnet group.","title":"DbSubnetGroup"},{"location":"context/aws/rds/index.html#cloudrail.knowledge.context.aws.rds.db_subnet_group.DbSubnetGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/rds/index.html#cloudrail.knowledge.context.aws.rds.db_subnet_group.DbSubnetGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/rds/index.html#cloudrail.knowledge.context.aws.rds.rds_cluster.RdsCluster","text":"Attributes: Name Type Description cluster_id str The ID of the cluster. arn str The ARN of the RDS cluster. port int The port the cluster is configured to listen to. db_subnet_group_name str The name of DB subnet group used. security_group_ids List[str] The IDs of the security groups used by this database. is_in_default_vpc bool True if the RDS is in the default VPC. encrypted_at_rest bool True if the database is configured to be encrypted at rest. backup_retention_period int Number of days to retain backups. engine_type str The Database engine name to be used for this RDS cluster. engine_version str The Database engine version to be used for this RDS cluster. iam_database_authentication_enabled bool An indication whether authentication to the RDS cluster using IAM entities is enabled.","title":"RdsCluster"},{"location":"context/aws/rds/index.html#cloudrail.knowledge.context.aws.rds.rds_cluster.RdsCluster.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/rds/index.html#cloudrail.knowledge.context.aws.rds.rds_cluster.RdsCluster.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/rds/index.html#cloudrail.knowledge.context.aws.rds.rds_global_cluster.RdsGlobalCluster","text":"Attributes: Name Type Description cluster_id str The ID of the cluster. encrypted_at_rest bool True if the cluster is set to be encrypted at rest.","title":"RdsGlobalCluster"},{"location":"context/aws/rds/index.html#cloudrail.knowledge.context.aws.rds.rds_global_cluster.RdsGlobalCluster.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/rds/index.html#cloudrail.knowledge.context.aws.rds.rds_global_cluster.RdsGlobalCluster.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/rds/index.html#cloudrail.knowledge.context.aws.rds.rds_global_cluster.RdsGlobalClusterRawData","text":"RdsGlobalClusterRawData(source_id: 'Optional[str]' = None)","title":"RdsGlobalClusterRawData"},{"location":"context/aws/rds/index.html#cloudrail.knowledge.context.aws.rds.rds_instance.RdsInstance","text":"Attributes: Name Type Description name The name of the instance. arn str The ARN of the instance. port int The port the instance is listening on. publicly_accessible True if the database is configured to have a public IP address. db_subnet_group_name str The name of the SB subnet group. security_group_ids The IDs of the security groups in use with the instance. db_cluster_id Optional[str] The cluster ID, if this instance is part of a cluster, or None otherwise. encrypted_at_rest bool True is encryption at rest is enabled. performance_insights_enabled bool True if performance insights is enabled. performance_insights_kms_key Optional[str] The ARN of the KMS Key used to encrypt the performance insights, if any is used. performance_insights_kms_data Optional[KmsKey] The actual KMS Key object, if a KMS key is used to encrypt performance insights. security_group_allowing_public_access Optional[SecurityGroup] A security group that allows access from the internet. This value will be None when this resource is not accessible from the internet. indirect_public_connection_data Optional[IndirectPublicConnectionData] The data that describes that a publicly-accessible resource can access this resource by a security group of this resource. backup_retention_period Optional[int] Number of days to retain backups. engine_type str The Database engine name to be used for this RDS instance. engine_version str The Database engine version to be used for this RDS instance. iam_database_authentication_enabled Optional[bool] An indication whether authentication to the RDS instance using IAM entities is enabled.","title":"RdsInstance"},{"location":"context/aws/rds/index.html#cloudrail.knowledge.context.aws.rds.rds_instance.RdsInstance.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/rds/index.html#cloudrail.knowledge.context.aws.rds.rds_instance.RdsInstance.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/redshift/index.html","text":"Sample rules A few rules that use objects from this package: public_access_db_redshift_rule from typing import List , Dict from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessDbRedshiftRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'public_access_db_redshift_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for redshift in env_context . redshift_clusters : violating_security_group = redshift . security_group_allowing_public_access if violating_security_group : issues . append ( Issue ( f '~Internet~. ' f \" { redshift . get_type () } : ` { redshift . get_friendly_name () } ` \" f \"is on { redshift . network_resource . vpc . get_type () } \" f \" ` { redshift . network_resource . vpc . get_friendly_name () } `. \" f \" { redshift . get_type () } uses security groups \" f \"` { ', ' . join ([ x . get_friendly_name () for x in redshift . network_resource . security_groups ]) } `. \" f \"Security group(s) allow Redshift associated port. \" f \" { redshift . get_type () } is on subnets:\" f \" ` { ', ' . join ([ x . get_friendly_name () for x in redshift . network_resource . subnets ]) } `. \" f \"Subnets rely on Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in redshift . network_resource . subnets ]) } `. \" f \" { redshift . get_type () } is capable of traversing to the internet via Redshift associated port. \" f \"~ { redshift . get_type () } ` { redshift . get_friendly_name () } `~\" , redshift , violating_security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . redshift_clusters ) indirect_public_access_db_redshift from typing import List , Dict , Optional from cloudrail.knowledge.context.aws.indirect_public_connection_data import IndirectPublicConnectionData from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class IndirectPublicAccessDbRedshift ( AwsBaseRule ): def get_id ( self ) -> str : return 'indirect_public_access_db_redshift' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for redshift in env_context . redshift_clusters : violation_data : Optional [ IndirectPublicConnectionData ] = redshift . indirect_public_connection_data if violation_data : issues . append ( Issue ( f '~Internet~. ' f \"Instance ` { violation_data . target_eni . owner . get_friendly_name () } \" f \"` resides in subnet(s) that are routable to internet gateway. \" f 'Instance has public IP address. ' f 'Instance accepts incoming traffic on port 443. ' f \"~Instance ` { violation_data . target_eni . owner . get_friendly_name () } `~. \" f \"Redshift Database: ` { redshift . get_friendly_name () } ` does not have a public IP address. \" f \" { redshift . get_type () } is on subnets:\" f \" ` { ', ' . join ([ x . get_friendly_name () for x in redshift . network_resource . subnets ]) } `. \" f \"Redshift resides in same subnet as Instance ` { violation_data . target_eni . owner . get_friendly_name () } `. \" f \"Redshift Database uses Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in redshift . network_resource . subnets ]) } `. \" f ' { redshift . get_type () } is accessible from instance within public subnet. ' f \"~ { redshift . get_type () } ` { redshift . get_friendly_name () } `~\" , redshift , violation_data . security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . redshift_clusters ) disallow_ec2_classic_mode_rule from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class DisallowEc2ClassicModeRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'disallow_ec2_classic_mode_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for redshift in env_context . redshift_clusters : if not redshift . is_ec2_vpc_platform : issues . append ( Issue ( f '~ { redshift . get_type () } ~. ' f ' { redshift . get_type () } with database name ` { redshift . get_friendly_name () } ` is using EC2-Classic mode.' f ' It should use EC2-VPC mode instead' , redshift , redshift )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . redshift_clusters ) RedshiftCluster Attributes: Name Type Description db_name str The name of the database. cluster_identifier The ID for the cluster. port int The port used by the cluster. subnet_group_name str The name of the subnet group used by the cluster. security_groups List of IDs of security groups used by the cluster. assign_public_ip True if to assign a public IP to the cluster. encrypted bool True if the cluster is set to be encrypted at rest. security_group_allowing_public_access Optional[SecurityGroup] A security group that allows access from the internet. This value will be None when this resource is not accessible from the internet. indirect_public_connection_data Optional[IndirectPublicConnectionData] The data that describes that a publicly-accessible resource can access this resource by a security group of this resource. logs_config Optional[RedshiftLogging] The logs settings for this cluster, if configured. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process RedshiftSubnetGroup Attributes: Name Type Description name str The name of the subnet group. subnet_ids List[str] The IDs of the subnets included in the group. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process RedshiftLogging Attributes: Name Type Description cluster_identifier str The ID for the Redshift cluster. s3_bucket Optional[str] The S3 bucket name which the Redshift logs should be stored at. s3_prefix Optional[str] A prefix string to be applied to the log file names. logging_enabled bool Indication if the logs are enabled for the Redshift cluster. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"redshift"},{"location":"context/aws/redshift/index.html#sample-rules","text":"A few rules that use objects from this package: public_access_db_redshift_rule from typing import List , Dict from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessDbRedshiftRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'public_access_db_redshift_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for redshift in env_context . redshift_clusters : violating_security_group = redshift . security_group_allowing_public_access if violating_security_group : issues . append ( Issue ( f '~Internet~. ' f \" { redshift . get_type () } : ` { redshift . get_friendly_name () } ` \" f \"is on { redshift . network_resource . vpc . get_type () } \" f \" ` { redshift . network_resource . vpc . get_friendly_name () } `. \" f \" { redshift . get_type () } uses security groups \" f \"` { ', ' . join ([ x . get_friendly_name () for x in redshift . network_resource . security_groups ]) } `. \" f \"Security group(s) allow Redshift associated port. \" f \" { redshift . get_type () } is on subnets:\" f \" ` { ', ' . join ([ x . get_friendly_name () for x in redshift . network_resource . subnets ]) } `. \" f \"Subnets rely on Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in redshift . network_resource . subnets ]) } `. \" f \" { redshift . get_type () } is capable of traversing to the internet via Redshift associated port. \" f \"~ { redshift . get_type () } ` { redshift . get_friendly_name () } `~\" , redshift , violating_security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . redshift_clusters ) indirect_public_access_db_redshift from typing import List , Dict , Optional from cloudrail.knowledge.context.aws.indirect_public_connection_data import IndirectPublicConnectionData from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class IndirectPublicAccessDbRedshift ( AwsBaseRule ): def get_id ( self ) -> str : return 'indirect_public_access_db_redshift' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for redshift in env_context . redshift_clusters : violation_data : Optional [ IndirectPublicConnectionData ] = redshift . indirect_public_connection_data if violation_data : issues . append ( Issue ( f '~Internet~. ' f \"Instance ` { violation_data . target_eni . owner . get_friendly_name () } \" f \"` resides in subnet(s) that are routable to internet gateway. \" f 'Instance has public IP address. ' f 'Instance accepts incoming traffic on port 443. ' f \"~Instance ` { violation_data . target_eni . owner . get_friendly_name () } `~. \" f \"Redshift Database: ` { redshift . get_friendly_name () } ` does not have a public IP address. \" f \" { redshift . get_type () } is on subnets:\" f \" ` { ', ' . join ([ x . get_friendly_name () for x in redshift . network_resource . subnets ]) } `. \" f \"Redshift resides in same subnet as Instance ` { violation_data . target_eni . owner . get_friendly_name () } `. \" f \"Redshift Database uses Network ACL's \" f \"` { ', ' . join ([ x . network_acl . get_friendly_name () for x in redshift . network_resource . subnets ]) } `. \" f ' { redshift . get_type () } is accessible from instance within public subnet. ' f \"~ { redshift . get_type () } ` { redshift . get_friendly_name () } `~\" , redshift , violation_data . security_group )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . redshift_clusters ) disallow_ec2_classic_mode_rule from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class DisallowEc2ClassicModeRule ( AwsBaseRule ): def get_id ( self ) -> str : return 'disallow_ec2_classic_mode_rule' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for redshift in env_context . redshift_clusters : if not redshift . is_ec2_vpc_platform : issues . append ( Issue ( f '~ { redshift . get_type () } ~. ' f ' { redshift . get_type () } with database name ` { redshift . get_friendly_name () } ` is using EC2-Classic mode.' f ' It should use EC2-VPC mode instead' , redshift , redshift )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . redshift_clusters )","title":"Sample rules"},{"location":"context/aws/redshift/index.html#cloudrail.knowledge.context.aws.redshift.redshift.RedshiftCluster","text":"Attributes: Name Type Description db_name str The name of the database. cluster_identifier The ID for the cluster. port int The port used by the cluster. subnet_group_name str The name of the subnet group used by the cluster. security_groups List of IDs of security groups used by the cluster. assign_public_ip True if to assign a public IP to the cluster. encrypted bool True if the cluster is set to be encrypted at rest. security_group_allowing_public_access Optional[SecurityGroup] A security group that allows access from the internet. This value will be None when this resource is not accessible from the internet. indirect_public_connection_data Optional[IndirectPublicConnectionData] The data that describes that a publicly-accessible resource can access this resource by a security group of this resource. logs_config Optional[RedshiftLogging] The logs settings for this cluster, if configured.","title":"RedshiftCluster"},{"location":"context/aws/redshift/index.html#cloudrail.knowledge.context.aws.redshift.redshift.RedshiftCluster.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/redshift/index.html#cloudrail.knowledge.context.aws.redshift.redshift.RedshiftCluster.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/redshift/index.html#cloudrail.knowledge.context.aws.redshift.redshift_subnet_group.RedshiftSubnetGroup","text":"Attributes: Name Type Description name str The name of the subnet group. subnet_ids List[str] The IDs of the subnets included in the group.","title":"RedshiftSubnetGroup"},{"location":"context/aws/redshift/index.html#cloudrail.knowledge.context.aws.redshift.redshift_subnet_group.RedshiftSubnetGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/redshift/index.html#cloudrail.knowledge.context.aws.redshift.redshift_subnet_group.RedshiftSubnetGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/redshift/index.html#cloudrail.knowledge.context.aws.redshift.redshift_logging.RedshiftLogging","text":"Attributes: Name Type Description cluster_identifier str The ID for the Redshift cluster. s3_bucket Optional[str] The S3 bucket name which the Redshift logs should be stored at. s3_prefix Optional[str] A prefix string to be applied to the log file names. logging_enabled bool Indication if the logs are enabled for the Redshift cluster.","title":"RedshiftLogging"},{"location":"context/aws/redshift/index.html#cloudrail.knowledge.context.aws.redshift.redshift_logging.RedshiftLogging.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/redshift/index.html#cloudrail.knowledge.context.aws.redshift.redshift_logging.RedshiftLogging.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/resourcegroupstaggingapi/index.html","text":"ResourceTagMappingList This object contains the tags associated with a resource when tags are managed by the resource-group tag-editor feature in AWS. Attributes: Name Type Description resource_arn str The ARN of the resource whose tag mapping this object focuses on. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"resourcegroupstaggingapi"},{"location":"context/aws/resourcegroupstaggingapi/index.html#cloudrail.knowledge.context.aws.resourcegroupstaggingapi.resource_tag_mapping_list.ResourceTagMappingList","text":"This object contains the tags associated with a resource when tags are managed by the resource-group tag-editor feature in AWS. Attributes: Name Type Description resource_arn str The ARN of the resource whose tag mapping this object focuses on.","title":"ResourceTagMappingList"},{"location":"context/aws/resourcegroupstaggingapi/index.html#cloudrail.knowledge.context.aws.resourcegroupstaggingapi.resource_tag_mapping_list.ResourceTagMappingList.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/resourcegroupstaggingapi/index.html#cloudrail.knowledge.context.aws.resourcegroupstaggingapi.resource_tag_mapping_list.ResourceTagMappingList.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/s3/index.html","text":"Sample rules A few rules that use objects from this package: s3_acl_disallow_public_and_cross_account from typing import List , Dict from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext class S3AclAllowPublicAccessRule ( AwsBaseRule ): # Notice: # - this rule don't issue on violation on the bucket object level def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues_list : List [ Issue ] = [] for bucket in env_context . s3_buckets : for resource in bucket . publicly_allowing_resources : issues_list . append ( Issue ( f \"~The { bucket . get_type () } ~. ` { bucket . get_friendly_name () } ` is publicly exposed through\" f \" the ` { resource . get_type () } ` with identifier ` { resource . get_friendly_name () } `.\" , bucket , resource )) return issues_list def get_id ( self ) -> str : return \"s3_acl_disallow_public_and_cross_account\" def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . s3_buckets ) s3_lambda_indirect_exposure from typing import List , Dict from cloudrail.knowledge.context.aws.apigateway.rest_api_gw import RestApiGw from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class S3BucketLambdaIndirectExposureRule ( AwsBaseRule ): def get_id ( self ) -> str : return 's3_lambda_indirect_exposure' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for s3_bucket in env_context . s3_buckets : for agw_method in s3_bucket . exposed_to_agw_methods : if not self . _is_api_gateway_public ( agw_method . rest_api_id , env_context . rest_api_gw ): continue issues . append ( Issue ( evidence = f \"The S3 Bucket ` { s3_bucket . get_friendly_name () } `. is exposed via the execution role in \" f \"Lambda Function ` { agw_method . integration . lambda_func_integration . get_friendly_name () } `. \" f \"which can be invoked by public API Gateway ` { agw_method . get_friendly_name () } `\" , exposed = s3_bucket , violating = agw_method . integration . lambda_func_integration )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . s3_buckets and environment_context . lambda_function_list and environment_context . api_gateway_methods ) @staticmethod def _is_api_gateway_public ( rest_api_gw_id : str , api_gateways : List [ RestApiGw ]) -> bool : for api_gateway in api_gateways : if api_gateway . rest_api_gw_id == rest_api_gw_id : return api_gateway . is_public raise Exception ( f 'Rest API Gateway { rest_api_gw_id } could not be found' ) vpc_endpoint_s3_exposure from abc import abstractmethod from typing import List , Dict from cloudrail.knowledge.context.mergeable import Mergeable from cloudrail.knowledge.context.aws.ec2.network_interface import NetworkInterface from cloudrail.knowledge.context.aws.prefix_lists import PrefixLists , PrefixList from cloudrail.knowledge.context.aws.ec2.route import Route from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.context.aws.service_name import AwsServiceType from cloudrail.knowledge.rules.aws.context_aware.vpc_endpoints.abstract_vpc_endpoint_gateway_rule import AbstractVpcEndpointGatewayRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class AbstractVpcEndpointGatewayIsNotUsedRule ( AbstractVpcEndpointGatewayRule ): @abstractmethod def get_id ( self ) -> str : pass def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: vpc_list , region_to_service_map , vpc_to_eni_map = self . _init_maps ( env_context ) issues_list : List [ Issue ] = [] region_to_prefix_lists_map : Dict [ str , PrefixLists ] = self . _create_prefix_list_by_region_map ( env_context ) for vpc in vpc_list : for eni in vpc_to_eni_map . get ( vpc , []): if self . _is_service_eni_match ( eni ): prefix_list : PrefixLists = region_to_prefix_lists_map [ vpc . region ] aws_service_pl : PrefixList = prefix_list . get_prefix_lists_by_service ( self . aws_service_type . value ) if self . _add_new_issue_from_outbound ( eni , region_to_service_map , issues_list , aws_service_pl ): break return issues_list def _add_new_issue_from_outbound ( self , eni : NetworkInterface , region_to_service_map : Dict [ str , List [ Mergeable ]], issues_list : List [ Issue ], service_pl : PrefixList ) -> bool : if self . _is_public_connection_exist ( eni ): most_specific_service_pl_route : Route = self . _get_most_specific_service_pl_route ( eni . subnet . route_table , service_pl ) if not self . _is_valid_vpc_endpoint_route ( most_specific_service_pl_route , service_pl , eni . vpc . endpoints ): for service in region_to_service_map [ eni . vpc . region ]: issues_list . append ( Issue ( f \"~The { eni . vpc . get_type () } ~. ` { eni . vpc . get_friendly_name () } ` in region ` { eni . vpc . region } `\" f \" is in use but not leveraging { self . aws_service_type . name } Endpoint Gateway\" , service , eni . vpc )) return True return False class S3VpcEndpointGatewayNotUsedRule ( AbstractVpcEndpointGatewayIsNotUsedRule ): def __init__ ( self ) -> None : super () . __init__ ( AwsServiceType . S3 , ( 443 , 80 ), self . S3_SERVICES_EXCLUDE_LIST , False ) def get_id ( self ) -> str : return \"vpc_endpoint_s3_exposure\" class DynamoDbVpcEndpointGatewayNotUsedRule ( AbstractVpcEndpointGatewayIsNotUsedRule ): def __init__ ( self ) -> None : super () . __init__ ( AwsServiceType . DYNAMODB , ( 443 ,), self . DYNAMODB_SERVICES_INCLUDE_LIST , True ) def get_id ( self ) -> str : return \"vpc_endpoint_dynamodb_exposure\" PublicAccessBlockLevel An enumeration. PublicAccessBlockSettings Attributes: Name Type Description bucket_name_or_account_id str An access block may apply to either a specific bucket or a whole account, this is the identifier to use. block_public_acls bool True if the block shouldn't allow public ACLs. ignore_public_acls bool True if the block should ignore public ACLs. block_public_policy bool True if the block shouldn't allow public policies. restrict_public_buckets bool True if the block should enforce restriction on public buckets. access_level PublicAccessBlockLevel Whether the block is on the account or specific bucket. account_access_block PublicAccessBlockSettings The account-level access block, if this one targets a bucket only. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process GranteeTypes An enumeration. S3ACL Attributes: Name Type Description actions Tuple[str] A list of S3 actions included in this S3 ACL, based on the list from the S3Permission supplied. type GranteeTypes The type of the grantee - GROUP or CANONICAL_USER. type_value str The value of the grantee. If type is GROUP, this will be the group identifier. If CANONICAL_USER, this will be the canonical identifier for the user. bucket_name str The bucket to apply the ACL to. owner_id str The owner of this ACL. owner_name str The name of the owner. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process S3Permission An enumeration. S3PredefinedGroups An enumeration. S3Bucket Attributes: Name Type Description bucket_name The name of the bucket. arn The ARN of the bucket. resource_based_policy the policy of this S3 bucket. acls List[S3ACL] The list of ACLs applied to this bucket. public_access_block_settings Optional[PublicAccessBlockSettings] The public access block applied to this bucket specifically, if any (or None). access_points List[S3BucketAccessPoint] The access points defined for this bucket. encryption_data Optional[S3BucketEncryption] The encryption configuration for this bucket. bucket_objects List[S3BucketObject] A list of objects in this bucket. NOTE: This is not fetched from the live environment and will only include objects that are defined in the infrastructure-as-code reviewed by Cloudrail. versioning_data S3BucketVersioning Configuration of versioning on the bucket. publicly_allowing_resources List[AwsResource] ACL's/Policies that expose this bucket to the internet. exposed_to_agw_methods List[ApiGatewayMethod] The ApiGateway methods that can acccess this bucket. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process S3BucketAccessPoint Attributes: Name Type Description bucket_name The name of the bucket this access point applies to. name The name of the access point. network_origin The network-level source of the traffic. arn The ARN of the access point. policy S3AccessPointPolicy The policy applied to the access point. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process S3BucketAccessPointNetworkOrigin dataclass S3BucketAccessPointNetworkOrigin(access_type: str, vpc_id: str) S3BucketAccessPointNetworkOriginType An enumeration. S3BucketEncryption Attributes: Name Type Description bucket_name str The bucket the encryption settings apply to. encrypted bool True if encryption is enabled. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process S3BucketObject NOTE: Cloudrail does not map objects in the live environment. Instead. only onjects specifically defined in infrastructure-as-code will be included as part of the context. Attributes: Name Type Description bucket_name str The bucket the object is in. key str The ARN of the key used to encrypt the object, if any. encrypted bool True if the object is encrypted. owning_bucket 'S3Bucket' A pointer to the owning bucket. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process S3BucketVersioning Attributes: Name Type Description bucket_name str The name of the bucket the versioning config applies to. versioning bool True if versioning is enabled. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process S3BucketLogging Attributes: Name Type Description bucket_name str The bucket which the logs associated with. target_bucket Optional[str] The bucket name in which to send logs for this bucket. target_prefix Optional[str] A key prefix for log objects. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"s3"},{"location":"context/aws/s3/index.html#sample-rules","text":"A few rules that use objects from this package: s3_acl_disallow_public_and_cross_account from typing import List , Dict from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext class S3AclAllowPublicAccessRule ( AwsBaseRule ): # Notice: # - this rule don't issue on violation on the bucket object level def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues_list : List [ Issue ] = [] for bucket in env_context . s3_buckets : for resource in bucket . publicly_allowing_resources : issues_list . append ( Issue ( f \"~The { bucket . get_type () } ~. ` { bucket . get_friendly_name () } ` is publicly exposed through\" f \" the ` { resource . get_type () } ` with identifier ` { resource . get_friendly_name () } `.\" , bucket , resource )) return issues_list def get_id ( self ) -> str : return \"s3_acl_disallow_public_and_cross_account\" def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . s3_buckets ) s3_lambda_indirect_exposure from typing import List , Dict from cloudrail.knowledge.context.aws.apigateway.rest_api_gw import RestApiGw from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.aws.aws_base_rule import AwsBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class S3BucketLambdaIndirectExposureRule ( AwsBaseRule ): def get_id ( self ) -> str : return 's3_lambda_indirect_exposure' def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for s3_bucket in env_context . s3_buckets : for agw_method in s3_bucket . exposed_to_agw_methods : if not self . _is_api_gateway_public ( agw_method . rest_api_id , env_context . rest_api_gw ): continue issues . append ( Issue ( evidence = f \"The S3 Bucket ` { s3_bucket . get_friendly_name () } `. is exposed via the execution role in \" f \"Lambda Function ` { agw_method . integration . lambda_func_integration . get_friendly_name () } `. \" f \"which can be invoked by public API Gateway ` { agw_method . get_friendly_name () } `\" , exposed = s3_bucket , violating = agw_method . integration . lambda_func_integration )) return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return bool ( environment_context . s3_buckets and environment_context . lambda_function_list and environment_context . api_gateway_methods ) @staticmethod def _is_api_gateway_public ( rest_api_gw_id : str , api_gateways : List [ RestApiGw ]) -> bool : for api_gateway in api_gateways : if api_gateway . rest_api_gw_id == rest_api_gw_id : return api_gateway . is_public raise Exception ( f 'Rest API Gateway { rest_api_gw_id } could not be found' ) vpc_endpoint_s3_exposure from abc import abstractmethod from typing import List , Dict from cloudrail.knowledge.context.mergeable import Mergeable from cloudrail.knowledge.context.aws.ec2.network_interface import NetworkInterface from cloudrail.knowledge.context.aws.prefix_lists import PrefixLists , PrefixList from cloudrail.knowledge.context.aws.ec2.route import Route from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.context.aws.service_name import AwsServiceType from cloudrail.knowledge.rules.aws.context_aware.vpc_endpoints.abstract_vpc_endpoint_gateway_rule import AbstractVpcEndpointGatewayRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class AbstractVpcEndpointGatewayIsNotUsedRule ( AbstractVpcEndpointGatewayRule ): @abstractmethod def get_id ( self ) -> str : pass def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: vpc_list , region_to_service_map , vpc_to_eni_map = self . _init_maps ( env_context ) issues_list : List [ Issue ] = [] region_to_prefix_lists_map : Dict [ str , PrefixLists ] = self . _create_prefix_list_by_region_map ( env_context ) for vpc in vpc_list : for eni in vpc_to_eni_map . get ( vpc , []): if self . _is_service_eni_match ( eni ): prefix_list : PrefixLists = region_to_prefix_lists_map [ vpc . region ] aws_service_pl : PrefixList = prefix_list . get_prefix_lists_by_service ( self . aws_service_type . value ) if self . _add_new_issue_from_outbound ( eni , region_to_service_map , issues_list , aws_service_pl ): break return issues_list def _add_new_issue_from_outbound ( self , eni : NetworkInterface , region_to_service_map : Dict [ str , List [ Mergeable ]], issues_list : List [ Issue ], service_pl : PrefixList ) -> bool : if self . _is_public_connection_exist ( eni ): most_specific_service_pl_route : Route = self . _get_most_specific_service_pl_route ( eni . subnet . route_table , service_pl ) if not self . _is_valid_vpc_endpoint_route ( most_specific_service_pl_route , service_pl , eni . vpc . endpoints ): for service in region_to_service_map [ eni . vpc . region ]: issues_list . append ( Issue ( f \"~The { eni . vpc . get_type () } ~. ` { eni . vpc . get_friendly_name () } ` in region ` { eni . vpc . region } `\" f \" is in use but not leveraging { self . aws_service_type . name } Endpoint Gateway\" , service , eni . vpc )) return True return False class S3VpcEndpointGatewayNotUsedRule ( AbstractVpcEndpointGatewayIsNotUsedRule ): def __init__ ( self ) -> None : super () . __init__ ( AwsServiceType . S3 , ( 443 , 80 ), self . S3_SERVICES_EXCLUDE_LIST , False ) def get_id ( self ) -> str : return \"vpc_endpoint_s3_exposure\" class DynamoDbVpcEndpointGatewayNotUsedRule ( AbstractVpcEndpointGatewayIsNotUsedRule ): def __init__ ( self ) -> None : super () . __init__ ( AwsServiceType . DYNAMODB , ( 443 ,), self . DYNAMODB_SERVICES_INCLUDE_LIST , True ) def get_id ( self ) -> str : return \"vpc_endpoint_dynamodb_exposure\"","title":"Sample rules"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.public_access_block_settings.PublicAccessBlockLevel","text":"An enumeration.","title":"PublicAccessBlockLevel"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.public_access_block_settings.PublicAccessBlockSettings","text":"Attributes: Name Type Description bucket_name_or_account_id str An access block may apply to either a specific bucket or a whole account, this is the identifier to use. block_public_acls bool True if the block shouldn't allow public ACLs. ignore_public_acls bool True if the block should ignore public ACLs. block_public_policy bool True if the block shouldn't allow public policies. restrict_public_buckets bool True if the block should enforce restriction on public buckets. access_level PublicAccessBlockLevel Whether the block is on the account or specific bucket. account_access_block PublicAccessBlockSettings The account-level access block, if this one targets a bucket only.","title":"PublicAccessBlockSettings"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.public_access_block_settings.PublicAccessBlockSettings.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.public_access_block_settings.PublicAccessBlockSettings.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_acl.GranteeTypes","text":"An enumeration.","title":"GranteeTypes"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_acl.S3ACL","text":"Attributes: Name Type Description actions Tuple[str] A list of S3 actions included in this S3 ACL, based on the list from the S3Permission supplied. type GranteeTypes The type of the grantee - GROUP or CANONICAL_USER. type_value str The value of the grantee. If type is GROUP, this will be the group identifier. If CANONICAL_USER, this will be the canonical identifier for the user. bucket_name str The bucket to apply the ACL to. owner_id str The owner of this ACL. owner_name str The name of the owner.","title":"S3ACL"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_acl.S3ACL.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_acl.S3ACL.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_acl.S3Permission","text":"An enumeration.","title":"S3Permission"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_acl.S3PredefinedGroups","text":"An enumeration.","title":"S3PredefinedGroups"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket.S3Bucket","text":"Attributes: Name Type Description bucket_name The name of the bucket. arn The ARN of the bucket. resource_based_policy the policy of this S3 bucket. acls List[S3ACL] The list of ACLs applied to this bucket. public_access_block_settings Optional[PublicAccessBlockSettings] The public access block applied to this bucket specifically, if any (or None). access_points List[S3BucketAccessPoint] The access points defined for this bucket. encryption_data Optional[S3BucketEncryption] The encryption configuration for this bucket. bucket_objects List[S3BucketObject] A list of objects in this bucket. NOTE: This is not fetched from the live environment and will only include objects that are defined in the infrastructure-as-code reviewed by Cloudrail. versioning_data S3BucketVersioning Configuration of versioning on the bucket. publicly_allowing_resources List[AwsResource] ACL's/Policies that expose this bucket to the internet. exposed_to_agw_methods List[ApiGatewayMethod] The ApiGateway methods that can acccess this bucket.","title":"S3Bucket"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket.S3Bucket.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket.S3Bucket.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_access_point.S3BucketAccessPoint","text":"Attributes: Name Type Description bucket_name The name of the bucket this access point applies to. name The name of the access point. network_origin The network-level source of the traffic. arn The ARN of the access point. policy S3AccessPointPolicy The policy applied to the access point.","title":"S3BucketAccessPoint"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_access_point.S3BucketAccessPoint.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_access_point.S3BucketAccessPoint.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_access_point.S3BucketAccessPointNetworkOrigin","text":"S3BucketAccessPointNetworkOrigin(access_type: str, vpc_id: str)","title":"S3BucketAccessPointNetworkOrigin"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_access_point.S3BucketAccessPointNetworkOriginType","text":"An enumeration.","title":"S3BucketAccessPointNetworkOriginType"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_encryption.S3BucketEncryption","text":"Attributes: Name Type Description bucket_name str The bucket the encryption settings apply to. encrypted bool True if encryption is enabled.","title":"S3BucketEncryption"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_encryption.S3BucketEncryption.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_encryption.S3BucketEncryption.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_object.S3BucketObject","text":"NOTE: Cloudrail does not map objects in the live environment. Instead. only onjects specifically defined in infrastructure-as-code will be included as part of the context. Attributes: Name Type Description bucket_name str The bucket the object is in. key str The ARN of the key used to encrypt the object, if any. encrypted bool True if the object is encrypted. owning_bucket 'S3Bucket' A pointer to the owning bucket.","title":"S3BucketObject"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_object.S3BucketObject.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_object.S3BucketObject.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_versioning.S3BucketVersioning","text":"Attributes: Name Type Description bucket_name str The name of the bucket the versioning config applies to. versioning bool True if versioning is enabled.","title":"S3BucketVersioning"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_versioning.S3BucketVersioning.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_versioning.S3BucketVersioning.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_logging.S3BucketLogging","text":"Attributes: Name Type Description bucket_name str The bucket which the logs associated with. target_bucket Optional[str] The bucket name in which to send logs for this bucket. target_prefix Optional[str] A key prefix for log objects.","title":"S3BucketLogging"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_logging.S3BucketLogging.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/s3/index.html#cloudrail.knowledge.context.aws.s3.s3_bucket_logging.S3BucketLogging.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/s3outposts/index.html","text":"S3OutpostEndpoint Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. outpost_id str The ID of the S3 outpost endpoint resource. arn str The ARN of the S3 outpost endpoint resource. vpc_config NetworkConfiguration Networking information used by the resource. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"s3outposts"},{"location":"context/aws/s3outposts/index.html#cloudrail.knowledge.context.aws.s3outposts.s3outpost_endpoint.S3OutpostEndpoint","text":"Attributes: Name Type Description account The account ID in which this resource operates. region The region name in which this resource operates. outpost_id str The ID of the S3 outpost endpoint resource. arn str The ARN of the S3 outpost endpoint resource. vpc_config NetworkConfiguration Networking information used by the resource.","title":"S3OutpostEndpoint"},{"location":"context/aws/s3outposts/index.html#cloudrail.knowledge.context.aws.s3outposts.s3outpost_endpoint.S3OutpostEndpoint.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/s3outposts/index.html#cloudrail.knowledge.context.aws.s3outposts.s3outpost_endpoint.S3OutpostEndpoint.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/sagemaker/index.html","text":"SageMakerEndpointConfig Attributes: Name Type Description sagemaker_endpoint_config_name str The name of the endpoint config. arn str The ARN of the SageMaker Endpoint Config. encrypted bool True if encryption is enabled. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process SageMakerNotebookInstance Attributes: Name Type Description name str The name of the notebook instance. arn str The ARN of the notebook instance. kms_key_id str The ID of the KMS Key used to encrypted the notebook instance, if any is used. kms_data KmsKey A pointer to the actual KMS key referenced by kms_key_id. direct_internet_access bool True if direct Internet access is enabled. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"sagemaker"},{"location":"context/aws/sagemaker/index.html#cloudrail.knowledge.context.aws.sagemaker.sagemaker_endpoint_config.SageMakerEndpointConfig","text":"Attributes: Name Type Description sagemaker_endpoint_config_name str The name of the endpoint config. arn str The ARN of the SageMaker Endpoint Config. encrypted bool True if encryption is enabled.","title":"SageMakerEndpointConfig"},{"location":"context/aws/sagemaker/index.html#cloudrail.knowledge.context.aws.sagemaker.sagemaker_endpoint_config.SageMakerEndpointConfig.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/sagemaker/index.html#cloudrail.knowledge.context.aws.sagemaker.sagemaker_endpoint_config.SageMakerEndpointConfig.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/sagemaker/index.html#cloudrail.knowledge.context.aws.sagemaker.sagemaker_notebook_instance.SageMakerNotebookInstance","text":"Attributes: Name Type Description name str The name of the notebook instance. arn str The ARN of the notebook instance. kms_key_id str The ID of the KMS Key used to encrypted the notebook instance, if any is used. kms_data KmsKey A pointer to the actual KMS key referenced by kms_key_id. direct_internet_access bool True if direct Internet access is enabled.","title":"SageMakerNotebookInstance"},{"location":"context/aws/sagemaker/index.html#cloudrail.knowledge.context.aws.sagemaker.sagemaker_notebook_instance.SageMakerNotebookInstance.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/sagemaker/index.html#cloudrail.knowledge.context.aws.sagemaker.sagemaker_notebook_instance.SageMakerNotebookInstance.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/secretsmanager/index.html","text":"SecretsManagerSecret Attributes: Name Type Description sm_name str The name of the owning SageManager. arn str The ARN of this secret. policy SecretsManagerSecretPolicy The resource policy to use with this secret, if any. kms_key str The KMS key ID to use to encrypt this secret, if one is used. kms_data Optional[KmsKey] The actual KmsKey object referenced by the KMS ID. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process SecretsManagerSecretPolicy Attributes: Name Type Description secret_arn str The ARN of the secret. policy_statements The statements of the policy. raw_document The raw JSON of the policy. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"secretsmanager"},{"location":"context/aws/secretsmanager/index.html#cloudrail.knowledge.context.aws.secretsmanager.secrets_manager_secret.SecretsManagerSecret","text":"Attributes: Name Type Description sm_name str The name of the owning SageManager. arn str The ARN of this secret. policy SecretsManagerSecretPolicy The resource policy to use with this secret, if any. kms_key str The KMS key ID to use to encrypt this secret, if one is used. kms_data Optional[KmsKey] The actual KmsKey object referenced by the KMS ID.","title":"SecretsManagerSecret"},{"location":"context/aws/secretsmanager/index.html#cloudrail.knowledge.context.aws.secretsmanager.secrets_manager_secret.SecretsManagerSecret.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/secretsmanager/index.html#cloudrail.knowledge.context.aws.secretsmanager.secrets_manager_secret.SecretsManagerSecret.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/secretsmanager/index.html#cloudrail.knowledge.context.aws.secretsmanager.secrets_manager_secret_policy.SecretsManagerSecretPolicy","text":"Attributes: Name Type Description secret_arn str The ARN of the secret. policy_statements The statements of the policy. raw_document The raw JSON of the policy.","title":"SecretsManagerSecretPolicy"},{"location":"context/aws/secretsmanager/index.html#cloudrail.knowledge.context.aws.secretsmanager.secrets_manager_secret_policy.SecretsManagerSecretPolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/secretsmanager/index.html#cloudrail.knowledge.context.aws.secretsmanager.secrets_manager_secret_policy.SecretsManagerSecretPolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/sns/index.html","text":"SnsTopic Attributes: Name Type Description sns_arn str The ARN of this topic. sns_name str The name of this SNS topic. encrypted_at_rest bool True if the topic is set to be encrypted at rest. kms_key Optional[str] The ID of the KMS Key used to encrypt the topic, if any is used. kms_data Optional[KmsKey] A reference to KmsKey based on the kms_key provided. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"sns"},{"location":"context/aws/sns/index.html#cloudrail.knowledge.context.aws.sns.sns_topic.SnsTopic","text":"Attributes: Name Type Description sns_arn str The ARN of this topic. sns_name str The name of this SNS topic. encrypted_at_rest bool True if the topic is set to be encrypted at rest. kms_key Optional[str] The ID of the KMS Key used to encrypt the topic, if any is used. kms_data Optional[KmsKey] A reference to KmsKey based on the kms_key provided.","title":"SnsTopic"},{"location":"context/aws/sns/index.html#cloudrail.knowledge.context.aws.sns.sns_topic.SnsTopic.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/sns/index.html#cloudrail.knowledge.context.aws.sns.sns_topic.SnsTopic.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/sqs/index.html","text":"SqsQueue Attributes: Name Type Description arn str The ARN of the SQS Queue. queue_name str The name of the queue. encrypted_at_rest bool True if the queue is encrypted at rest. policy SqsQueuePolicy The resource policy attach to the queue. kms_key str The ID of the KMS Key used to encrypt the queue, if any is used. kms_data Optional[KmsKey] A reference to KmsKey based on the kms_key provided. queue_url str The URL of the queue. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process SqsQueuePolicy Attributes: Name Type Description queue_name str The name of the queue. policy_statements The statements of the policy. raw_document The raw JSON of the policy. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"sqs"},{"location":"context/aws/sqs/index.html#cloudrail.knowledge.context.aws.sqs.sqs_queue.SqsQueue","text":"Attributes: Name Type Description arn str The ARN of the SQS Queue. queue_name str The name of the queue. encrypted_at_rest bool True if the queue is encrypted at rest. policy SqsQueuePolicy The resource policy attach to the queue. kms_key str The ID of the KMS Key used to encrypt the queue, if any is used. kms_data Optional[KmsKey] A reference to KmsKey based on the kms_key provided. queue_url str The URL of the queue.","title":"SqsQueue"},{"location":"context/aws/sqs/index.html#cloudrail.knowledge.context.aws.sqs.sqs_queue.SqsQueue.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/sqs/index.html#cloudrail.knowledge.context.aws.sqs.sqs_queue.SqsQueue.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/sqs/index.html#cloudrail.knowledge.context.aws.sqs.sqs_queue_policy.SqsQueuePolicy","text":"Attributes: Name Type Description queue_name str The name of the queue. policy_statements The statements of the policy. raw_document The raw JSON of the policy.","title":"SqsQueuePolicy"},{"location":"context/aws/sqs/index.html#cloudrail.knowledge.context.aws.sqs.sqs_queue_policy.SqsQueuePolicy.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/sqs/index.html#cloudrail.knowledge.context.aws.sqs.sqs_queue_policy.SqsQueuePolicy.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/ssm/index.html","text":"SsmParameter Attributes: Name Type Description name str The name of the SSM parameter. ssm_type str The type of the SSM parameter. kms_key_id str The ID of the KMS Key used to encrypt the parameter, if any is used. kms_data KmsKey A reference to KmsKey based on the kms_key provided. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"ssm"},{"location":"context/aws/ssm/index.html#cloudrail.knowledge.context.aws.ssm.ssm_parameter.SsmParameter","text":"Attributes: Name Type Description name str The name of the SSM parameter. ssm_type str The type of the SSM parameter. kms_key_id str The ID of the KMS Key used to encrypt the parameter, if any is used. kms_data KmsKey A reference to KmsKey based on the kms_key provided.","title":"SsmParameter"},{"location":"context/aws/ssm/index.html#cloudrail.knowledge.context.aws.ssm.ssm_parameter.SsmParameter.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/ssm/index.html#cloudrail.knowledge.context.aws.ssm.ssm_parameter.SsmParameter.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/worklink/index.html","text":"WorkLinkFleet Attributes: Name Type Description fleet_name str The name of the worklink fleet. arn str The ARN of the worklink fleet. vpc_config NetworkConfiguration The network configuration of the worklink fleet, if configured. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"worklink"},{"location":"context/aws/worklink/index.html#cloudrail.knowledge.context.aws.worklink.worklink_fleet.WorkLinkFleet","text":"Attributes: Name Type Description fleet_name str The name of the worklink fleet. arn str The ARN of the worklink fleet. vpc_config NetworkConfiguration The network configuration of the worklink fleet, if configured.","title":"WorkLinkFleet"},{"location":"context/aws/worklink/index.html#cloudrail.knowledge.context.aws.worklink.worklink_fleet.WorkLinkFleet.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/worklink/index.html#cloudrail.knowledge.context.aws.worklink.worklink_fleet.WorkLinkFleet.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/workspaces/index.html","text":"WorkspaceDirectory Attributes: Name Type Description directory_id str The ID of the Workspace Directory. subnet_ids Optional[list] A list of IDs of subnets used by the directory, if any. security_group_ids list A list of IDs of security groups used by the directory. workspace_security_groups List[SecurityGroup] The actual security groups referenced by the IDs in security_group_ids. cloud_directory DirectoryService A reference to the DirectoryService this Workspace connects to. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process Workspace Attributes: Name Type Description workspace_id str The ID of this workspace. root_encryption_enabled bool True if root encryption is enabled. user_encryption_enabled bool True if user encryption is enabled. volume_encryption_key str The ID of the KMS key used to encrypt the volume, if any. keys_data KmsKey A reference to KmsKey based on the kms_key provided. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"workspaces"},{"location":"context/aws/workspaces/index.html#cloudrail.knowledge.context.aws.workspaces.workspace_directory.WorkspaceDirectory","text":"Attributes: Name Type Description directory_id str The ID of the Workspace Directory. subnet_ids Optional[list] A list of IDs of subnets used by the directory, if any. security_group_ids list A list of IDs of security groups used by the directory. workspace_security_groups List[SecurityGroup] The actual security groups referenced by the IDs in security_group_ids. cloud_directory DirectoryService A reference to the DirectoryService this Workspace connects to.","title":"WorkspaceDirectory"},{"location":"context/aws/workspaces/index.html#cloudrail.knowledge.context.aws.workspaces.workspace_directory.WorkspaceDirectory.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/workspaces/index.html#cloudrail.knowledge.context.aws.workspaces.workspace_directory.WorkspaceDirectory.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/workspaces/index.html#cloudrail.knowledge.context.aws.workspaces.workspaces.Workspace","text":"Attributes: Name Type Description workspace_id str The ID of this workspace. root_encryption_enabled bool True if root encryption is enabled. user_encryption_enabled bool True if user encryption is enabled. volume_encryption_key str The ID of the KMS key used to encrypt the volume, if any. keys_data KmsKey A reference to KmsKey based on the kms_key provided.","title":"Workspace"},{"location":"context/aws/workspaces/index.html#cloudrail.knowledge.context.aws.workspaces.workspaces.Workspace.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/workspaces/index.html#cloudrail.knowledge.context.aws.workspaces.workspaces.Workspace.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/aws/xray/index.html","text":"XrayEncryption Attributes: Name Type Description key_id Optional[str] The ID of the KMS key used to encrypt X-Ray data, if any is used. kms_data KmsKey A reference to KmsKey based on the kms_id provided. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"xray"},{"location":"context/aws/xray/index.html#cloudrail.knowledge.context.aws.xray.xray_encryption.XrayEncryption","text":"Attributes: Name Type Description key_id Optional[str] The ID of the KMS key used to encrypt X-Ray data, if any is used. kms_data KmsKey A reference to KmsKey based on the kms_id provided.","title":"XrayEncryption"},{"location":"context/aws/xray/index.html#cloudrail.knowledge.context.aws.xray.xray_encryption.XrayEncryption.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/aws/xray/index.html#cloudrail.knowledge.context.aws.xray.xray_encryption.XrayEncryption.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/azure/databases/index.html","text":"Sample rules A few rules that use objects from this package: non_car_azure_database_public_access from typing import Dict , List from cloudrail.knowledge.context.azure.azure_environment_context import AzureEnvironmentContext from cloudrail.knowledge.rules.azure.azure_base_rule import AzureBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessSqlDatabaseRule ( AzureBaseRule ): def get_id ( self ) -> str : return 'non_car_azure_database_public_access' def execute ( self , env_context : AzureEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for sql_server in env_context . sql_servers . values (): if sql_server . public_network_access_enable : issues . append ( Issue ( f '~ { sql_server . get_type () } ~. ' f ' { sql_server . get_type () } with database name ` { sql_server . get_friendly_name () } ` is exposed to the internet' , sql_server , sql_server )) return issues def should_run_rule ( self , environment_context : AzureEnvironmentContext ) -> bool : return bool ( environment_context . sql_servers ) AzureSqlServer Attributes: Name Type Description server_name str The name of the SQL server public_network_access_enable bool An indication on if public network access is enabled. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"databases"},{"location":"context/azure/databases/index.html#sample-rules","text":"A few rules that use objects from this package: non_car_azure_database_public_access from typing import Dict , List from cloudrail.knowledge.context.azure.azure_environment_context import AzureEnvironmentContext from cloudrail.knowledge.rules.azure.azure_base_rule import AzureBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class PublicAccessSqlDatabaseRule ( AzureBaseRule ): def get_id ( self ) -> str : return 'non_car_azure_database_public_access' def execute ( self , env_context : AzureEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for sql_server in env_context . sql_servers . values (): if sql_server . public_network_access_enable : issues . append ( Issue ( f '~ { sql_server . get_type () } ~. ' f ' { sql_server . get_type () } with database name ` { sql_server . get_friendly_name () } ` is exposed to the internet' , sql_server , sql_server )) return issues def should_run_rule ( self , environment_context : AzureEnvironmentContext ) -> bool : return bool ( environment_context . sql_servers )","title":"Sample rules"},{"location":"context/azure/databases/index.html#cloudrail.knowledge.context.azure.databases.azure_sql_server.AzureSqlServer","text":"Attributes: Name Type Description server_name str The name of the SQL server public_network_access_enable bool An indication on if public network access is enabled.","title":"AzureSqlServer"},{"location":"context/azure/databases/index.html#cloudrail.knowledge.context.azure.databases.azure_sql_server.AzureSqlServer.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/azure/databases/index.html#cloudrail.knowledge.context.azure.databases.azure_sql_server.AzureSqlServer.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/azure/network/index.html","text":"Sample rules A few rules that use objects from this package: non_car_unused_network_security_group non_car_vpn_gateway_disallow_basic_sku from typing import Dict , List from cloudrail.knowledge.context.azure.azure_environment_context import AzureEnvironmentContext from cloudrail.knowledge.rules.azure.azure_base_rule import AzureBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class UnusedNetworkSecurityGroupRule ( AzureBaseRule ): def get_id ( self ) -> str : return 'non_car_unused_network_security_group' def execute ( self , env_context : AzureEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for nsg in env_context . net_security_groups : if not nsg . subnets and not nsg . network_interfaces : issues . append ( Issue ( f ' { nsg . get_type () } ` { nsg . get_friendly_name () } ` is unused' , nsg , nsg )) return issues def should_run_rule ( self , environment_context : AzureEnvironmentContext ) -> bool : return bool ( environment_context . net_security_groups ) from typing import Dict , List from cloudrail.knowledge.context.azure.azure_environment_context import AzureEnvironmentContext from cloudrail.knowledge.context.azure.network.azure_vnet_gateway import VirtualNetworkGatewayType from cloudrail.knowledge.rules.azure.azure_base_rule import AzureBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class VpnGatewayDisallowBasicSkuRule ( AzureBaseRule ): def get_id ( self ) -> str : return 'non_car_vpn_gateway_disallow_basic_sku' def execute ( self , env_context : AzureEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for vnet_gw in env_context . vnet_gateways : if vnet_gw . gateway_type == VirtualNetworkGatewayType . VPN and vnet_gw . sku_tier == 'Basic' : issues . append ( Issue ( f ' { vnet_gw . get_type () } ` { vnet_gw . get_friendly_name () } ` uses \"basic\" SKU' , vnet_gw , vnet_gw )) return issues def should_run_rule ( self , environment_context : AzureEnvironmentContext ) -> bool : return bool ( environment_context . vnet_gateways ) AzureNic Attributes: Name Type Description name str The name of this NIC security_group_id str The id of the security group thats attached to this NIC security_group AzureNetworkSecurityGroup The actual security group thats attached to this NIC custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process AzureSubnet Attributes: Name Type Description name str The name of this subnet security_group_id str The id of the security group thats attached to this subnet security_group AzureNetworkSecurityGroup The actual security group thats attached to this subnet custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process AzureNetworkSecurityGroupToNicAssociation Attributes: Name Type Description nic_id str The network interface id which needs to be connected to the NSG. network_security_group_id The network security group id which needs to be connected to the NIC. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process AzureSecurityGroupToSubnetAssociation Attributes: Name Type Description subnet_id str The subnet id which needs to be connected to the NSG. network_security_group_id The network security group id which needs to be connected to the subnet. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process AzureNetworkSecurityGroup Attributes: Name Type Description name str The NSG name network_interface_ids List[str] List of network interface ids which the NSG connected to (if any) subnet_ids List[str] List of subnet ids which the NSG is connected to (if any) subnets List['AzureSubnet'] List of actual subnets which the NSG is connected to. network_interfaces List['AzureNic'] List of actual network interfacs which the NSG is connected to. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) A list of attributes that should be excluded from the invalidation process AzureVirtualNetworkGateway Attributes: Name Type Description name str The GW name gateway_type VirtualNetworkGatewayType The GW type sku_tier str The GW SKU tier (Basic, Standard, etc) custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process VirtualNetworkGatewayType An enumeration.","title":"network"},{"location":"context/azure/network/index.html#sample-rules","text":"A few rules that use objects from this package: non_car_unused_network_security_group non_car_vpn_gateway_disallow_basic_sku from typing import Dict , List from cloudrail.knowledge.context.azure.azure_environment_context import AzureEnvironmentContext from cloudrail.knowledge.rules.azure.azure_base_rule import AzureBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class UnusedNetworkSecurityGroupRule ( AzureBaseRule ): def get_id ( self ) -> str : return 'non_car_unused_network_security_group' def execute ( self , env_context : AzureEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for nsg in env_context . net_security_groups : if not nsg . subnets and not nsg . network_interfaces : issues . append ( Issue ( f ' { nsg . get_type () } ` { nsg . get_friendly_name () } ` is unused' , nsg , nsg )) return issues def should_run_rule ( self , environment_context : AzureEnvironmentContext ) -> bool : return bool ( environment_context . net_security_groups ) from typing import Dict , List from cloudrail.knowledge.context.azure.azure_environment_context import AzureEnvironmentContext from cloudrail.knowledge.context.azure.network.azure_vnet_gateway import VirtualNetworkGatewayType from cloudrail.knowledge.rules.azure.azure_base_rule import AzureBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class VpnGatewayDisallowBasicSkuRule ( AzureBaseRule ): def get_id ( self ) -> str : return 'non_car_vpn_gateway_disallow_basic_sku' def execute ( self , env_context : AzureEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for vnet_gw in env_context . vnet_gateways : if vnet_gw . gateway_type == VirtualNetworkGatewayType . VPN and vnet_gw . sku_tier == 'Basic' : issues . append ( Issue ( f ' { vnet_gw . get_type () } ` { vnet_gw . get_friendly_name () } ` uses \"basic\" SKU' , vnet_gw , vnet_gw )) return issues def should_run_rule ( self , environment_context : AzureEnvironmentContext ) -> bool : return bool ( environment_context . vnet_gateways )","title":"Sample rules"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_nic.AzureNic","text":"Attributes: Name Type Description name str The name of this NIC security_group_id str The id of the security group thats attached to this NIC security_group AzureNetworkSecurityGroup The actual security group thats attached to this NIC","title":"AzureNic"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_nic.AzureNic.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_nic.AzureNic.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_subnet.AzureSubnet","text":"Attributes: Name Type Description name str The name of this subnet security_group_id str The id of the security group thats attached to this subnet security_group AzureNetworkSecurityGroup The actual security group thats attached to this subnet","title":"AzureSubnet"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_subnet.AzureSubnet.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_subnet.AzureSubnet.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_nsg_to_nic_association.AzureNetworkSecurityGroupToNicAssociation","text":"Attributes: Name Type Description nic_id str The network interface id which needs to be connected to the NSG. network_security_group_id The network security group id which needs to be connected to the NIC.","title":"AzureNetworkSecurityGroupToNicAssociation"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_nsg_to_nic_association.AzureNetworkSecurityGroupToNicAssociation.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_nsg_to_nic_association.AzureNetworkSecurityGroupToNicAssociation.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_security_group_to_subnet_association.AzureSecurityGroupToSubnetAssociation","text":"Attributes: Name Type Description subnet_id str The subnet id which needs to be connected to the NSG. network_security_group_id The network security group id which needs to be connected to the subnet.","title":"AzureSecurityGroupToSubnetAssociation"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_security_group_to_subnet_association.AzureSecurityGroupToSubnetAssociation.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_security_group_to_subnet_association.AzureSecurityGroupToSubnetAssociation.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_nsg.AzureNetworkSecurityGroup","text":"Attributes: Name Type Description name str The NSG name network_interface_ids List[str] List of network interface ids which the NSG connected to (if any) subnet_ids List[str] List of subnet ids which the NSG is connected to (if any) subnets List['AzureSubnet'] List of actual subnets which the NSG is connected to. network_interfaces List['AzureNic'] List of actual network interfacs which the NSG is connected to.","title":"AzureNetworkSecurityGroup"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_nsg.AzureNetworkSecurityGroup.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_nsg.AzureNetworkSecurityGroup.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_vnet_gateway.AzureVirtualNetworkGateway","text":"Attributes: Name Type Description name str The GW name gateway_type VirtualNetworkGatewayType The GW type sku_tier str The GW SKU tier (Basic, Standard, etc)","title":"AzureVirtualNetworkGateway"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_vnet_gateway.AzureVirtualNetworkGateway.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_vnet_gateway.AzureVirtualNetworkGateway.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/azure/network/index.html#cloudrail.knowledge.context.azure.network.azure_vnet_gateway.VirtualNetworkGatewayType","text":"An enumeration.","title":"VirtualNetworkGatewayType"},{"location":"context/azure/webapp/index.html","text":"Sample rules A few rules that use objects from this package: non_car_authentication_enabled_in_function_app from typing import List , Dict from cloudrail.knowledge.context.azure.azure_environment_context import AzureEnvironmentContext from cloudrail.knowledge.rules.azure.azure_base_rule import AzureBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class FunctionAppAuthenticationEnableRule ( AzureBaseRule ): def get_id ( self ) -> str : return 'non_car_authentication_enabled_in_function_app' def execute ( self , env_context : AzureEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for func_app in env_context . function_apps : if func_app . auth_settings is None or not func_app . auth_settings . enabled : issues . append ( Issue ( f 'The Function App ` { func_app . get_friendly_name () } ` does not have authentication enabled.' , func_app , func_app )) return issues def should_run_rule ( self , environment_context : AzureEnvironmentContext ) -> bool : return bool ( environment_context . function_apps ) AzureFunctionApp Attributes: Name Type Description name Function app resource name. auth_settings AuthSettings Function app authentication settings. http2_enabled bool Indication if http2 protocol should be enabled or not. site_config SiteConfig Function app site settings. custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process AzureAppService Attributes: Name Type Description name str The name of this AppService ftps_state FtpsState The FTPS state of this AppService config. Either AllAllowed, FTPSOnly or Disabled custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process AzureAppServiceConfig Attributes: Name Type Description name str The name of the AppService to which this config belongs ftps_state FtpsState The FTPS state defined in this config. Either AllAllowed, FTPSOnly or Disabled custom_invalidation ( self ) inherited A list of manual reasons why this resource should be invalidated exclude_from_invalidation ( self ) inherited A list of attributes that should be excluded from the invalidation process","title":"webapp"},{"location":"context/azure/webapp/index.html#sample-rules","text":"A few rules that use objects from this package: non_car_authentication_enabled_in_function_app from typing import List , Dict from cloudrail.knowledge.context.azure.azure_environment_context import AzureEnvironmentContext from cloudrail.knowledge.rules.azure.azure_base_rule import AzureBaseRule from cloudrail.knowledge.rules.base_rule import Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class FunctionAppAuthenticationEnableRule ( AzureBaseRule ): def get_id ( self ) -> str : return 'non_car_authentication_enabled_in_function_app' def execute ( self , env_context : AzureEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for func_app in env_context . function_apps : if func_app . auth_settings is None or not func_app . auth_settings . enabled : issues . append ( Issue ( f 'The Function App ` { func_app . get_friendly_name () } ` does not have authentication enabled.' , func_app , func_app )) return issues def should_run_rule ( self , environment_context : AzureEnvironmentContext ) -> bool : return bool ( environment_context . function_apps )","title":"Sample rules"},{"location":"context/azure/webapp/index.html#cloudrail.knowledge.context.azure.webapp.azure_function_app.AzureFunctionApp","text":"Attributes: Name Type Description name Function app resource name. auth_settings AuthSettings Function app authentication settings. http2_enabled bool Indication if http2 protocol should be enabled or not. site_config SiteConfig Function app site settings.","title":"AzureFunctionApp"},{"location":"context/azure/webapp/index.html#cloudrail.knowledge.context.azure.webapp.azure_function_app.AzureFunctionApp.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/azure/webapp/index.html#cloudrail.knowledge.context.azure.webapp.azure_function_app.AzureFunctionApp.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/azure/webapp/index.html#cloudrail.knowledge.context.azure.webapp.azure_app_service.AzureAppService","text":"Attributes: Name Type Description name str The name of this AppService ftps_state FtpsState The FTPS state of this AppService config. Either AllAllowed, FTPSOnly or Disabled","title":"AzureAppService"},{"location":"context/azure/webapp/index.html#cloudrail.knowledge.context.azure.webapp.azure_app_service.AzureAppService.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/azure/webapp/index.html#cloudrail.knowledge.context.azure.webapp.azure_app_service.AzureAppService.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"context/azure/webapp/index.html#cloudrail.knowledge.context.azure.webapp.azure_app_service_config.AzureAppServiceConfig","text":"Attributes: Name Type Description name str The name of the AppService to which this config belongs ftps_state FtpsState The FTPS state defined in this config. Either AllAllowed, FTPSOnly or Disabled","title":"AzureAppServiceConfig"},{"location":"context/azure/webapp/index.html#cloudrail.knowledge.context.azure.webapp.azure_app_service_config.AzureAppServiceConfig.custom_invalidation","text":"A list of manual reasons why this resource should be invalidated","title":"custom_invalidation()"},{"location":"context/azure/webapp/index.html#cloudrail.knowledge.context.azure.webapp.azure_app_service_config.AzureAppServiceConfig.exclude_from_invalidation","text":"A list of attributes that should be excluded from the invalidation process","title":"exclude_from_invalidation()"},{"location":"rules/index.html","text":"Cloudrail Rules If you're arrived at this page before reading the Overview , please head there first and come back. Rules in Cloudrail are written using Python code. All rules inherit from BaseRule which provides a set of basic capabilities and requirements. Generally, rules don't inherit from other classes, unless there's a set of rules that are largely the same with minor parameter differences. Metadata Every rule has metadata information that is required: rule_id - this is the unique machine-readable identifier of the rule. No two rules may have the same ID. Should follow the syntax : [car/non_car]_[rule abbreviated]. For example: non_car_iam_no_permissions_directly_to_user name - this is the human-friendly name of the rule. It will be presented anywhere the rule is shown to the user. It should be kept short, one sentence, without the period, and be one-line only. description - a multi-line human-friendly description of what the rule is about - why it exists and what it's trying to catch. Normally, this field does not contain how the rule actually works. rule_type - either context_aware or non_context_aware . Context-aware rules are ones that use data from more than one resource to make a determination. For example, if a logic requires the rule to check resource A, find its reference to resource B, then check B, then it's a context-aware rule. For more information, see What is considered a \"Context Aware Rule\"? . severity - the severity of the rule, one of Major, Medium, Low. Major - The rule should be enabled ASAP. Medium - The rule should be enabled soon, but requires more input and does not present an immediate security risk. Low - General best practices that can be tackled later on. These rules tend to have more negligible if left untouched for a month. security_layer - for the purpose of categorizing rules, we identify the layer that is being inspected. For a full list of options, look at SecurityLayer under the rule_metadata . You may ask for more options to be added to the list. resource_types - for the purpose of categorizing rules, we identify the type of resource the rule is targeting. For a full list of options, look at ResourceType under the rule_metadata . You may ask for more options to be added to the list. cloud_provider - rules generally target only one specific cloud provider. For a full list of options, look at the CloudProvider enum . logic - describes the busines logic behind the rule. For example, if the rule requires that Cloudrail should look at every region to see if an S3 bucket exists and if certain ACLs are in place, you would describe it as \u201cCloudrail will scan for S3 buckets used within each region and for each bucket, identify what bucket ACL is used. For each Bucket and Bucket ACL, Cloudrail will look at the permissions to identify if the Bucket is accessible.\u201d remediation_steps_tf - the remediation steps to take within the Terraform code to resolve the issue identified by this rule. remediation_steps_console - the remediation steps to take within the cloud console (such as AWS console or Azure portal) to resolve the issue identified by this rule. Evidence, Exposed and Violating Resources When a rule finds a violation, it records an Issue . The Issue contains three important fields: violating - a pointer to the resource that was found to be violating the rule. It is the object with the configuration that was necessary to determine the violation. exposed - a resource is \u201cexposed\u201d if it is \u201caffected\u201d by the violation. The exposed resource should be treated as the resources that would be \u201caffected\u201d as a result of the violation itself. evidence - The evidence field is responsible for surfacing all the data points used as part of the evaluation. There's a bit of logic that goes into the creation of this field and it has a specific formatting syntax. For more details, see Structure of Evidence Field . The actual code The rules are written in Python. You'll notice that the structure of a rule is pretty straightforward. There are a few main functions that are needed: get_id(self) -> str - this simply returns the rule_id of this rule. It is used to match the rule Python class with the metadata of the rule. execute(self, env_context: EnvironmentContext, parameters: Dict[ParameterType, any]) -> List[Issue] - this is where the main rule logic actually runs. The rule gets the environment context and can access all of the context information within it (for more information on context, see Context ). At the moment, the parameters are ignored. The exeecute function returns a list of issues it found (the list may be empty, if no issues found). should_run_rule(self, environment_context: EnvironmentContext) -> bool - before running a rule, the rule should make sure it has resources in the context to run on. We do this to not only improve performance, but also flag rules as \"skipped\" if this function returns False. That way, we can convey to users what actual rules were relevant for their environment. Writing rules You can write and use your own code in two main ways: Contribute new rules, or modifications to existing ones, straight into the cloudrail-knowledge repository. These contributions will be made available to all Cloudrail users. Create custom rules that are used only in your environment. A sample of such rules is available in the cloudrail-sample-custom-rules repository. The easiest way to start writing a rule is by copying an existing one that does something similar. Notice that a rule also has a test associated with it under the tests directory. Want to get started with your first rule? Follow our tutorial .","title":"How Rules Work"},{"location":"rules/index.html#cloudrail-rules","text":"If you're arrived at this page before reading the Overview , please head there first and come back. Rules in Cloudrail are written using Python code. All rules inherit from BaseRule which provides a set of basic capabilities and requirements. Generally, rules don't inherit from other classes, unless there's a set of rules that are largely the same with minor parameter differences.","title":"Cloudrail Rules"},{"location":"rules/index.html#metadata","text":"Every rule has metadata information that is required: rule_id - this is the unique machine-readable identifier of the rule. No two rules may have the same ID. Should follow the syntax : [car/non_car]_[rule abbreviated]. For example: non_car_iam_no_permissions_directly_to_user name - this is the human-friendly name of the rule. It will be presented anywhere the rule is shown to the user. It should be kept short, one sentence, without the period, and be one-line only. description - a multi-line human-friendly description of what the rule is about - why it exists and what it's trying to catch. Normally, this field does not contain how the rule actually works. rule_type - either context_aware or non_context_aware . Context-aware rules are ones that use data from more than one resource to make a determination. For example, if a logic requires the rule to check resource A, find its reference to resource B, then check B, then it's a context-aware rule. For more information, see What is considered a \"Context Aware Rule\"? . severity - the severity of the rule, one of Major, Medium, Low. Major - The rule should be enabled ASAP. Medium - The rule should be enabled soon, but requires more input and does not present an immediate security risk. Low - General best practices that can be tackled later on. These rules tend to have more negligible if left untouched for a month. security_layer - for the purpose of categorizing rules, we identify the layer that is being inspected. For a full list of options, look at SecurityLayer under the rule_metadata . You may ask for more options to be added to the list. resource_types - for the purpose of categorizing rules, we identify the type of resource the rule is targeting. For a full list of options, look at ResourceType under the rule_metadata . You may ask for more options to be added to the list. cloud_provider - rules generally target only one specific cloud provider. For a full list of options, look at the CloudProvider enum . logic - describes the busines logic behind the rule. For example, if the rule requires that Cloudrail should look at every region to see if an S3 bucket exists and if certain ACLs are in place, you would describe it as \u201cCloudrail will scan for S3 buckets used within each region and for each bucket, identify what bucket ACL is used. For each Bucket and Bucket ACL, Cloudrail will look at the permissions to identify if the Bucket is accessible.\u201d remediation_steps_tf - the remediation steps to take within the Terraform code to resolve the issue identified by this rule. remediation_steps_console - the remediation steps to take within the cloud console (such as AWS console or Azure portal) to resolve the issue identified by this rule.","title":"Metadata"},{"location":"rules/index.html#evidence-exposed-and-violating-resources","text":"When a rule finds a violation, it records an Issue . The Issue contains three important fields: violating - a pointer to the resource that was found to be violating the rule. It is the object with the configuration that was necessary to determine the violation. exposed - a resource is \u201cexposed\u201d if it is \u201caffected\u201d by the violation. The exposed resource should be treated as the resources that would be \u201caffected\u201d as a result of the violation itself. evidence - The evidence field is responsible for surfacing all the data points used as part of the evaluation. There's a bit of logic that goes into the creation of this field and it has a specific formatting syntax. For more details, see Structure of Evidence Field .","title":"Evidence, Exposed and Violating Resources"},{"location":"rules/index.html#the-actual-code","text":"The rules are written in Python. You'll notice that the structure of a rule is pretty straightforward. There are a few main functions that are needed: get_id(self) -> str - this simply returns the rule_id of this rule. It is used to match the rule Python class with the metadata of the rule. execute(self, env_context: EnvironmentContext, parameters: Dict[ParameterType, any]) -> List[Issue] - this is where the main rule logic actually runs. The rule gets the environment context and can access all of the context information within it (for more information on context, see Context ). At the moment, the parameters are ignored. The exeecute function returns a list of issues it found (the list may be empty, if no issues found). should_run_rule(self, environment_context: EnvironmentContext) -> bool - before running a rule, the rule should make sure it has resources in the context to run on. We do this to not only improve performance, but also flag rules as \"skipped\" if this function returns False. That way, we can convey to users what actual rules were relevant for their environment.","title":"The actual code"},{"location":"rules/index.html#writing-rules","text":"You can write and use your own code in two main ways: Contribute new rules, or modifications to existing ones, straight into the cloudrail-knowledge repository. These contributions will be made available to all Cloudrail users. Create custom rules that are used only in your environment. A sample of such rules is available in the cloudrail-sample-custom-rules repository. The easiest way to start writing a rule is by copying an existing one that does something similar. Notice that a rule also has a test associated with it under the tests directory. Want to get started with your first rule? Follow our tutorial .","title":"Writing rules"},{"location":"rules/context-aware.html","text":"What is considered a \"Context Aware Rule\"? A context aware rule is one where, when it inspects resource A\u2019s configuration for violation, it also must factor resource B's configuration. That is, the configuration of resource B will impact whether a violation is identified in resource A. Note, both Resource A or Resource B may be impacted by additional configuration parameters from other Resources. Those should also be factored into the \u201cContext\u201d. Please note, the \u201ctype\u201d of context can be even mixed! For example, it may require both networking and IAM context for a particular CAR that you might have in mind. Below are some of said examples: Example 1: Privilege escalations should consider SCP, Permission Boundary, In-line Policy, and IAM Policy. It should also consider whether a resource (in this case a user or resource) intends to use said IAM role. Example 2: Instances that are routable to the internet should be the only resources considered when analyzing security groups that expose port 22. Additionally, Cloudrail should consider the NACL used by the subnet that the instance belongs to.","title":"What is considered a \"Context Aware Rule\"?"},{"location":"rules/context-aware.html#what-is-considered-a-context-aware-rule","text":"A context aware rule is one where, when it inspects resource A\u2019s configuration for violation, it also must factor resource B's configuration. That is, the configuration of resource B will impact whether a violation is identified in resource A. Note, both Resource A or Resource B may be impacted by additional configuration parameters from other Resources. Those should also be factored into the \u201cContext\u201d. Please note, the \u201ctype\u201d of context can be even mixed! For example, it may require both networking and IAM context for a particular CAR that you might have in mind. Below are some of said examples: Example 1: Privilege escalations should consider SCP, Permission Boundary, In-line Policy, and IAM Policy. It should also consider whether a resource (in this case a user or resource) intends to use said IAM role. Example 2: Instances that are routable to the internet should be the only resources considered when analyzing security groups that expose port 22. Additionally, Cloudrail should consider the NACL used by the subnet that the instance belongs to.","title":"What is considered a \"Context Aware Rule\"?"},{"location":"rules/evidence.html","text":"Cloudrail's Rules' Evidence Field Cloudrail\u2019s context can be as rich as you want to design the CAR (context-aware rule). The challenge is determining how to showcase your logic! This is where the evidence field comes into play. The above example highlights critical resources that explain the path-to-violation. Let\u2019s call these \u201cnodes\u201d. Between the nodes, all components of the context in relation between node <> node are listed. In the above case, the particular violation was network related, but you may have a mixture of IAM and network objects to reveal! Note, all evidence fields must use this format. In order to get the evidence field to look like this, you will need to use the following syntax: For \u201cnodes\u201d, use \u201c~\u201d before and after the text. Currently, the text formatted is very sensitive to special characters. Make sure all of the text is part of the \u201cnode\u201d, and between the starting \u201c~\u201d and ending \u201c~\u201d. Additionally, Cloudrail will recognize text as a \u201cnode\u201d object by ending with a period. In fact, will treat any dot notation as a delimiter as a new line. Make sure to include dot notation! This example: ~text referring to the node should be included within here~. If you. put the string. like this. it will look like. ~this~. Translates to the following: text referring to the node should be included within here | if you | put the string | like this | it will look like this If you want to reference an actual object (e.g. name of the EC2 instance or subnet), the text should be highlighted as shown in the screenshot above. To do this, make sure the object reference is wrapped by single backticks like this: `aws_instance.public_ins.id` The text is delimited into a new line whenever you start a new sentence. This is how the above example (screenshot at the top) looks like pre-formatted: issues.append(Issue( f'~Internet~. ' f\"Instance `{rds_instance.get_friendly_name()}` is \" f\"in {rds_cluster.get_type()} `{rds_cluster.get_friendly_name()}`. \" f\"{rds_instance.get_type()} is on {rds_instance.network_resource.vpc.get_type()}\" f\" `{rds_instance.network_resource.vpc.get_friendly_name()}`. \" f\"{rds_instance.get_type()} uses subnet(s) \" f\"`{', '.join([x.get_friendly_name() for x in rds_instance.network_resource.security_groups])}`. \" f\"{rds_instance.get_type()} is reachable from the internet due to subnet(s) and route table(s). \" f\"Subnet uses Network ACL's \" f\"`{', '.join([x.network_acl.get_friendly_name() for x in rds_instance.network_resource.subnets])}`. \" f\"Network ACL's and security group(s) allows the RDS configured ports. \" f'~{rds_instance.get_type()}~', rds_cluster, security_group))","title":"Rules' Evidence Field"},{"location":"rules/evidence.html#cloudrails-rules-evidence-field","text":"Cloudrail\u2019s context can be as rich as you want to design the CAR (context-aware rule). The challenge is determining how to showcase your logic! This is where the evidence field comes into play. The above example highlights critical resources that explain the path-to-violation. Let\u2019s call these \u201cnodes\u201d. Between the nodes, all components of the context in relation between node <> node are listed. In the above case, the particular violation was network related, but you may have a mixture of IAM and network objects to reveal! Note, all evidence fields must use this format. In order to get the evidence field to look like this, you will need to use the following syntax: For \u201cnodes\u201d, use \u201c~\u201d before and after the text. Currently, the text formatted is very sensitive to special characters. Make sure all of the text is part of the \u201cnode\u201d, and between the starting \u201c~\u201d and ending \u201c~\u201d. Additionally, Cloudrail will recognize text as a \u201cnode\u201d object by ending with a period. In fact, will treat any dot notation as a delimiter as a new line. Make sure to include dot notation! This example: ~text referring to the node should be included within here~. If you. put the string. like this. it will look like. ~this~. Translates to the following: text referring to the node should be included within here | if you | put the string | like this | it will look like this If you want to reference an actual object (e.g. name of the EC2 instance or subnet), the text should be highlighted as shown in the screenshot above. To do this, make sure the object reference is wrapped by single backticks like this: `aws_instance.public_ins.id` The text is delimited into a new line whenever you start a new sentence. This is how the above example (screenshot at the top) looks like pre-formatted: issues.append(Issue( f'~Internet~. ' f\"Instance `{rds_instance.get_friendly_name()}` is \" f\"in {rds_cluster.get_type()} `{rds_cluster.get_friendly_name()}`. \" f\"{rds_instance.get_type()} is on {rds_instance.network_resource.vpc.get_type()}\" f\" `{rds_instance.network_resource.vpc.get_friendly_name()}`. \" f\"{rds_instance.get_type()} uses subnet(s) \" f\"`{', '.join([x.get_friendly_name() for x in rds_instance.network_resource.security_groups])}`. \" f\"{rds_instance.get_type()} is reachable from the internet due to subnet(s) and route table(s). \" f\"Subnet uses Network ACL's \" f\"`{', '.join([x.network_acl.get_friendly_name() for x in rds_instance.network_resource.subnets])}`. \" f\"Network ACL's and security group(s) allows the RDS configured ports. \" f'~{rds_instance.get_type()}~', rds_cluster, security_group))","title":"Cloudrail's Rules' Evidence Field"},{"location":"rules/tutorial/index.html","text":"Tutorial: Writing your own rule If you're arrived at this page before reading the overview on rules , please head there first and come back. In this tutorial, we'll take you step by step through writing your own Cloudrail rule. Prerequisites You need to have a basic understanding of Python. You do not need an expert level understanding. Install your Python dev tool of choice. In this example, we'll by using PyCharm CE. Assumptions This tutorial is written assuming you use MacOS, but can work similarly on Linux, Windows, etc. We will create a new rule in its own directory. If you want to contribute to the main cloudrail-knowledge repository, you should clone the repository instead of setting up your own working directory. Scenario In this tutorial we will be creating a rule which we'll use to list all of the roles that allow third party access from AWS accounts that haven't been approved yet. The goal is to flush out roles that were added without going through due process. Step 1: Create your work environment Create a directory where you'll be saving your rules. For example, ~/code/cloudrail-sample-custom-rules . In this directory, create a Python venv , like so: python3 -m venv venv Go into the venv: source venv/bin/activate And install the needed Python libraries: pip install cloudrail-knowledge Create the src (where the rule code will be) and tests (where tests will reside) directories: mkdir src mkdir tests Set up your IDE to the directory you've created. For example, in PyCharm CE, this means creating a New Project (under the File menu) and selecting the directory you created. PyCharm CE will recognize the venv you created. Step 2: Create the metadata for your rule All rules must have metadata . In the src directory, create rules_metadata.yaml with the required information. Note that the root of the file must be rules_metadata . rules_metadata : - cloud_provider : amazon_web_services rule_id : ensure_only_approved_third_parties_can_assume_roles name : Ensure only approved third party accounts can assume roles severity : major description : We would like to control which third party accounts can assume roles in our environment. This role has an approved-list of accounts which will be expanded over time. human_readable_logic : Cloudrail will review all IAM roles' trust policy and look at the accounts allowed. remediation_steps_console : Remove the role, or add its account to the approved list in this rule. remediation_steps_tf : Remove the aws_iam_role, or add the account to the approved list in this rule. rule_type : non_context_aware security_layer : iam resource_type : - iam NOTE: If you're contributing to the cloudrail-knowledge repository, the metadata files already exist. You need to add to them, depending on the cloud provider the rule applies to, instead of creating a new metadata file. Step 3: Create the rule class The easiest way to do this is by finding an existing rule in the cloudrail-knowledge repository and copying it. Then clean up the contents of the functions. The rule should be saved as a Python file in the src directory. Your rule should now look like this: from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import BaseRule , Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureOnlyAssumesThirdPartiesCanAssumeRoles ( BaseRule ): def get_id ( self ) -> str : return 'ensure_only_approved_third_parties_can_assume_roles' def get_needed_parameters ( self ) -> List [ ParameterType ]: return [] def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return True NOTE: The get_id needs to return the same id as you picked in the rule's metadata. Step 4: Write the logic Within the execute function, we implement the logic of the rule. For this tutorial, we've picked this: def execute ( self , env_context : EnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for role in env_context . roles : for statement in role . assume_role_policy . statements : if statement . effect == StatementEffect . ALLOW : for principal in statement . principal . principal_values : if arn_utils . is_valid_arn ( principal ) and arn_utils . get_arn_account_id ( principal ) not in self . approved_list_of_third_parties : issues . append ( Issue ( f 'The IAM role ` { role . get_friendly_name () } ` has a trust policy that allows account ` { arn_utils . get_arn_account_id ( principal ) } ` ' f 'to assume it but that is not in the list of pre-approved third-party accounts' , role , role )) return issues The above code requires that you also add imports at the top of the class: from cloudrail.knowledge.utils.arn_utils import build_arn from cloudrail.knowledge.context.aws.iam.policy_statement import StatementEffect The logic here iterates over all the roles in the context (which represents all roles in the environment - both those that already exist and those being created). For each role, it iterates over the assume role policy's statements. For each statement, it looks at the principals included in it. For each principal, it checks to see if its AWS account ID is in a predetermined list of accounts we're approving of. If it's not in the list, we create an Issue with the relevant information. The list of approved third party accounts is defined like so (add the init function at the top of the Python class): def __init__ ( self ): self . approved_list_of_third_parties : List [ str ] = [ \"645376637575\" , # Indeni Cloudrail \"464622532012\" , # DataDog ] Step 5: Update the should_run_rule logic Before running the rule, the Cloudrail engine will call should_run_rule and will only continue if it returns True . Right now, we have it returning True always, but we should update that so it only does so if there are roles to review: def should_run_rule ( self , environment_context : EnvironmentContext ) -> bool : return bool ( environment_context . roles ) There are two reasons to do this: To save on run time, for CPU-intensive rules where the logic might execute even when it's not needed. More importantly, we do this to signal to the user that the rule applies to their environment. If it doesn't, it will be marked as Skipped. This helps users know that Cloudrail understands which rules apply, and which don't, to their environment. Step 6: Add tests At this point, our rule's code is complete. We now need to add tests. NOTE: In software development, there's the concept of TDD (test driven development) where you write the tests first, and then your logic. You can apply that to rule writing as well. We didn't take that path in this tutorial to make it clearer for the reader. In the tests directory (remember, it's next to the src directory), we create our test class. This is the test we need for the above rule: import unittest from cloudrail.knowledge.context.aws.account.account import Account from cloudrail.knowledge.context.aws.iam.policy import AssumeRolePolicy from cloudrail.knowledge.context.aws.iam.policy_statement import PolicyStatement , StatementEffect from cloudrail.knowledge.context.aws.iam.principal import Principal , PrincipalType from cloudrail.knowledge.context.aws.iam.role import Role from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import RuleResultType from src.ensure_only_approved_third_parties_can_assume_roles import EnsureOnlyAssumesThirdPartiesCanAssumeRoles class TestEnsureOnlyAssumesThirdPartiesCanAssumeRoles ( unittest . TestCase ): def setUp ( self ): self . rule = EnsureOnlyAssumesThirdPartiesCanAssumeRoles () def test_ensure_only_approved_third_parties_can_assume_roles_fail ( self ): # Arrange context = AwsEnvironmentContext () account = Account ( \"a\" , \"b\" , False ) context . accounts . append ( account ) role = Role ( \"a\" , \"don't know\" , \"not_approved_role\" , [], \"not_approved_role\" , None , None ) context . roles . append ( role ) principal = Principal ( principal_type = PrincipalType . AWS , principal_values = [ \"arn:aws:iam::123456789012:root\" ]) role_assume_policy = AssumeRolePolicy ( account . account_name , role . role_name , role . arn , [ PolicyStatement ( StatementEffect . ALLOW , [ \"assume role etc\" ], [ \"*\" ], principal , 'test123' , )], \"\" ) role . assume_role_policy = role_assume_policy # Act result = self . rule . run ( context , {}) # Assert self . assertEqual ( RuleResultType . FAILED , result . status ) self . assertEqual ( 1 , len ( result . issues )) def test_ensure_only_approved_third_parties_can_assume_roles_pass ( self ): # Arrange context = AwsEnvironmentContext () account = Account ( \"a\" , \"b\" , False ) context . accounts . append ( account ) role = Role ( \"a\" , \"don't know\" , \"approved_role\" , [], \"approved_role\" , None , None ) context . roles . append ( role ) principal = Principal ( principal_type = PrincipalType . AWS , principal_values = [ \"arn:aws:iam::645376637575:root\" ]) role_assume_policy = AssumeRolePolicy ( account . account_name , role . role_name , role . arn , [ PolicyStatement ( StatementEffect . ALLOW , [ \"assume role etc\" ], [ \"*\" ], principal , 'test123' , )], \"\" ) role . assume_role_policy = role_assume_policy # Act result = self . rule . run ( context , {}) # Assert self . assertEqual ( RuleResultType . SUCCESS , result . status ) self . assertEqual ( 0 , len ( result . issues )) Let's look at a few things here: Note the setUp function declares the rule we're testing against. There are two test functions one for _fail and one for _pass . The idea is that we test the rule catching a violation (\"fail\") and the rule not catching a violation (because the configuration is ok - which is a \"pass\"). In each test function, we \"build\" a mock context that the rule runs against. This is important to understand - we're actually creating here the objects that Cloudrail would normally create as part of the context building. We do this in order to make this truly a unit-test, where the rule is tested against mock content. If you compare the test functions, notice the principal defined and what AWS account ID it's using. Generally, you'd want to try and add as many test cases as makes sense, to simulate different scenarios. QUESTION: Why can't I just supply a Terraform code to test again? ANSWER: Our context has multiple sources of input, including multiple live environments (cloud accounts) and one or more infrastructure-as-code languages. The building phase in our context translates all of these sources into our central context model. Testing of our context is done in a separate, private, repository. So when testing rules, you should assume the translation from those different sources of input is already done, and you can rely on the context to be built. Step 7: Run unit tests Now, you should run the test class. In PyCharm, it's as easy as clicking on the green arrow to the left of the test class's name: If you've done everything correctly, the tests should pass. If they fail, click on the failed test and look at the log to see what may be wrong. Step 8: Run an end-to-end test on your rule Want to see what kind of output Cloudrail will actually generate for your rule? Follow these steps: Create a main.tf that simulates the issue you want to catch. In our example, this would work: provider \"aws\" { region = \"us-east-1\" } resource \"aws_iam_role\" \"myexample\" { name = \"myexample\" assume_role_policy = <<EOF { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"\", \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"arn:aws:iam::111122223333:user/LiJuan\" }, \"Action\": \"sts:AssumeRole\" } ] } EOF } Generate a plan for the above file ( terraform init , terraform plan -out=plan.out ). Run Cloudrail with this plan, using your custom rule: docker run --rm -it -v $PWD :/data -v cloudrail:/indeni indeni/cloudrail-cli run -p plan.out --auto-approve -v --custom-rules src Note the --custom-rules at the end, with the directory where the rule is located. Your results should look like this: \u2714 Reading custom rules... \u2714 Preparing a filtered Terraform plan locally before uploading to Cloudrail Service... \u2714 Re-running your Terraform plan through a customized 'terraform plan' to generate needed context data... \u2714 Filtering and processing Terraform data... \u2714 Obfuscating IP addresses... \u2714 Submitting Terraform data to the Cloudrail Service... \u2714 Your job id is: 4a2924aa-378e-47b0-8340-ed7e97071760 \u2714 Building simulated graph model, representing how the cloud account will look like if the plan were to be applied... \u2714 Running context-aware rules... \u2714 Running custom rules... \u2714 Returning results, almost done! \u2714 Assessment complete, fetching results... WARNINGs found: Rule: Ensure only approved third party accounts can assume roles - 1 Resources Exposed: ----------------------------------------------- - Exposed Resource: [aws_iam_role.myexample] (main.tf:5) Violating Resource: [aws_iam_role.myexample] (main.tf:5) Evidence: | The IAM role aws_iam_role.myexample has a trust policy that allows account 111122223333 to assume it but that is not in the list of pre-approved third-party accounts Wrap it up That's it for the rule development. You can now either submit it as a PR to cloudrail-knowledge, or save it in your own repository for use with Cloudrail. Parting notes By default, Cloudrail will only show violations for resources that are managed in infrastructure-as-code. If, for your rule, you want it to show violatiosn for all resources, even those that only existing in the live environment, add this to your rule: @staticmethod def filter_non_iac_managed_issues () -> bool : return False","title":"Tutorial - Writing Your Own Rule"},{"location":"rules/tutorial/index.html#tutorial-writing-your-own-rule","text":"If you're arrived at this page before reading the overview on rules , please head there first and come back. In this tutorial, we'll take you step by step through writing your own Cloudrail rule.","title":"Tutorial: Writing your own rule"},{"location":"rules/tutorial/index.html#prerequisites","text":"You need to have a basic understanding of Python. You do not need an expert level understanding. Install your Python dev tool of choice. In this example, we'll by using PyCharm CE.","title":"Prerequisites"},{"location":"rules/tutorial/index.html#assumptions","text":"This tutorial is written assuming you use MacOS, but can work similarly on Linux, Windows, etc. We will create a new rule in its own directory. If you want to contribute to the main cloudrail-knowledge repository, you should clone the repository instead of setting up your own working directory.","title":"Assumptions"},{"location":"rules/tutorial/index.html#scenario","text":"In this tutorial we will be creating a rule which we'll use to list all of the roles that allow third party access from AWS accounts that haven't been approved yet. The goal is to flush out roles that were added without going through due process.","title":"Scenario"},{"location":"rules/tutorial/index.html#step-1-create-your-work-environment","text":"Create a directory where you'll be saving your rules. For example, ~/code/cloudrail-sample-custom-rules . In this directory, create a Python venv , like so: python3 -m venv venv Go into the venv: source venv/bin/activate And install the needed Python libraries: pip install cloudrail-knowledge Create the src (where the rule code will be) and tests (where tests will reside) directories: mkdir src mkdir tests Set up your IDE to the directory you've created. For example, in PyCharm CE, this means creating a New Project (under the File menu) and selecting the directory you created. PyCharm CE will recognize the venv you created.","title":"Step 1: Create your work environment"},{"location":"rules/tutorial/index.html#step-2-create-the-metadata-for-your-rule","text":"All rules must have metadata . In the src directory, create rules_metadata.yaml with the required information. Note that the root of the file must be rules_metadata . rules_metadata : - cloud_provider : amazon_web_services rule_id : ensure_only_approved_third_parties_can_assume_roles name : Ensure only approved third party accounts can assume roles severity : major description : We would like to control which third party accounts can assume roles in our environment. This role has an approved-list of accounts which will be expanded over time. human_readable_logic : Cloudrail will review all IAM roles' trust policy and look at the accounts allowed. remediation_steps_console : Remove the role, or add its account to the approved list in this rule. remediation_steps_tf : Remove the aws_iam_role, or add the account to the approved list in this rule. rule_type : non_context_aware security_layer : iam resource_type : - iam NOTE: If you're contributing to the cloudrail-knowledge repository, the metadata files already exist. You need to add to them, depending on the cloud provider the rule applies to, instead of creating a new metadata file.","title":"Step 2: Create the metadata for your rule"},{"location":"rules/tutorial/index.html#step-3-create-the-rule-class","text":"The easiest way to do this is by finding an existing rule in the cloudrail-knowledge repository and copying it. Then clean up the contents of the functions. The rule should be saved as a Python file in the src directory. Your rule should now look like this: from typing import List , Dict from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import BaseRule , Issue from cloudrail.knowledge.rules.rule_parameters.base_paramerter import ParameterType class EnsureOnlyAssumesThirdPartiesCanAssumeRoles ( BaseRule ): def get_id ( self ) -> str : return 'ensure_only_approved_third_parties_can_assume_roles' def get_needed_parameters ( self ) -> List [ ParameterType ]: return [] def execute ( self , env_context : AwsEnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] return issues def should_run_rule ( self , environment_context : AwsEnvironmentContext ) -> bool : return True NOTE: The get_id needs to return the same id as you picked in the rule's metadata.","title":"Step 3: Create the rule class"},{"location":"rules/tutorial/index.html#step-4-write-the-logic","text":"Within the execute function, we implement the logic of the rule. For this tutorial, we've picked this: def execute ( self , env_context : EnvironmentContext , parameters : Dict [ ParameterType , any ]) -> List [ Issue ]: issues : List [ Issue ] = [] for role in env_context . roles : for statement in role . assume_role_policy . statements : if statement . effect == StatementEffect . ALLOW : for principal in statement . principal . principal_values : if arn_utils . is_valid_arn ( principal ) and arn_utils . get_arn_account_id ( principal ) not in self . approved_list_of_third_parties : issues . append ( Issue ( f 'The IAM role ` { role . get_friendly_name () } ` has a trust policy that allows account ` { arn_utils . get_arn_account_id ( principal ) } ` ' f 'to assume it but that is not in the list of pre-approved third-party accounts' , role , role )) return issues The above code requires that you also add imports at the top of the class: from cloudrail.knowledge.utils.arn_utils import build_arn from cloudrail.knowledge.context.aws.iam.policy_statement import StatementEffect The logic here iterates over all the roles in the context (which represents all roles in the environment - both those that already exist and those being created). For each role, it iterates over the assume role policy's statements. For each statement, it looks at the principals included in it. For each principal, it checks to see if its AWS account ID is in a predetermined list of accounts we're approving of. If it's not in the list, we create an Issue with the relevant information. The list of approved third party accounts is defined like so (add the init function at the top of the Python class): def __init__ ( self ): self . approved_list_of_third_parties : List [ str ] = [ \"645376637575\" , # Indeni Cloudrail \"464622532012\" , # DataDog ]","title":"Step 4: Write the logic"},{"location":"rules/tutorial/index.html#step-5-update-the-should_run_rule-logic","text":"Before running the rule, the Cloudrail engine will call should_run_rule and will only continue if it returns True . Right now, we have it returning True always, but we should update that so it only does so if there are roles to review: def should_run_rule ( self , environment_context : EnvironmentContext ) -> bool : return bool ( environment_context . roles ) There are two reasons to do this: To save on run time, for CPU-intensive rules where the logic might execute even when it's not needed. More importantly, we do this to signal to the user that the rule applies to their environment. If it doesn't, it will be marked as Skipped. This helps users know that Cloudrail understands which rules apply, and which don't, to their environment.","title":"Step 5: Update the should_run_rule logic"},{"location":"rules/tutorial/index.html#step-6-add-tests","text":"At this point, our rule's code is complete. We now need to add tests. NOTE: In software development, there's the concept of TDD (test driven development) where you write the tests first, and then your logic. You can apply that to rule writing as well. We didn't take that path in this tutorial to make it clearer for the reader. In the tests directory (remember, it's next to the src directory), we create our test class. This is the test we need for the above rule: import unittest from cloudrail.knowledge.context.aws.account.account import Account from cloudrail.knowledge.context.aws.iam.policy import AssumeRolePolicy from cloudrail.knowledge.context.aws.iam.policy_statement import PolicyStatement , StatementEffect from cloudrail.knowledge.context.aws.iam.principal import Principal , PrincipalType from cloudrail.knowledge.context.aws.iam.role import Role from cloudrail.knowledge.context.aws.aws_environment_context import AwsEnvironmentContext from cloudrail.knowledge.rules.base_rule import RuleResultType from src.ensure_only_approved_third_parties_can_assume_roles import EnsureOnlyAssumesThirdPartiesCanAssumeRoles class TestEnsureOnlyAssumesThirdPartiesCanAssumeRoles ( unittest . TestCase ): def setUp ( self ): self . rule = EnsureOnlyAssumesThirdPartiesCanAssumeRoles () def test_ensure_only_approved_third_parties_can_assume_roles_fail ( self ): # Arrange context = AwsEnvironmentContext () account = Account ( \"a\" , \"b\" , False ) context . accounts . append ( account ) role = Role ( \"a\" , \"don't know\" , \"not_approved_role\" , [], \"not_approved_role\" , None , None ) context . roles . append ( role ) principal = Principal ( principal_type = PrincipalType . AWS , principal_values = [ \"arn:aws:iam::123456789012:root\" ]) role_assume_policy = AssumeRolePolicy ( account . account_name , role . role_name , role . arn , [ PolicyStatement ( StatementEffect . ALLOW , [ \"assume role etc\" ], [ \"*\" ], principal , 'test123' , )], \"\" ) role . assume_role_policy = role_assume_policy # Act result = self . rule . run ( context , {}) # Assert self . assertEqual ( RuleResultType . FAILED , result . status ) self . assertEqual ( 1 , len ( result . issues )) def test_ensure_only_approved_third_parties_can_assume_roles_pass ( self ): # Arrange context = AwsEnvironmentContext () account = Account ( \"a\" , \"b\" , False ) context . accounts . append ( account ) role = Role ( \"a\" , \"don't know\" , \"approved_role\" , [], \"approved_role\" , None , None ) context . roles . append ( role ) principal = Principal ( principal_type = PrincipalType . AWS , principal_values = [ \"arn:aws:iam::645376637575:root\" ]) role_assume_policy = AssumeRolePolicy ( account . account_name , role . role_name , role . arn , [ PolicyStatement ( StatementEffect . ALLOW , [ \"assume role etc\" ], [ \"*\" ], principal , 'test123' , )], \"\" ) role . assume_role_policy = role_assume_policy # Act result = self . rule . run ( context , {}) # Assert self . assertEqual ( RuleResultType . SUCCESS , result . status ) self . assertEqual ( 0 , len ( result . issues )) Let's look at a few things here: Note the setUp function declares the rule we're testing against. There are two test functions one for _fail and one for _pass . The idea is that we test the rule catching a violation (\"fail\") and the rule not catching a violation (because the configuration is ok - which is a \"pass\"). In each test function, we \"build\" a mock context that the rule runs against. This is important to understand - we're actually creating here the objects that Cloudrail would normally create as part of the context building. We do this in order to make this truly a unit-test, where the rule is tested against mock content. If you compare the test functions, notice the principal defined and what AWS account ID it's using. Generally, you'd want to try and add as many test cases as makes sense, to simulate different scenarios. QUESTION: Why can't I just supply a Terraform code to test again? ANSWER: Our context has multiple sources of input, including multiple live environments (cloud accounts) and one or more infrastructure-as-code languages. The building phase in our context translates all of these sources into our central context model. Testing of our context is done in a separate, private, repository. So when testing rules, you should assume the translation from those different sources of input is already done, and you can rely on the context to be built.","title":"Step 6: Add tests"},{"location":"rules/tutorial/index.html#step-7-run-unit-tests","text":"Now, you should run the test class. In PyCharm, it's as easy as clicking on the green arrow to the left of the test class's name: If you've done everything correctly, the tests should pass. If they fail, click on the failed test and look at the log to see what may be wrong.","title":"Step 7: Run unit tests"},{"location":"rules/tutorial/index.html#step-8-run-an-end-to-end-test-on-your-rule","text":"Want to see what kind of output Cloudrail will actually generate for your rule? Follow these steps: Create a main.tf that simulates the issue you want to catch. In our example, this would work: provider \"aws\" { region = \"us-east-1\" } resource \"aws_iam_role\" \"myexample\" { name = \"myexample\" assume_role_policy = <<EOF { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"\", \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"arn:aws:iam::111122223333:user/LiJuan\" }, \"Action\": \"sts:AssumeRole\" } ] } EOF } Generate a plan for the above file ( terraform init , terraform plan -out=plan.out ). Run Cloudrail with this plan, using your custom rule: docker run --rm -it -v $PWD :/data -v cloudrail:/indeni indeni/cloudrail-cli run -p plan.out --auto-approve -v --custom-rules src Note the --custom-rules at the end, with the directory where the rule is located. Your results should look like this: \u2714 Reading custom rules... \u2714 Preparing a filtered Terraform plan locally before uploading to Cloudrail Service... \u2714 Re-running your Terraform plan through a customized 'terraform plan' to generate needed context data... \u2714 Filtering and processing Terraform data... \u2714 Obfuscating IP addresses... \u2714 Submitting Terraform data to the Cloudrail Service... \u2714 Your job id is: 4a2924aa-378e-47b0-8340-ed7e97071760 \u2714 Building simulated graph model, representing how the cloud account will look like if the plan were to be applied... \u2714 Running context-aware rules... \u2714 Running custom rules... \u2714 Returning results, almost done! \u2714 Assessment complete, fetching results... WARNINGs found: Rule: Ensure only approved third party accounts can assume roles - 1 Resources Exposed: ----------------------------------------------- - Exposed Resource: [aws_iam_role.myexample] (main.tf:5) Violating Resource: [aws_iam_role.myexample] (main.tf:5) Evidence: | The IAM role aws_iam_role.myexample has a trust policy that allows account 111122223333 to assume it but that is not in the list of pre-approved third-party accounts","title":"Step 8: Run an end-to-end test on your rule"},{"location":"rules/tutorial/index.html#wrap-it-up","text":"That's it for the rule development. You can now either submit it as a PR to cloudrail-knowledge, or save it in your own repository for use with Cloudrail.","title":"Wrap it up"},{"location":"rules/tutorial/index.html#parting-notes","text":"By default, Cloudrail will only show violations for resources that are managed in infrastructure-as-code. If, for your rule, you want it to show violatiosn for all resources, even those that only existing in the live environment, add this to your rule: @staticmethod def filter_non_iac_managed_issues () -> bool : return False","title":"Parting notes"}]}